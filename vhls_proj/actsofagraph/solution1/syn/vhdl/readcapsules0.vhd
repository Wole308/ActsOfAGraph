-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1.3
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity readcapsules0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_kvdram_V_AWVALID : OUT STD_LOGIC;
    m_axi_kvdram_V_AWREADY : IN STD_LOGIC;
    m_axi_kvdram_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_kvdram_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kvdram_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_kvdram_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kvdram_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kvdram_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kvdram_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kvdram_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kvdram_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kvdram_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kvdram_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kvdram_V_WVALID : OUT STD_LOGIC;
    m_axi_kvdram_V_WREADY : IN STD_LOGIC;
    m_axi_kvdram_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_kvdram_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_kvdram_V_WLAST : OUT STD_LOGIC;
    m_axi_kvdram_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kvdram_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kvdram_V_ARVALID : OUT STD_LOGIC;
    m_axi_kvdram_V_ARREADY : IN STD_LOGIC;
    m_axi_kvdram_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_kvdram_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kvdram_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_kvdram_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kvdram_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kvdram_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kvdram_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kvdram_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kvdram_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kvdram_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kvdram_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kvdram_V_RVALID : IN STD_LOGIC;
    m_axi_kvdram_V_RREADY : OUT STD_LOGIC;
    m_axi_kvdram_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_kvdram_V_RLAST : IN STD_LOGIC;
    m_axi_kvdram_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kvdram_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kvdram_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kvdram_V_BVALID : IN STD_LOGIC;
    m_axi_kvdram_V_BREADY : OUT STD_LOGIC;
    m_axi_kvdram_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kvdram_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kvdram_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    kvdram_V_offset : IN STD_LOGIC_VECTOR (25 downto 0);
    BIGcapsule0_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    BIGcapsule0_V_ce0 : OUT STD_LOGIC;
    BIGcapsule0_V_we0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    BIGcapsule0_V_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
    BIGcapsule0_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
    BIGcapsule1_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    BIGcapsule1_V_ce0 : OUT STD_LOGIC;
    BIGcapsule1_V_we0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    BIGcapsule1_V_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
    BIGcapsule1_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
    BIGcapsule2_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    BIGcapsule2_V_ce0 : OUT STD_LOGIC;
    BIGcapsule2_V_we0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    BIGcapsule2_V_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
    BIGcapsule2_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
    BIGcapsule3_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    BIGcapsule3_V_ce0 : OUT STD_LOGIC;
    BIGcapsule3_V_we0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    BIGcapsule3_V_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
    BIGcapsule3_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
    capsule0_key_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    capsule0_key_ce0 : OUT STD_LOGIC;
    capsule0_key_we0 : OUT STD_LOGIC;
    capsule0_key_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    capsule0_value_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    capsule0_value_ce0 : OUT STD_LOGIC;
    capsule0_value_we0 : OUT STD_LOGIC;
    capsule0_value_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    capsule1_key_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    capsule1_key_ce0 : OUT STD_LOGIC;
    capsule1_key_we0 : OUT STD_LOGIC;
    capsule1_key_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    capsule1_value_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    capsule1_value_ce0 : OUT STD_LOGIC;
    capsule1_value_we0 : OUT STD_LOGIC;
    capsule1_value_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    capsule2_key_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    capsule2_key_ce0 : OUT STD_LOGIC;
    capsule2_key_we0 : OUT STD_LOGIC;
    capsule2_key_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    capsule2_value_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    capsule2_value_ce0 : OUT STD_LOGIC;
    capsule2_value_we0 : OUT STD_LOGIC;
    capsule2_value_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    capsule3_key_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    capsule3_key_ce0 : OUT STD_LOGIC;
    capsule3_key_we0 : OUT STD_LOGIC;
    capsule3_key_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    capsule3_value_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    capsule3_value_ce0 : OUT STD_LOGIC;
    capsule3_value_we0 : OUT STD_LOGIC;
    capsule3_value_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    offset : IN STD_LOGIC_VECTOR (23 downto 0);
    capsulemetadata_globaloffset : IN STD_LOGIC_VECTOR (31 downto 0);
    capsulemetadata_localoffset : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of readcapsules0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv32_400 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000000";
    constant ap_const_lv32_600 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000011000000000";
    constant ap_const_lv32_800 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100000000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_0_reg_406 : STD_LOGIC_VECTOR (5 downto 0);
    signal loffset_fu_432_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal loffset_reg_1965 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1486_fu_436_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln1486_reg_1970 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1488_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1488_reg_1975 : STD_LOGIC_VECTOR (0 downto 0);
    signal loadoffset0_kvs_fu_446_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loadoffset0_kvs_reg_1979 : STD_LOGIC_VECTOR (31 downto 0);
    signal loadoffset1_kvs_fu_458_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loadoffset1_kvs_reg_1984 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal loadoffset2_kvs_fu_469_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loadoffset2_kvs_reg_1989 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal loadoffset3_kvs_fu_480_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loadoffset3_kvs_reg_1994 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln1524_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1524_reg_2047 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state9_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_fu_498_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_2051 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal idx_fu_538_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal idx_reg_2056 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_readkeyvalues0_fu_418_ap_ready : STD_LOGIC;
    signal grp_readkeyvalues0_fu_418_ap_done : STD_LOGIC;
    signal ap_block_state8_on_subcall_done : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state9 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal grp_readkeyvalues0_fu_418_ap_start : STD_LOGIC;
    signal grp_readkeyvalues0_fu_418_ap_idle : STD_LOGIC;
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWVALID : STD_LOGIC;
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WVALID : STD_LOGIC;
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WLAST : STD_LOGIC;
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARVALID : STD_LOGIC;
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_RREADY : STD_LOGIC;
    signal grp_readkeyvalues0_fu_418_m_axi_kvdram_V_BREADY : STD_LOGIC;
    signal grp_readkeyvalues0_fu_418_buffer_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_readkeyvalues0_fu_418_buffer_V_ce0 : STD_LOGIC;
    signal grp_readkeyvalues0_fu_418_buffer_V_we0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_readkeyvalues0_fu_418_buffer_V_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_readkeyvalues0_fu_418_offset_kvs : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1521_fu_486_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal capsulemetadata_loca_reg_396 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_i_0_phi_fu_410_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_readkeyvalues0_fu_418_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln327_fu_552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1526_fu_584_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal keyvalue_key_fu_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_72_fu_1031_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_64_fu_188 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_75_fu_966_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_8_fu_192 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_87_fu_1315_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_65_fu_196 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_89_fu_1250_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_32_fu_200 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_103_fu_1599_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_66_fu_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_105_fu_1534_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_48_fu_208 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_119_fu_1883_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_67_fu_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_121_fu_1818_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1497_fu_453_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1505_fu_464_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1513_fu_475_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1524_fu_504_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln1526_1_fu_508_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1526_fu_512_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_37_fu_522_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1526_1_fu_517_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln316_fu_530_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal idy_fu_542_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln326_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal keyvalue_value_fu_605_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln330_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln326_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal keyvalue_value_1_fu_630_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_68_fu_790_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln330_fu_818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln334_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln330_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln334_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal keyvalue_value_2_fu_655_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_69_fu_810_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln334_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln334_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln338_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal keyvalue_value_3_fu_680_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_70_fu_836_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln338_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln342_fu_690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln338_fu_876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln342_fu_882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal keyvalue_value_4_fu_705_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_71_fu_862_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln342_fu_896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln346_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln342_fu_902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln346_fu_908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal keyvalue_value_5_fu_730_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_72_fu_888_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln346_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln350_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln346_fu_928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln350_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal keyvalue_value_6_fu_755_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_73_fu_914_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln350_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln354_fu_765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln350_fu_954_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln354_fu_960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal keyvalue_value_7_fu_780_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_74_fu_940_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_64_fu_601_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_1_fu_620_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_65_fu_975_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_2_fu_645_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_66_fu_983_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_3_fu_670_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_67_fu_991_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_4_fu_695_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_68_fu_999_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_5_fu_720_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_69_fu_1007_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_6_fu_745_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_70_fu_1015_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_7_fu_770_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_71_fu_1023_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_8_fu_1044_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_9_fu_1064_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_82_fu_1194_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_76_fu_1084_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_83_fu_1202_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_77_fu_1104_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_84_fu_1210_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_78_fu_1124_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_85_fu_1218_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_79_fu_1144_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_86_fu_1226_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_80_fu_1164_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_87_fu_1234_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_81_fu_1184_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_88_fu_1242_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_73_fu_1040_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_9_fu_1054_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_80_fu_1259_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_74_fu_1074_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_81_fu_1267_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_75_fu_1094_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_82_fu_1275_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_76_fu_1114_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_83_fu_1283_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_77_fu_1134_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_84_fu_1291_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_78_fu_1154_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_85_fu_1299_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_79_fu_1174_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_86_fu_1307_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_90_fu_1328_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_91_fu_1348_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_98_fu_1478_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_92_fu_1368_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_99_fu_1486_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_93_fu_1388_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_100_fu_1494_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_94_fu_1408_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_101_fu_1502_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_95_fu_1428_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_102_fu_1510_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_96_fu_1448_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_103_fu_1518_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_97_fu_1468_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_104_fu_1526_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_88_fu_1324_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_89_fu_1338_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_96_fu_1543_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_90_fu_1358_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_97_fu_1551_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_91_fu_1378_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_98_fu_1559_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_92_fu_1398_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_99_fu_1567_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_93_fu_1418_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_100_fu_1575_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_94_fu_1438_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_101_fu_1583_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_95_fu_1458_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_102_fu_1591_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_106_fu_1612_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_107_fu_1632_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_114_fu_1762_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_108_fu_1652_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_115_fu_1770_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_109_fu_1672_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_116_fu_1778_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_110_fu_1692_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_117_fu_1786_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_111_fu_1712_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_118_fu_1794_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_112_fu_1732_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_119_fu_1802_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_113_fu_1752_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_value_120_fu_1810_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_104_fu_1608_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_105_fu_1622_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_112_fu_1827_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_106_fu_1642_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_113_fu_1835_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_107_fu_1662_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_114_fu_1843_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_108_fu_1682_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_115_fu_1851_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_109_fu_1702_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_116_fu_1859_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_110_fu_1722_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_117_fu_1867_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_111_fu_1742_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal keyvalue_key_118_fu_1875_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component readkeyvalues0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_kvdram_V_AWVALID : OUT STD_LOGIC;
        m_axi_kvdram_V_AWREADY : IN STD_LOGIC;
        m_axi_kvdram_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kvdram_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdram_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kvdram_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kvdram_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvdram_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvdram_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvdram_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kvdram_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvdram_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvdram_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdram_V_WVALID : OUT STD_LOGIC;
        m_axi_kvdram_V_WREADY : IN STD_LOGIC;
        m_axi_kvdram_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_kvdram_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kvdram_V_WLAST : OUT STD_LOGIC;
        m_axi_kvdram_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdram_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdram_V_ARVALID : OUT STD_LOGIC;
        m_axi_kvdram_V_ARREADY : IN STD_LOGIC;
        m_axi_kvdram_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kvdram_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdram_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kvdram_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kvdram_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvdram_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvdram_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvdram_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kvdram_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvdram_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvdram_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdram_V_RVALID : IN STD_LOGIC;
        m_axi_kvdram_V_RREADY : OUT STD_LOGIC;
        m_axi_kvdram_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_kvdram_V_RLAST : IN STD_LOGIC;
        m_axi_kvdram_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdram_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdram_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvdram_V_BVALID : IN STD_LOGIC;
        m_axi_kvdram_V_BREADY : OUT STD_LOGIC;
        m_axi_kvdram_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvdram_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdram_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        kvdram_V_offset : IN STD_LOGIC_VECTOR (25 downto 0);
        buffer_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        buffer_V_ce0 : OUT STD_LOGIC;
        buffer_V_we0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        buffer_V_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        offset_kvs : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_readkeyvalues0_fu_418 : component readkeyvalues0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_readkeyvalues0_fu_418_ap_start,
        ap_done => grp_readkeyvalues0_fu_418_ap_done,
        ap_idle => grp_readkeyvalues0_fu_418_ap_idle,
        ap_ready => grp_readkeyvalues0_fu_418_ap_ready,
        m_axi_kvdram_V_AWVALID => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWVALID,
        m_axi_kvdram_V_AWREADY => ap_const_logic_0,
        m_axi_kvdram_V_AWADDR => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWADDR,
        m_axi_kvdram_V_AWID => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWID,
        m_axi_kvdram_V_AWLEN => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWLEN,
        m_axi_kvdram_V_AWSIZE => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWSIZE,
        m_axi_kvdram_V_AWBURST => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWBURST,
        m_axi_kvdram_V_AWLOCK => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWLOCK,
        m_axi_kvdram_V_AWCACHE => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWCACHE,
        m_axi_kvdram_V_AWPROT => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWPROT,
        m_axi_kvdram_V_AWQOS => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWQOS,
        m_axi_kvdram_V_AWREGION => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWREGION,
        m_axi_kvdram_V_AWUSER => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWUSER,
        m_axi_kvdram_V_WVALID => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WVALID,
        m_axi_kvdram_V_WREADY => ap_const_logic_0,
        m_axi_kvdram_V_WDATA => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WDATA,
        m_axi_kvdram_V_WSTRB => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WSTRB,
        m_axi_kvdram_V_WLAST => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WLAST,
        m_axi_kvdram_V_WID => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WID,
        m_axi_kvdram_V_WUSER => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WUSER,
        m_axi_kvdram_V_ARVALID => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARVALID,
        m_axi_kvdram_V_ARREADY => m_axi_kvdram_V_ARREADY,
        m_axi_kvdram_V_ARADDR => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARADDR,
        m_axi_kvdram_V_ARID => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARID,
        m_axi_kvdram_V_ARLEN => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARLEN,
        m_axi_kvdram_V_ARSIZE => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARSIZE,
        m_axi_kvdram_V_ARBURST => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARBURST,
        m_axi_kvdram_V_ARLOCK => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARLOCK,
        m_axi_kvdram_V_ARCACHE => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARCACHE,
        m_axi_kvdram_V_ARPROT => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARPROT,
        m_axi_kvdram_V_ARQOS => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARQOS,
        m_axi_kvdram_V_ARREGION => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARREGION,
        m_axi_kvdram_V_ARUSER => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARUSER,
        m_axi_kvdram_V_RVALID => m_axi_kvdram_V_RVALID,
        m_axi_kvdram_V_RREADY => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_RREADY,
        m_axi_kvdram_V_RDATA => m_axi_kvdram_V_RDATA,
        m_axi_kvdram_V_RLAST => m_axi_kvdram_V_RLAST,
        m_axi_kvdram_V_RID => m_axi_kvdram_V_RID,
        m_axi_kvdram_V_RUSER => m_axi_kvdram_V_RUSER,
        m_axi_kvdram_V_RRESP => m_axi_kvdram_V_RRESP,
        m_axi_kvdram_V_BVALID => ap_const_logic_0,
        m_axi_kvdram_V_BREADY => grp_readkeyvalues0_fu_418_m_axi_kvdram_V_BREADY,
        m_axi_kvdram_V_BRESP => ap_const_lv2_0,
        m_axi_kvdram_V_BID => ap_const_lv1_0,
        m_axi_kvdram_V_BUSER => ap_const_lv1_0,
        kvdram_V_offset => kvdram_V_offset,
        buffer_V_address0 => grp_readkeyvalues0_fu_418_buffer_V_address0,
        buffer_V_ce0 => grp_readkeyvalues0_fu_418_buffer_V_ce0,
        buffer_V_we0 => grp_readkeyvalues0_fu_418_buffer_V_we0,
        buffer_V_d0 => grp_readkeyvalues0_fu_418_buffer_V_d0,
        offset_kvs => grp_readkeyvalues0_fu_418_offset_kvs);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state9))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state9);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_readkeyvalues0_fu_418_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_readkeyvalues0_fu_418_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln1488_fu_440_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1)))) then 
                    grp_readkeyvalues0_fu_418_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_readkeyvalues0_fu_418_ap_ready = ap_const_logic_1)) then 
                    grp_readkeyvalues0_fu_418_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    capsulemetadata_loca_reg_396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1488_fu_440_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                capsulemetadata_loca_reg_396 <= capsulemetadata_localoffset;
            elsif (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1488_reg_1975 = ap_const_lv1_1))) then 
                capsulemetadata_loca_reg_396 <= add_ln1521_fu_486_p2;
            end if; 
        end if;
    end process;

    i_0_reg_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1524_reg_2047 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_0_reg_406 <= i_reg_2051;
            elsif (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_0_reg_406 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_reg_2051 <= i_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                icmp_ln1488_reg_1975 <= icmp_ln1488_fu_440_p2;
                loffset_reg_1965 <= loffset_fu_432_p1;
                    zext_ln1486_reg_1970(11 downto 0) <= zext_ln1486_fu_436_p1(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1524_reg_2047 <= icmp_ln1524_fu_492_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1524_fu_492_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                idx_reg_2056 <= idx_fu_538_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1524_reg_2047 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                keyvalue_key_32_fu_200 <= keyvalue_key_103_fu_1599_p3;
                keyvalue_key_48_fu_208 <= keyvalue_key_119_fu_1883_p3;
                keyvalue_key_8_fu_192 <= keyvalue_key_87_fu_1315_p3;
                keyvalue_key_fu_184 <= keyvalue_key_72_fu_1031_p3;
                keyvalue_value_64_fu_188 <= keyvalue_value_75_fu_966_p3;
                keyvalue_value_65_fu_196 <= keyvalue_value_89_fu_1250_p3;
                keyvalue_value_66_fu_204 <= keyvalue_value_105_fu_1534_p3;
                keyvalue_value_67_fu_212 <= keyvalue_value_121_fu_1818_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln1488_fu_440_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1))) then
                loadoffset0_kvs_reg_1979 <= loadoffset0_kvs_fu_446_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                loadoffset1_kvs_reg_1984 <= loadoffset1_kvs_fu_458_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                loadoffset2_kvs_reg_1989 <= loadoffset2_kvs_fu_469_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                loadoffset3_kvs_reg_1994 <= loadoffset3_kvs_fu_480_p2;
            end if;
        end if;
    end process;
    zext_ln1486_reg_1970(12) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln1488_fu_440_p2, icmp_ln1524_fu_492_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state8, grp_readkeyvalues0_fu_418_ap_done, ap_block_state8_on_subcall_done, ap_block_pp0_stage0_subdone, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((icmp_ln1488_fu_440_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln1488_fu_440_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_readkeyvalues0_fu_418_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_readkeyvalues0_fu_418_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_readkeyvalues0_fu_418_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln1524_fu_492_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln1524_fu_492_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;

    BIGcapsule0_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, grp_readkeyvalues0_fu_418_buffer_V_address0, ap_block_pp0_stage0, ap_CS_fsm_state2, zext_ln327_fu_552_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            BIGcapsule0_V_address0 <= zext_ln327_fu_552_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            BIGcapsule0_V_address0 <= grp_readkeyvalues0_fu_418_buffer_V_address0;
        else 
            BIGcapsule0_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    BIGcapsule0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, grp_readkeyvalues0_fu_418_buffer_V_ce0, ap_CS_fsm_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            BIGcapsule0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            BIGcapsule0_V_ce0 <= grp_readkeyvalues0_fu_418_buffer_V_ce0;
        else 
            BIGcapsule0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    BIGcapsule0_V_d0 <= grp_readkeyvalues0_fu_418_buffer_V_d0;

    BIGcapsule0_V_we0_assign_proc : process(grp_readkeyvalues0_fu_418_buffer_V_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            BIGcapsule0_V_we0 <= grp_readkeyvalues0_fu_418_buffer_V_we0;
        else 
            BIGcapsule0_V_we0 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;


    BIGcapsule1_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, grp_readkeyvalues0_fu_418_buffer_V_address0, ap_block_pp0_stage0, ap_CS_fsm_state4, zext_ln327_fu_552_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            BIGcapsule1_V_address0 <= zext_ln327_fu_552_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            BIGcapsule1_V_address0 <= grp_readkeyvalues0_fu_418_buffer_V_address0;
        else 
            BIGcapsule1_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    BIGcapsule1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, grp_readkeyvalues0_fu_418_buffer_V_ce0, ap_CS_fsm_state4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            BIGcapsule1_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            BIGcapsule1_V_ce0 <= grp_readkeyvalues0_fu_418_buffer_V_ce0;
        else 
            BIGcapsule1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    BIGcapsule1_V_d0 <= grp_readkeyvalues0_fu_418_buffer_V_d0;

    BIGcapsule1_V_we0_assign_proc : process(grp_readkeyvalues0_fu_418_buffer_V_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            BIGcapsule1_V_we0 <= grp_readkeyvalues0_fu_418_buffer_V_we0;
        else 
            BIGcapsule1_V_we0 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;


    BIGcapsule2_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, grp_readkeyvalues0_fu_418_buffer_V_address0, ap_block_pp0_stage0, ap_CS_fsm_state6, zext_ln327_fu_552_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            BIGcapsule2_V_address0 <= zext_ln327_fu_552_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            BIGcapsule2_V_address0 <= grp_readkeyvalues0_fu_418_buffer_V_address0;
        else 
            BIGcapsule2_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    BIGcapsule2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, grp_readkeyvalues0_fu_418_buffer_V_ce0, ap_CS_fsm_state6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            BIGcapsule2_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            BIGcapsule2_V_ce0 <= grp_readkeyvalues0_fu_418_buffer_V_ce0;
        else 
            BIGcapsule2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    BIGcapsule2_V_d0 <= grp_readkeyvalues0_fu_418_buffer_V_d0;

    BIGcapsule2_V_we0_assign_proc : process(grp_readkeyvalues0_fu_418_buffer_V_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            BIGcapsule2_V_we0 <= grp_readkeyvalues0_fu_418_buffer_V_we0;
        else 
            BIGcapsule2_V_we0 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;


    BIGcapsule3_V_address0_assign_proc : process(icmp_ln1488_reg_1975, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state8, grp_readkeyvalues0_fu_418_buffer_V_address0, ap_block_pp0_stage0, zext_ln327_fu_552_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            BIGcapsule3_V_address0 <= zext_ln327_fu_552_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1488_reg_1975 = ap_const_lv1_1))) then 
            BIGcapsule3_V_address0 <= grp_readkeyvalues0_fu_418_buffer_V_address0;
        else 
            BIGcapsule3_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    BIGcapsule3_V_ce0_assign_proc : process(icmp_ln1488_reg_1975, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state8, grp_readkeyvalues0_fu_418_buffer_V_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            BIGcapsule3_V_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1488_reg_1975 = ap_const_lv1_1))) then 
            BIGcapsule3_V_ce0 <= grp_readkeyvalues0_fu_418_buffer_V_ce0;
        else 
            BIGcapsule3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    BIGcapsule3_V_d0 <= grp_readkeyvalues0_fu_418_buffer_V_d0;

    BIGcapsule3_V_we0_assign_proc : process(icmp_ln1488_reg_1975, ap_CS_fsm_state8, grp_readkeyvalues0_fu_418_buffer_V_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1488_reg_1975 = ap_const_lv1_1))) then 
            BIGcapsule3_V_we0 <= grp_readkeyvalues0_fu_418_buffer_V_we0;
        else 
            BIGcapsule3_V_we0 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;

    add_ln1497_fu_453_p2 <= std_logic_vector(unsigned(capsulemetadata_localoffset) + unsigned(ap_const_lv32_200));
    add_ln1505_fu_464_p2 <= std_logic_vector(unsigned(capsulemetadata_localoffset) + unsigned(ap_const_lv32_400));
    add_ln1513_fu_475_p2 <= std_logic_vector(unsigned(capsulemetadata_localoffset) + unsigned(ap_const_lv32_600));
    add_ln1521_fu_486_p2 <= std_logic_vector(unsigned(capsulemetadata_localoffset) + unsigned(ap_const_lv32_800));
    add_ln1526_1_fu_517_p2 <= std_logic_vector(unsigned(loffset_reg_1965) + unsigned(zext_ln1526_1_fu_508_p1));
    add_ln1526_fu_512_p2 <= std_logic_vector(unsigned(zext_ln1524_fu_504_p1) + unsigned(zext_ln1486_reg_1970));
    and_ln330_fu_804_p2 <= (xor_ln326_fu_798_p2 and icmp_ln330_fu_615_p2);
    and_ln334_fu_830_p2 <= (xor_ln330_fu_824_p2 and icmp_ln334_fu_640_p2);
    and_ln338_fu_856_p2 <= (xor_ln334_fu_850_p2 and icmp_ln338_fu_665_p2);
    and_ln342_fu_882_p2 <= (xor_ln338_fu_876_p2 and icmp_ln342_fu_690_p2);
    and_ln346_fu_908_p2 <= (xor_ln342_fu_902_p2 and icmp_ln346_fu_715_p2);
    and_ln350_fu_934_p2 <= (xor_ln346_fu_928_p2 and icmp_ln350_fu_740_p2);
    and_ln354_fu_960_p2 <= (xor_ln350_fu_954_p2 and icmp_ln354_fu_765_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_on_subcall_done_assign_proc : process(icmp_ln1488_reg_1975, grp_readkeyvalues0_fu_418_ap_done)
    begin
                ap_block_state8_on_subcall_done <= ((grp_readkeyvalues0_fu_418_ap_done = ap_const_logic_0) and (icmp_ln1488_reg_1975 = ap_const_lv1_1));
    end process;

        ap_block_state9_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state9_assign_proc : process(icmp_ln1524_fu_492_p2)
    begin
        if ((icmp_ln1524_fu_492_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_0_phi_fu_410_p4_assign_proc : process(i_0_reg_406, icmp_ln1524_reg_2047, ap_CS_fsm_pp0_stage0, i_reg_2051, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln1524_reg_2047 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_0_phi_fu_410_p4 <= i_reg_2051;
        else 
            ap_phi_mux_i_0_phi_fu_410_p4 <= i_0_reg_406;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= capsulemetadata_globaloffset;
    ap_return_1 <= capsulemetadata_loca_reg_396;
    capsule0_key_address0 <= zext_ln1526_fu_584_p1(5 - 1 downto 0);

    capsule0_key_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            capsule0_key_ce0 <= ap_const_logic_1;
        else 
            capsule0_key_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    capsule0_key_d0 <= 
        keyvalue_key_7_fu_770_p4 when (and_ln354_fu_960_p2(0) = '1') else 
        keyvalue_key_71_fu_1023_p3;

    capsule0_key_we0_assign_proc : process(icmp_ln1524_reg_2047, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln1524_reg_2047 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            capsule0_key_we0 <= ap_const_logic_1;
        else 
            capsule0_key_we0 <= ap_const_logic_0;
        end if; 
    end process;

    capsule0_value_address0 <= zext_ln1526_fu_584_p1(5 - 1 downto 0);

    capsule0_value_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            capsule0_value_ce0 <= ap_const_logic_1;
        else 
            capsule0_value_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    capsule0_value_d0 <= 
        keyvalue_value_7_fu_780_p4 when (and_ln354_fu_960_p2(0) = '1') else 
        keyvalue_value_74_fu_940_p3;

    capsule0_value_we0_assign_proc : process(icmp_ln1524_reg_2047, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln1524_reg_2047 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            capsule0_value_we0 <= ap_const_logic_1;
        else 
            capsule0_value_we0 <= ap_const_logic_0;
        end if; 
    end process;

    capsule1_key_address0 <= zext_ln1526_fu_584_p1(5 - 1 downto 0);

    capsule1_key_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            capsule1_key_ce0 <= ap_const_logic_1;
        else 
            capsule1_key_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    capsule1_key_d0 <= 
        keyvalue_key_79_fu_1174_p4 when (and_ln354_fu_960_p2(0) = '1') else 
        keyvalue_key_86_fu_1307_p3;

    capsule1_key_we0_assign_proc : process(icmp_ln1524_reg_2047, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln1524_reg_2047 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            capsule1_key_we0 <= ap_const_logic_1;
        else 
            capsule1_key_we0 <= ap_const_logic_0;
        end if; 
    end process;

    capsule1_value_address0 <= zext_ln1526_fu_584_p1(5 - 1 downto 0);

    capsule1_value_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            capsule1_value_ce0 <= ap_const_logic_1;
        else 
            capsule1_value_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    capsule1_value_d0 <= 
        keyvalue_value_81_fu_1184_p4 when (and_ln354_fu_960_p2(0) = '1') else 
        keyvalue_value_88_fu_1242_p3;

    capsule1_value_we0_assign_proc : process(icmp_ln1524_reg_2047, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln1524_reg_2047 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            capsule1_value_we0 <= ap_const_logic_1;
        else 
            capsule1_value_we0 <= ap_const_logic_0;
        end if; 
    end process;

    capsule2_key_address0 <= zext_ln1526_fu_584_p1(5 - 1 downto 0);

    capsule2_key_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            capsule2_key_ce0 <= ap_const_logic_1;
        else 
            capsule2_key_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    capsule2_key_d0 <= 
        keyvalue_key_95_fu_1458_p4 when (and_ln354_fu_960_p2(0) = '1') else 
        keyvalue_key_102_fu_1591_p3;

    capsule2_key_we0_assign_proc : process(icmp_ln1524_reg_2047, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln1524_reg_2047 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            capsule2_key_we0 <= ap_const_logic_1;
        else 
            capsule2_key_we0 <= ap_const_logic_0;
        end if; 
    end process;

    capsule2_value_address0 <= zext_ln1526_fu_584_p1(5 - 1 downto 0);

    capsule2_value_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            capsule2_value_ce0 <= ap_const_logic_1;
        else 
            capsule2_value_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    capsule2_value_d0 <= 
        keyvalue_value_97_fu_1468_p4 when (and_ln354_fu_960_p2(0) = '1') else 
        keyvalue_value_104_fu_1526_p3;

    capsule2_value_we0_assign_proc : process(icmp_ln1524_reg_2047, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln1524_reg_2047 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            capsule2_value_we0 <= ap_const_logic_1;
        else 
            capsule2_value_we0 <= ap_const_logic_0;
        end if; 
    end process;

    capsule3_key_address0 <= zext_ln1526_fu_584_p1(5 - 1 downto 0);

    capsule3_key_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            capsule3_key_ce0 <= ap_const_logic_1;
        else 
            capsule3_key_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    capsule3_key_d0 <= 
        keyvalue_key_111_fu_1742_p4 when (and_ln354_fu_960_p2(0) = '1') else 
        keyvalue_key_118_fu_1875_p3;

    capsule3_key_we0_assign_proc : process(icmp_ln1524_reg_2047, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln1524_reg_2047 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            capsule3_key_we0 <= ap_const_logic_1;
        else 
            capsule3_key_we0 <= ap_const_logic_0;
        end if; 
    end process;

    capsule3_value_address0 <= zext_ln1526_fu_584_p1(5 - 1 downto 0);

    capsule3_value_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            capsule3_value_ce0 <= ap_const_logic_1;
        else 
            capsule3_value_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    capsule3_value_d0 <= 
        keyvalue_value_113_fu_1752_p4 when (and_ln354_fu_960_p2(0) = '1') else 
        keyvalue_value_120_fu_1810_p3;

    capsule3_value_we0_assign_proc : process(icmp_ln1524_reg_2047, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln1524_reg_2047 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            capsule3_value_we0 <= ap_const_logic_1;
        else 
            capsule3_value_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_readkeyvalues0_fu_418_ap_start <= grp_readkeyvalues0_fu_418_ap_start_reg;

    grp_readkeyvalues0_fu_418_offset_kvs_assign_proc : process(icmp_ln1488_reg_1975, loadoffset0_kvs_reg_1979, loadoffset1_kvs_reg_1984, loadoffset2_kvs_reg_1989, loadoffset3_kvs_reg_1994, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1488_reg_1975 = ap_const_lv1_1))) then 
            grp_readkeyvalues0_fu_418_offset_kvs <= loadoffset3_kvs_reg_1994;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_readkeyvalues0_fu_418_offset_kvs <= loadoffset2_kvs_reg_1989;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_readkeyvalues0_fu_418_offset_kvs <= loadoffset1_kvs_reg_1984;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_readkeyvalues0_fu_418_offset_kvs <= loadoffset0_kvs_reg_1979;
        else 
            grp_readkeyvalues0_fu_418_offset_kvs <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_fu_498_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_phi_fu_410_p4) + unsigned(ap_const_lv6_1));
    icmp_ln1488_fu_440_p2 <= "1" when (loffset_fu_432_p1 = ap_const_lv12_0) else "0";
    icmp_ln1524_fu_492_p2 <= "1" when (ap_phi_mux_i_0_phi_fu_410_p4 = ap_const_lv6_20) else "0";
    icmp_ln326_fu_596_p2 <= "1" when (idx_reg_2056 = ap_const_lv3_0) else "0";
    icmp_ln330_fu_615_p2 <= "1" when (idx_reg_2056 = ap_const_lv3_1) else "0";
    icmp_ln334_fu_640_p2 <= "1" when (idx_reg_2056 = ap_const_lv3_2) else "0";
    icmp_ln338_fu_665_p2 <= "1" when (idx_reg_2056 = ap_const_lv3_3) else "0";
    icmp_ln342_fu_690_p2 <= "1" when (idx_reg_2056 = ap_const_lv3_4) else "0";
    icmp_ln346_fu_715_p2 <= "1" when (idx_reg_2056 = ap_const_lv3_5) else "0";
    icmp_ln350_fu_740_p2 <= "1" when (idx_reg_2056 = ap_const_lv3_6) else "0";
    icmp_ln354_fu_765_p2 <= "1" when (idx_reg_2056 = ap_const_lv3_7) else "0";
    idx_fu_538_p1 <= select_ln316_fu_530_p3(3 - 1 downto 0);
    idy_fu_542_p4 <= select_ln316_fu_530_p3(11 downto 3);
    keyvalue_key_100_fu_1575_p3 <= 
        keyvalue_key_92_fu_1398_p4 when (and_ln342_fu_882_p2(0) = '1') else 
        keyvalue_key_99_fu_1567_p3;
    keyvalue_key_101_fu_1583_p3 <= 
        keyvalue_key_93_fu_1418_p4 when (and_ln346_fu_908_p2(0) = '1') else 
        keyvalue_key_100_fu_1575_p3;
    keyvalue_key_102_fu_1591_p3 <= 
        keyvalue_key_94_fu_1438_p4 when (and_ln350_fu_934_p2(0) = '1') else 
        keyvalue_key_101_fu_1583_p3;
    keyvalue_key_103_fu_1599_p3 <= 
        keyvalue_key_95_fu_1458_p4 when (and_ln354_fu_960_p2(0) = '1') else 
        keyvalue_key_102_fu_1591_p3;
    keyvalue_key_104_fu_1608_p1 <= BIGcapsule3_V_q0(32 - 1 downto 0);
    keyvalue_key_105_fu_1622_p4 <= BIGcapsule3_V_q0(95 downto 64);
    keyvalue_key_106_fu_1642_p4 <= BIGcapsule3_V_q0(159 downto 128);
    keyvalue_key_107_fu_1662_p4 <= BIGcapsule3_V_q0(223 downto 192);
    keyvalue_key_108_fu_1682_p4 <= BIGcapsule3_V_q0(287 downto 256);
    keyvalue_key_109_fu_1702_p4 <= BIGcapsule3_V_q0(351 downto 320);
    keyvalue_key_110_fu_1722_p4 <= BIGcapsule3_V_q0(415 downto 384);
    keyvalue_key_111_fu_1742_p4 <= BIGcapsule3_V_q0(479 downto 448);
    keyvalue_key_112_fu_1827_p3 <= 
        keyvalue_key_104_fu_1608_p1 when (icmp_ln326_fu_596_p2(0) = '1') else 
        keyvalue_key_48_fu_208;
    keyvalue_key_113_fu_1835_p3 <= 
        keyvalue_key_105_fu_1622_p4 when (and_ln330_fu_804_p2(0) = '1') else 
        keyvalue_key_112_fu_1827_p3;
    keyvalue_key_114_fu_1843_p3 <= 
        keyvalue_key_106_fu_1642_p4 when (and_ln334_fu_830_p2(0) = '1') else 
        keyvalue_key_113_fu_1835_p3;
    keyvalue_key_115_fu_1851_p3 <= 
        keyvalue_key_107_fu_1662_p4 when (and_ln338_fu_856_p2(0) = '1') else 
        keyvalue_key_114_fu_1843_p3;
    keyvalue_key_116_fu_1859_p3 <= 
        keyvalue_key_108_fu_1682_p4 when (and_ln342_fu_882_p2(0) = '1') else 
        keyvalue_key_115_fu_1851_p3;
    keyvalue_key_117_fu_1867_p3 <= 
        keyvalue_key_109_fu_1702_p4 when (and_ln346_fu_908_p2(0) = '1') else 
        keyvalue_key_116_fu_1859_p3;
    keyvalue_key_118_fu_1875_p3 <= 
        keyvalue_key_110_fu_1722_p4 when (and_ln350_fu_934_p2(0) = '1') else 
        keyvalue_key_117_fu_1867_p3;
    keyvalue_key_119_fu_1883_p3 <= 
        keyvalue_key_111_fu_1742_p4 when (and_ln354_fu_960_p2(0) = '1') else 
        keyvalue_key_118_fu_1875_p3;
    keyvalue_key_1_fu_620_p4 <= BIGcapsule0_V_q0(95 downto 64);
    keyvalue_key_2_fu_645_p4 <= BIGcapsule0_V_q0(159 downto 128);
    keyvalue_key_3_fu_670_p4 <= BIGcapsule0_V_q0(223 downto 192);
    keyvalue_key_4_fu_695_p4 <= BIGcapsule0_V_q0(287 downto 256);
    keyvalue_key_5_fu_720_p4 <= BIGcapsule0_V_q0(351 downto 320);
    keyvalue_key_64_fu_601_p1 <= BIGcapsule0_V_q0(32 - 1 downto 0);
    keyvalue_key_65_fu_975_p3 <= 
        keyvalue_key_64_fu_601_p1 when (icmp_ln326_fu_596_p2(0) = '1') else 
        keyvalue_key_fu_184;
    keyvalue_key_66_fu_983_p3 <= 
        keyvalue_key_1_fu_620_p4 when (and_ln330_fu_804_p2(0) = '1') else 
        keyvalue_key_65_fu_975_p3;
    keyvalue_key_67_fu_991_p3 <= 
        keyvalue_key_2_fu_645_p4 when (and_ln334_fu_830_p2(0) = '1') else 
        keyvalue_key_66_fu_983_p3;
    keyvalue_key_68_fu_999_p3 <= 
        keyvalue_key_3_fu_670_p4 when (and_ln338_fu_856_p2(0) = '1') else 
        keyvalue_key_67_fu_991_p3;
    keyvalue_key_69_fu_1007_p3 <= 
        keyvalue_key_4_fu_695_p4 when (and_ln342_fu_882_p2(0) = '1') else 
        keyvalue_key_68_fu_999_p3;
    keyvalue_key_6_fu_745_p4 <= BIGcapsule0_V_q0(415 downto 384);
    keyvalue_key_70_fu_1015_p3 <= 
        keyvalue_key_5_fu_720_p4 when (and_ln346_fu_908_p2(0) = '1') else 
        keyvalue_key_69_fu_1007_p3;
    keyvalue_key_71_fu_1023_p3 <= 
        keyvalue_key_6_fu_745_p4 when (and_ln350_fu_934_p2(0) = '1') else 
        keyvalue_key_70_fu_1015_p3;
    keyvalue_key_72_fu_1031_p3 <= 
        keyvalue_key_7_fu_770_p4 when (and_ln354_fu_960_p2(0) = '1') else 
        keyvalue_key_71_fu_1023_p3;
    keyvalue_key_73_fu_1040_p1 <= BIGcapsule1_V_q0(32 - 1 downto 0);
    keyvalue_key_74_fu_1074_p4 <= BIGcapsule1_V_q0(159 downto 128);
    keyvalue_key_75_fu_1094_p4 <= BIGcapsule1_V_q0(223 downto 192);
    keyvalue_key_76_fu_1114_p4 <= BIGcapsule1_V_q0(287 downto 256);
    keyvalue_key_77_fu_1134_p4 <= BIGcapsule1_V_q0(351 downto 320);
    keyvalue_key_78_fu_1154_p4 <= BIGcapsule1_V_q0(415 downto 384);
    keyvalue_key_79_fu_1174_p4 <= BIGcapsule1_V_q0(479 downto 448);
    keyvalue_key_7_fu_770_p4 <= BIGcapsule0_V_q0(479 downto 448);
    keyvalue_key_80_fu_1259_p3 <= 
        keyvalue_key_73_fu_1040_p1 when (icmp_ln326_fu_596_p2(0) = '1') else 
        keyvalue_key_8_fu_192;
    keyvalue_key_81_fu_1267_p3 <= 
        keyvalue_key_9_fu_1054_p4 when (and_ln330_fu_804_p2(0) = '1') else 
        keyvalue_key_80_fu_1259_p3;
    keyvalue_key_82_fu_1275_p3 <= 
        keyvalue_key_74_fu_1074_p4 when (and_ln334_fu_830_p2(0) = '1') else 
        keyvalue_key_81_fu_1267_p3;
    keyvalue_key_83_fu_1283_p3 <= 
        keyvalue_key_75_fu_1094_p4 when (and_ln338_fu_856_p2(0) = '1') else 
        keyvalue_key_82_fu_1275_p3;
    keyvalue_key_84_fu_1291_p3 <= 
        keyvalue_key_76_fu_1114_p4 when (and_ln342_fu_882_p2(0) = '1') else 
        keyvalue_key_83_fu_1283_p3;
    keyvalue_key_85_fu_1299_p3 <= 
        keyvalue_key_77_fu_1134_p4 when (and_ln346_fu_908_p2(0) = '1') else 
        keyvalue_key_84_fu_1291_p3;
    keyvalue_key_86_fu_1307_p3 <= 
        keyvalue_key_78_fu_1154_p4 when (and_ln350_fu_934_p2(0) = '1') else 
        keyvalue_key_85_fu_1299_p3;
    keyvalue_key_87_fu_1315_p3 <= 
        keyvalue_key_79_fu_1174_p4 when (and_ln354_fu_960_p2(0) = '1') else 
        keyvalue_key_86_fu_1307_p3;
    keyvalue_key_88_fu_1324_p1 <= BIGcapsule2_V_q0(32 - 1 downto 0);
    keyvalue_key_89_fu_1338_p4 <= BIGcapsule2_V_q0(95 downto 64);
    keyvalue_key_90_fu_1358_p4 <= BIGcapsule2_V_q0(159 downto 128);
    keyvalue_key_91_fu_1378_p4 <= BIGcapsule2_V_q0(223 downto 192);
    keyvalue_key_92_fu_1398_p4 <= BIGcapsule2_V_q0(287 downto 256);
    keyvalue_key_93_fu_1418_p4 <= BIGcapsule2_V_q0(351 downto 320);
    keyvalue_key_94_fu_1438_p4 <= BIGcapsule2_V_q0(415 downto 384);
    keyvalue_key_95_fu_1458_p4 <= BIGcapsule2_V_q0(479 downto 448);
    keyvalue_key_96_fu_1543_p3 <= 
        keyvalue_key_88_fu_1324_p1 when (icmp_ln326_fu_596_p2(0) = '1') else 
        keyvalue_key_32_fu_200;
    keyvalue_key_97_fu_1551_p3 <= 
        keyvalue_key_89_fu_1338_p4 when (and_ln330_fu_804_p2(0) = '1') else 
        keyvalue_key_96_fu_1543_p3;
    keyvalue_key_98_fu_1559_p3 <= 
        keyvalue_key_90_fu_1358_p4 when (and_ln334_fu_830_p2(0) = '1') else 
        keyvalue_key_97_fu_1551_p3;
    keyvalue_key_99_fu_1567_p3 <= 
        keyvalue_key_91_fu_1378_p4 when (and_ln338_fu_856_p2(0) = '1') else 
        keyvalue_key_98_fu_1559_p3;
    keyvalue_key_9_fu_1054_p4 <= BIGcapsule1_V_q0(95 downto 64);
    keyvalue_value_100_fu_1494_p3 <= 
        keyvalue_value_92_fu_1368_p4 when (and_ln334_fu_830_p2(0) = '1') else 
        keyvalue_value_99_fu_1486_p3;
    keyvalue_value_101_fu_1502_p3 <= 
        keyvalue_value_93_fu_1388_p4 when (and_ln338_fu_856_p2(0) = '1') else 
        keyvalue_value_100_fu_1494_p3;
    keyvalue_value_102_fu_1510_p3 <= 
        keyvalue_value_94_fu_1408_p4 when (and_ln342_fu_882_p2(0) = '1') else 
        keyvalue_value_101_fu_1502_p3;
    keyvalue_value_103_fu_1518_p3 <= 
        keyvalue_value_95_fu_1428_p4 when (and_ln346_fu_908_p2(0) = '1') else 
        keyvalue_value_102_fu_1510_p3;
    keyvalue_value_104_fu_1526_p3 <= 
        keyvalue_value_96_fu_1448_p4 when (and_ln350_fu_934_p2(0) = '1') else 
        keyvalue_value_103_fu_1518_p3;
    keyvalue_value_105_fu_1534_p3 <= 
        keyvalue_value_97_fu_1468_p4 when (and_ln354_fu_960_p2(0) = '1') else 
        keyvalue_value_104_fu_1526_p3;
    keyvalue_value_106_fu_1612_p4 <= BIGcapsule3_V_q0(63 downto 32);
    keyvalue_value_107_fu_1632_p4 <= BIGcapsule3_V_q0(127 downto 96);
    keyvalue_value_108_fu_1652_p4 <= BIGcapsule3_V_q0(191 downto 160);
    keyvalue_value_109_fu_1672_p4 <= BIGcapsule3_V_q0(255 downto 224);
    keyvalue_value_110_fu_1692_p4 <= BIGcapsule3_V_q0(319 downto 288);
    keyvalue_value_111_fu_1712_p4 <= BIGcapsule3_V_q0(383 downto 352);
    keyvalue_value_112_fu_1732_p4 <= BIGcapsule3_V_q0(447 downto 416);
    keyvalue_value_113_fu_1752_p4 <= BIGcapsule3_V_q0(511 downto 480);
    keyvalue_value_114_fu_1762_p3 <= 
        keyvalue_value_106_fu_1612_p4 when (icmp_ln326_fu_596_p2(0) = '1') else 
        keyvalue_value_67_fu_212;
    keyvalue_value_115_fu_1770_p3 <= 
        keyvalue_value_107_fu_1632_p4 when (and_ln330_fu_804_p2(0) = '1') else 
        keyvalue_value_114_fu_1762_p3;
    keyvalue_value_116_fu_1778_p3 <= 
        keyvalue_value_108_fu_1652_p4 when (and_ln334_fu_830_p2(0) = '1') else 
        keyvalue_value_115_fu_1770_p3;
    keyvalue_value_117_fu_1786_p3 <= 
        keyvalue_value_109_fu_1672_p4 when (and_ln338_fu_856_p2(0) = '1') else 
        keyvalue_value_116_fu_1778_p3;
    keyvalue_value_118_fu_1794_p3 <= 
        keyvalue_value_110_fu_1692_p4 when (and_ln342_fu_882_p2(0) = '1') else 
        keyvalue_value_117_fu_1786_p3;
    keyvalue_value_119_fu_1802_p3 <= 
        keyvalue_value_111_fu_1712_p4 when (and_ln346_fu_908_p2(0) = '1') else 
        keyvalue_value_118_fu_1794_p3;
    keyvalue_value_120_fu_1810_p3 <= 
        keyvalue_value_112_fu_1732_p4 when (and_ln350_fu_934_p2(0) = '1') else 
        keyvalue_value_119_fu_1802_p3;
    keyvalue_value_121_fu_1818_p3 <= 
        keyvalue_value_113_fu_1752_p4 when (and_ln354_fu_960_p2(0) = '1') else 
        keyvalue_value_120_fu_1810_p3;
    keyvalue_value_1_fu_630_p4 <= BIGcapsule0_V_q0(127 downto 96);
    keyvalue_value_2_fu_655_p4 <= BIGcapsule0_V_q0(191 downto 160);
    keyvalue_value_3_fu_680_p4 <= BIGcapsule0_V_q0(255 downto 224);
    keyvalue_value_4_fu_705_p4 <= BIGcapsule0_V_q0(319 downto 288);
    keyvalue_value_5_fu_730_p4 <= BIGcapsule0_V_q0(383 downto 352);
    keyvalue_value_68_fu_790_p3 <= 
        keyvalue_value_fu_605_p4 when (icmp_ln326_fu_596_p2(0) = '1') else 
        keyvalue_value_64_fu_188;
    keyvalue_value_69_fu_810_p3 <= 
        keyvalue_value_1_fu_630_p4 when (and_ln330_fu_804_p2(0) = '1') else 
        keyvalue_value_68_fu_790_p3;
    keyvalue_value_6_fu_755_p4 <= BIGcapsule0_V_q0(447 downto 416);
    keyvalue_value_70_fu_836_p3 <= 
        keyvalue_value_2_fu_655_p4 when (and_ln334_fu_830_p2(0) = '1') else 
        keyvalue_value_69_fu_810_p3;
    keyvalue_value_71_fu_862_p3 <= 
        keyvalue_value_3_fu_680_p4 when (and_ln338_fu_856_p2(0) = '1') else 
        keyvalue_value_70_fu_836_p3;
    keyvalue_value_72_fu_888_p3 <= 
        keyvalue_value_4_fu_705_p4 when (and_ln342_fu_882_p2(0) = '1') else 
        keyvalue_value_71_fu_862_p3;
    keyvalue_value_73_fu_914_p3 <= 
        keyvalue_value_5_fu_730_p4 when (and_ln346_fu_908_p2(0) = '1') else 
        keyvalue_value_72_fu_888_p3;
    keyvalue_value_74_fu_940_p3 <= 
        keyvalue_value_6_fu_755_p4 when (and_ln350_fu_934_p2(0) = '1') else 
        keyvalue_value_73_fu_914_p3;
    keyvalue_value_75_fu_966_p3 <= 
        keyvalue_value_7_fu_780_p4 when (and_ln354_fu_960_p2(0) = '1') else 
        keyvalue_value_74_fu_940_p3;
    keyvalue_value_76_fu_1084_p4 <= BIGcapsule1_V_q0(191 downto 160);
    keyvalue_value_77_fu_1104_p4 <= BIGcapsule1_V_q0(255 downto 224);
    keyvalue_value_78_fu_1124_p4 <= BIGcapsule1_V_q0(319 downto 288);
    keyvalue_value_79_fu_1144_p4 <= BIGcapsule1_V_q0(383 downto 352);
    keyvalue_value_7_fu_780_p4 <= BIGcapsule0_V_q0(511 downto 480);
    keyvalue_value_80_fu_1164_p4 <= BIGcapsule1_V_q0(447 downto 416);
    keyvalue_value_81_fu_1184_p4 <= BIGcapsule1_V_q0(511 downto 480);
    keyvalue_value_82_fu_1194_p3 <= 
        keyvalue_value_8_fu_1044_p4 when (icmp_ln326_fu_596_p2(0) = '1') else 
        keyvalue_value_65_fu_196;
    keyvalue_value_83_fu_1202_p3 <= 
        keyvalue_value_9_fu_1064_p4 when (and_ln330_fu_804_p2(0) = '1') else 
        keyvalue_value_82_fu_1194_p3;
    keyvalue_value_84_fu_1210_p3 <= 
        keyvalue_value_76_fu_1084_p4 when (and_ln334_fu_830_p2(0) = '1') else 
        keyvalue_value_83_fu_1202_p3;
    keyvalue_value_85_fu_1218_p3 <= 
        keyvalue_value_77_fu_1104_p4 when (and_ln338_fu_856_p2(0) = '1') else 
        keyvalue_value_84_fu_1210_p3;
    keyvalue_value_86_fu_1226_p3 <= 
        keyvalue_value_78_fu_1124_p4 when (and_ln342_fu_882_p2(0) = '1') else 
        keyvalue_value_85_fu_1218_p3;
    keyvalue_value_87_fu_1234_p3 <= 
        keyvalue_value_79_fu_1144_p4 when (and_ln346_fu_908_p2(0) = '1') else 
        keyvalue_value_86_fu_1226_p3;
    keyvalue_value_88_fu_1242_p3 <= 
        keyvalue_value_80_fu_1164_p4 when (and_ln350_fu_934_p2(0) = '1') else 
        keyvalue_value_87_fu_1234_p3;
    keyvalue_value_89_fu_1250_p3 <= 
        keyvalue_value_81_fu_1184_p4 when (and_ln354_fu_960_p2(0) = '1') else 
        keyvalue_value_88_fu_1242_p3;
    keyvalue_value_8_fu_1044_p4 <= BIGcapsule1_V_q0(63 downto 32);
    keyvalue_value_90_fu_1328_p4 <= BIGcapsule2_V_q0(63 downto 32);
    keyvalue_value_91_fu_1348_p4 <= BIGcapsule2_V_q0(127 downto 96);
    keyvalue_value_92_fu_1368_p4 <= BIGcapsule2_V_q0(191 downto 160);
    keyvalue_value_93_fu_1388_p4 <= BIGcapsule2_V_q0(255 downto 224);
    keyvalue_value_94_fu_1408_p4 <= BIGcapsule2_V_q0(319 downto 288);
    keyvalue_value_95_fu_1428_p4 <= BIGcapsule2_V_q0(383 downto 352);
    keyvalue_value_96_fu_1448_p4 <= BIGcapsule2_V_q0(447 downto 416);
    keyvalue_value_97_fu_1468_p4 <= BIGcapsule2_V_q0(511 downto 480);
    keyvalue_value_98_fu_1478_p3 <= 
        keyvalue_value_90_fu_1328_p4 when (icmp_ln326_fu_596_p2(0) = '1') else 
        keyvalue_value_66_fu_204;
    keyvalue_value_99_fu_1486_p3 <= 
        keyvalue_value_91_fu_1348_p4 when (and_ln330_fu_804_p2(0) = '1') else 
        keyvalue_value_98_fu_1478_p3;
    keyvalue_value_9_fu_1064_p4 <= BIGcapsule1_V_q0(127 downto 96);
    keyvalue_value_fu_605_p4 <= BIGcapsule0_V_q0(63 downto 32);
    loadoffset0_kvs_fu_446_p2 <= std_logic_vector(unsigned(capsulemetadata_globaloffset) + unsigned(capsulemetadata_localoffset));
    loadoffset1_kvs_fu_458_p2 <= std_logic_vector(unsigned(capsulemetadata_globaloffset) + unsigned(add_ln1497_fu_453_p2));
    loadoffset2_kvs_fu_469_p2 <= std_logic_vector(unsigned(capsulemetadata_globaloffset) + unsigned(add_ln1505_fu_464_p2));
    loadoffset3_kvs_fu_480_p2 <= std_logic_vector(unsigned(capsulemetadata_globaloffset) + unsigned(add_ln1513_fu_475_p2));
    loffset_fu_432_p1 <= offset(12 - 1 downto 0);
    m_axi_kvdram_V_ARADDR <= grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARADDR;
    m_axi_kvdram_V_ARBURST <= grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARBURST;
    m_axi_kvdram_V_ARCACHE <= grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARCACHE;
    m_axi_kvdram_V_ARID <= grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARID;
    m_axi_kvdram_V_ARLEN <= grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARLEN;
    m_axi_kvdram_V_ARLOCK <= grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARLOCK;
    m_axi_kvdram_V_ARPROT <= grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARPROT;
    m_axi_kvdram_V_ARQOS <= grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARQOS;
    m_axi_kvdram_V_ARREGION <= grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARREGION;
    m_axi_kvdram_V_ARSIZE <= grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARSIZE;
    m_axi_kvdram_V_ARUSER <= grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARUSER;

    m_axi_kvdram_V_ARVALID_assign_proc : process(ap_CS_fsm_state1, icmp_ln1488_fu_440_p2, icmp_ln1488_reg_1975, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARVALID, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln1488_fu_440_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1488_reg_1975 = ap_const_lv1_1)))) then 
            m_axi_kvdram_V_ARVALID <= grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARVALID;
        else 
            m_axi_kvdram_V_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_kvdram_V_AWADDR <= ap_const_lv32_0;
    m_axi_kvdram_V_AWBURST <= ap_const_lv2_0;
    m_axi_kvdram_V_AWCACHE <= ap_const_lv4_0;
    m_axi_kvdram_V_AWID <= ap_const_lv1_0;
    m_axi_kvdram_V_AWLEN <= ap_const_lv32_0;
    m_axi_kvdram_V_AWLOCK <= ap_const_lv2_0;
    m_axi_kvdram_V_AWPROT <= ap_const_lv3_0;
    m_axi_kvdram_V_AWQOS <= ap_const_lv4_0;
    m_axi_kvdram_V_AWREGION <= ap_const_lv4_0;
    m_axi_kvdram_V_AWSIZE <= ap_const_lv3_0;
    m_axi_kvdram_V_AWUSER <= ap_const_lv1_0;
    m_axi_kvdram_V_AWVALID <= ap_const_logic_0;
    m_axi_kvdram_V_BREADY <= ap_const_logic_0;

    m_axi_kvdram_V_RREADY_assign_proc : process(ap_CS_fsm_state1, icmp_ln1488_fu_440_p2, icmp_ln1488_reg_1975, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, grp_readkeyvalues0_fu_418_m_axi_kvdram_V_RREADY, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln1488_fu_440_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1488_reg_1975 = ap_const_lv1_1)))) then 
            m_axi_kvdram_V_RREADY <= grp_readkeyvalues0_fu_418_m_axi_kvdram_V_RREADY;
        else 
            m_axi_kvdram_V_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_kvdram_V_WDATA <= ap_const_lv512_lc_1;
    m_axi_kvdram_V_WID <= ap_const_lv1_0;
    m_axi_kvdram_V_WLAST <= ap_const_logic_0;
    m_axi_kvdram_V_WSTRB <= ap_const_lv64_0;
    m_axi_kvdram_V_WUSER <= ap_const_lv1_0;
    m_axi_kvdram_V_WVALID <= ap_const_logic_0;
    or_ln330_fu_818_p2 <= (icmp_ln330_fu_615_p2 or icmp_ln326_fu_596_p2);
    or_ln334_fu_844_p2 <= (or_ln330_fu_818_p2 or icmp_ln334_fu_640_p2);
    or_ln338_fu_870_p2 <= (or_ln334_fu_844_p2 or icmp_ln338_fu_665_p2);
    or_ln342_fu_896_p2 <= (or_ln338_fu_870_p2 or icmp_ln342_fu_690_p2);
    or_ln346_fu_922_p2 <= (or_ln342_fu_896_p2 or icmp_ln346_fu_715_p2);
    or_ln350_fu_948_p2 <= (or_ln346_fu_922_p2 or icmp_ln350_fu_740_p2);
    select_ln316_fu_530_p3 <= 
        ap_const_lv12_0 when (tmp_37_fu_522_p3(0) = '1') else 
        add_ln1526_1_fu_517_p2;
    tmp_37_fu_522_p3 <= add_ln1526_fu_512_p2(12 downto 12);
    xor_ln326_fu_798_p2 <= (icmp_ln326_fu_596_p2 xor ap_const_lv1_1);
    xor_ln330_fu_824_p2 <= (or_ln330_fu_818_p2 xor ap_const_lv1_1);
    xor_ln334_fu_850_p2 <= (or_ln334_fu_844_p2 xor ap_const_lv1_1);
    xor_ln338_fu_876_p2 <= (or_ln338_fu_870_p2 xor ap_const_lv1_1);
    xor_ln342_fu_902_p2 <= (or_ln342_fu_896_p2 xor ap_const_lv1_1);
    xor_ln346_fu_928_p2 <= (or_ln346_fu_922_p2 xor ap_const_lv1_1);
    xor_ln350_fu_954_p2 <= (or_ln350_fu_948_p2 xor ap_const_lv1_1);
    zext_ln1486_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loffset_fu_432_p1),13));
    zext_ln1524_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_0_phi_fu_410_p4),13));
    zext_ln1526_1_fu_508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_0_phi_fu_410_p4),12));
    zext_ln1526_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_406),64));
    zext_ln327_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idy_fu_542_p4),64));
end behav;
