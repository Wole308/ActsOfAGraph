// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _readkeyvalues0_2_HH_
#define _readkeyvalues0_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "readkeyvalues0_166.h"

namespace ap_rtl {

struct readkeyvalues0_2 : public sc_module {
    // Port declarations 73
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<1> > enable;
    sc_out< sc_logic > m_axi_kvdram_V_AWVALID;
    sc_in< sc_logic > m_axi_kvdram_V_AWREADY;
    sc_out< sc_lv<32> > m_axi_kvdram_V_AWADDR;
    sc_out< sc_lv<1> > m_axi_kvdram_V_AWID;
    sc_out< sc_lv<32> > m_axi_kvdram_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_kvdram_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_kvdram_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_kvdram_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_kvdram_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_kvdram_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_kvdram_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_kvdram_V_AWREGION;
    sc_out< sc_lv<1> > m_axi_kvdram_V_AWUSER;
    sc_out< sc_logic > m_axi_kvdram_V_WVALID;
    sc_in< sc_logic > m_axi_kvdram_V_WREADY;
    sc_out< sc_lv<512> > m_axi_kvdram_V_WDATA;
    sc_out< sc_lv<64> > m_axi_kvdram_V_WSTRB;
    sc_out< sc_logic > m_axi_kvdram_V_WLAST;
    sc_out< sc_lv<1> > m_axi_kvdram_V_WID;
    sc_out< sc_lv<1> > m_axi_kvdram_V_WUSER;
    sc_out< sc_logic > m_axi_kvdram_V_ARVALID;
    sc_in< sc_logic > m_axi_kvdram_V_ARREADY;
    sc_out< sc_lv<32> > m_axi_kvdram_V_ARADDR;
    sc_out< sc_lv<1> > m_axi_kvdram_V_ARID;
    sc_out< sc_lv<32> > m_axi_kvdram_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_kvdram_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_kvdram_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_kvdram_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_kvdram_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_kvdram_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_kvdram_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_kvdram_V_ARREGION;
    sc_out< sc_lv<1> > m_axi_kvdram_V_ARUSER;
    sc_in< sc_logic > m_axi_kvdram_V_RVALID;
    sc_out< sc_logic > m_axi_kvdram_V_RREADY;
    sc_in< sc_lv<512> > m_axi_kvdram_V_RDATA;
    sc_in< sc_logic > m_axi_kvdram_V_RLAST;
    sc_in< sc_lv<1> > m_axi_kvdram_V_RID;
    sc_in< sc_lv<1> > m_axi_kvdram_V_RUSER;
    sc_in< sc_lv<2> > m_axi_kvdram_V_RRESP;
    sc_in< sc_logic > m_axi_kvdram_V_BVALID;
    sc_out< sc_logic > m_axi_kvdram_V_BREADY;
    sc_in< sc_lv<2> > m_axi_kvdram_V_BRESP;
    sc_in< sc_lv<1> > m_axi_kvdram_V_BID;
    sc_in< sc_lv<1> > m_axi_kvdram_V_BUSER;
    sc_in< sc_lv<26> > kvdram_V_offset;
    sc_out< sc_lv<9> > buffer0_V_address0;
    sc_out< sc_logic > buffer0_V_ce0;
    sc_out< sc_logic > buffer0_V_we0;
    sc_out< sc_lv<512> > buffer0_V_d0;
    sc_out< sc_lv<9> > buffer1_V_address0;
    sc_out< sc_logic > buffer1_V_ce0;
    sc_out< sc_logic > buffer1_V_we0;
    sc_out< sc_lv<512> > buffer1_V_d0;
    sc_out< sc_lv<9> > buffer2_V_address0;
    sc_out< sc_logic > buffer2_V_ce0;
    sc_out< sc_logic > buffer2_V_we0;
    sc_out< sc_lv<512> > buffer2_V_d0;
    sc_out< sc_lv<9> > buffer3_V_address0;
    sc_out< sc_logic > buffer3_V_ce0;
    sc_out< sc_logic > buffer3_V_we0;
    sc_out< sc_lv<512> > buffer3_V_d0;
    sc_in< sc_lv<25> > baseaddress;
    sc_in< sc_lv<32> > offset_kvs;
    sc_in< sc_lv<32> > travstate_i_kvs;
    sc_in< sc_lv<30> > travstate_end_kvs;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<1> > ap_var_for_const2;
    sc_signal< sc_lv<2> > ap_var_for_const1;


    // Module declarations
    readkeyvalues0_2(sc_module_name name);
    SC_HAS_PROCESS(readkeyvalues0_2);

    ~readkeyvalues0_2();

    sc_trace_file* mVcdFile;

    readkeyvalues0_166* grp_readkeyvalues0_166_fu_94;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > enable_read_read_fu_88_p2;
    sc_signal< sc_lv<32> > travstate_end_kvs_ca_fu_109_p1;
    sc_signal< sc_lv<32> > travstate_end_kvs_ca_reg_288;
    sc_signal< sc_lv<32> > i_fu_119_p2;
    sc_signal< sc_lv<32> > i_reg_298;
    sc_signal< sc_lv<1> > icmp_ln1234_fu_125_p2;
    sc_signal< sc_lv<1> > icmp_ln1234_reg_303;
    sc_signal< sc_lv<32> > select_ln1233_fu_145_p3;
    sc_signal< sc_lv<32> > select_ln1233_reg_308;
    sc_signal< sc_lv<32> > select_ln1233_4_fu_175_p3;
    sc_signal< sc_lv<32> > select_ln1233_4_reg_313;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > grp_readkeyvalues0_166_fu_94_ap_ready;
    sc_signal< sc_logic > grp_readkeyvalues0_166_fu_94_ap_done;
    sc_signal< sc_lv<32> > select_ln1233_5_fu_205_p3;
    sc_signal< sc_lv<32> > select_ln1233_5_reg_318;
    sc_signal< sc_lv<32> > select_ln1233_6_fu_236_p3;
    sc_signal< sc_lv<32> > select_ln1233_6_reg_323;
    sc_signal< sc_lv<32> > add_ln1437_fu_244_p2;
    sc_signal< sc_lv<32> > add_ln1437_reg_328;
    sc_signal< sc_lv<32> > add_ln1438_fu_249_p2;
    sc_signal< sc_lv<32> > add_ln1438_reg_333;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > add_ln1439_fu_254_p2;
    sc_signal< sc_lv<32> > add_ln1439_reg_338;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > grp_readkeyvalues0_166_fu_94_ap_start;
    sc_signal< sc_logic > grp_readkeyvalues0_166_fu_94_ap_idle;
    sc_signal< sc_logic > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_AWVALID;
    sc_signal< sc_lv<32> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_AWADDR;
    sc_signal< sc_lv<1> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_AWID;
    sc_signal< sc_lv<32> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_AWLEN;
    sc_signal< sc_lv<3> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_AWSIZE;
    sc_signal< sc_lv<2> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_AWBURST;
    sc_signal< sc_lv<2> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_AWLOCK;
    sc_signal< sc_lv<4> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_AWCACHE;
    sc_signal< sc_lv<3> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_AWPROT;
    sc_signal< sc_lv<4> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_AWQOS;
    sc_signal< sc_lv<4> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_AWREGION;
    sc_signal< sc_lv<1> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_AWUSER;
    sc_signal< sc_logic > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_WVALID;
    sc_signal< sc_lv<512> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_WDATA;
    sc_signal< sc_lv<64> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_WSTRB;
    sc_signal< sc_logic > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_WLAST;
    sc_signal< sc_lv<1> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_WID;
    sc_signal< sc_lv<1> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_WUSER;
    sc_signal< sc_logic > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_ARVALID;
    sc_signal< sc_lv<32> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_ARADDR;
    sc_signal< sc_lv<1> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_ARID;
    sc_signal< sc_lv<32> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_ARLEN;
    sc_signal< sc_lv<3> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_ARSIZE;
    sc_signal< sc_lv<2> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_ARBURST;
    sc_signal< sc_lv<2> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_ARLOCK;
    sc_signal< sc_lv<4> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_ARCACHE;
    sc_signal< sc_lv<3> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_ARPROT;
    sc_signal< sc_lv<4> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_ARQOS;
    sc_signal< sc_lv<4> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_ARREGION;
    sc_signal< sc_lv<1> > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_ARUSER;
    sc_signal< sc_logic > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_RREADY;
    sc_signal< sc_logic > grp_readkeyvalues0_166_fu_94_m_axi_kvdram_V_BREADY;
    sc_signal< sc_lv<9> > grp_readkeyvalues0_166_fu_94_buffer_V_address0;
    sc_signal< sc_logic > grp_readkeyvalues0_166_fu_94_buffer_V_ce0;
    sc_signal< sc_logic > grp_readkeyvalues0_166_fu_94_buffer_V_we0;
    sc_signal< sc_lv<512> > grp_readkeyvalues0_166_fu_94_buffer_V_d0;
    sc_signal< sc_lv<32> > grp_readkeyvalues0_166_fu_94_offset_kvs;
    sc_signal< sc_lv<32> > grp_readkeyvalues0_166_fu_94_size_kvs;
    sc_signal< sc_logic > grp_readkeyvalues0_166_fu_94_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > chunk0_size_fu_131_p2;
    sc_signal< sc_lv<1> > icmp_ln1233_fu_113_p2;
    sc_signal< sc_lv<32> > select_ln1234_fu_137_p3;
    sc_signal< sc_lv<32> > i_4_fu_153_p2;
    sc_signal< sc_lv<1> > icmp_ln1234_4_fu_158_p2;
    sc_signal< sc_lv<32> > chunk1_size_fu_163_p2;
    sc_signal< sc_lv<32> > select_ln1234_4_fu_167_p3;
    sc_signal< sc_lv<32> > i_5_fu_182_p2;
    sc_signal< sc_lv<1> > icmp_ln1234_5_fu_187_p2;
    sc_signal< sc_lv<32> > chunk2_size_fu_192_p2;
    sc_signal< sc_lv<32> > select_ln1234_5_fu_197_p3;
    sc_signal< sc_lv<32> > add_ln1234_fu_213_p2;
    sc_signal< sc_lv<1> > icmp_ln1234_6_fu_218_p2;
    sc_signal< sc_lv<32> > chunk3_size_fu_223_p2;
    sc_signal< sc_lv<32> > select_ln1234_6_fu_228_p3;
    sc_signal< bool > ap_block_state9_on_subcall_done;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<512> ap_const_lv512_lc_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_200;
    static const sc_lv<32> ap_const_lv32_400;
    static const sc_lv<32> ap_const_lv32_600;
    static const sc_lv<32> ap_const_lv32_800;
    static const bool ap_const_boolean_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln1234_fu_213_p2();
    void thread_add_ln1437_fu_244_p2();
    void thread_add_ln1438_fu_249_p2();
    void thread_add_ln1439_fu_254_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state9_on_subcall_done();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buffer0_V_address0();
    void thread_buffer0_V_ce0();
    void thread_buffer0_V_d0();
    void thread_buffer0_V_we0();
    void thread_buffer1_V_address0();
    void thread_buffer1_V_ce0();
    void thread_buffer1_V_d0();
    void thread_buffer1_V_we0();
    void thread_buffer2_V_address0();
    void thread_buffer2_V_ce0();
    void thread_buffer2_V_d0();
    void thread_buffer2_V_we0();
    void thread_buffer3_V_address0();
    void thread_buffer3_V_ce0();
    void thread_buffer3_V_d0();
    void thread_buffer3_V_we0();
    void thread_chunk0_size_fu_131_p2();
    void thread_chunk1_size_fu_163_p2();
    void thread_chunk2_size_fu_192_p2();
    void thread_chunk3_size_fu_223_p2();
    void thread_enable_read_read_fu_88_p2();
    void thread_grp_readkeyvalues0_166_fu_94_ap_start();
    void thread_grp_readkeyvalues0_166_fu_94_offset_kvs();
    void thread_grp_readkeyvalues0_166_fu_94_size_kvs();
    void thread_i_4_fu_153_p2();
    void thread_i_5_fu_182_p2();
    void thread_i_fu_119_p2();
    void thread_icmp_ln1233_fu_113_p2();
    void thread_icmp_ln1234_4_fu_158_p2();
    void thread_icmp_ln1234_5_fu_187_p2();
    void thread_icmp_ln1234_6_fu_218_p2();
    void thread_icmp_ln1234_fu_125_p2();
    void thread_m_axi_kvdram_V_ARADDR();
    void thread_m_axi_kvdram_V_ARBURST();
    void thread_m_axi_kvdram_V_ARCACHE();
    void thread_m_axi_kvdram_V_ARID();
    void thread_m_axi_kvdram_V_ARLEN();
    void thread_m_axi_kvdram_V_ARLOCK();
    void thread_m_axi_kvdram_V_ARPROT();
    void thread_m_axi_kvdram_V_ARQOS();
    void thread_m_axi_kvdram_V_ARREGION();
    void thread_m_axi_kvdram_V_ARSIZE();
    void thread_m_axi_kvdram_V_ARUSER();
    void thread_m_axi_kvdram_V_ARVALID();
    void thread_m_axi_kvdram_V_AWADDR();
    void thread_m_axi_kvdram_V_AWBURST();
    void thread_m_axi_kvdram_V_AWCACHE();
    void thread_m_axi_kvdram_V_AWID();
    void thread_m_axi_kvdram_V_AWLEN();
    void thread_m_axi_kvdram_V_AWLOCK();
    void thread_m_axi_kvdram_V_AWPROT();
    void thread_m_axi_kvdram_V_AWQOS();
    void thread_m_axi_kvdram_V_AWREGION();
    void thread_m_axi_kvdram_V_AWSIZE();
    void thread_m_axi_kvdram_V_AWUSER();
    void thread_m_axi_kvdram_V_AWVALID();
    void thread_m_axi_kvdram_V_BREADY();
    void thread_m_axi_kvdram_V_RREADY();
    void thread_m_axi_kvdram_V_WDATA();
    void thread_m_axi_kvdram_V_WID();
    void thread_m_axi_kvdram_V_WLAST();
    void thread_m_axi_kvdram_V_WSTRB();
    void thread_m_axi_kvdram_V_WUSER();
    void thread_m_axi_kvdram_V_WVALID();
    void thread_select_ln1233_4_fu_175_p3();
    void thread_select_ln1233_5_fu_205_p3();
    void thread_select_ln1233_6_fu_236_p3();
    void thread_select_ln1233_fu_145_p3();
    void thread_select_ln1234_4_fu_167_p3();
    void thread_select_ln1234_5_fu_197_p3();
    void thread_select_ln1234_6_fu_228_p3();
    void thread_select_ln1234_fu_137_p3();
    void thread_travstate_end_kvs_ca_fu_109_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
