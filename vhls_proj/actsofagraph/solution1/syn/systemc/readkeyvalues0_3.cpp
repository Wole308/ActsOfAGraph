// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "readkeyvalues0_3.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic readkeyvalues0_3::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic readkeyvalues0_3::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> readkeyvalues0_3::ap_ST_fsm_state1 = "1";
const sc_lv<9> readkeyvalues0_3::ap_ST_fsm_state2 = "10";
const sc_lv<9> readkeyvalues0_3::ap_ST_fsm_state3 = "100";
const sc_lv<9> readkeyvalues0_3::ap_ST_fsm_state4 = "1000";
const sc_lv<9> readkeyvalues0_3::ap_ST_fsm_state5 = "10000";
const sc_lv<9> readkeyvalues0_3::ap_ST_fsm_state6 = "100000";
const sc_lv<9> readkeyvalues0_3::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> readkeyvalues0_3::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> readkeyvalues0_3::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> readkeyvalues0_3::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> readkeyvalues0_3::ap_const_lv1_0 = "0";
const sc_lv<3> readkeyvalues0_3::ap_const_lv3_0 = "000";
const sc_lv<2> readkeyvalues0_3::ap_const_lv2_0 = "00";
const sc_lv<4> readkeyvalues0_3::ap_const_lv4_0 = "0000";
const sc_lv<512> readkeyvalues0_3::ap_const_lv512_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> readkeyvalues0_3::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> readkeyvalues0_3::ap_const_lv32_1 = "1";
const sc_lv<32> readkeyvalues0_3::ap_const_lv32_2 = "10";
const sc_lv<32> readkeyvalues0_3::ap_const_lv32_4 = "100";
const sc_lv<32> readkeyvalues0_3::ap_const_lv32_6 = "110";
const sc_lv<32> readkeyvalues0_3::ap_const_lv32_3 = "11";
const sc_lv<32> readkeyvalues0_3::ap_const_lv32_5 = "101";
const sc_lv<32> readkeyvalues0_3::ap_const_lv32_7 = "111";
const sc_lv<32> readkeyvalues0_3::ap_const_lv32_8 = "1000";
const sc_lv<32> readkeyvalues0_3::ap_const_lv32_1F = "11111";
const sc_lv<32> readkeyvalues0_3::ap_const_lv32_200 = "1000000000";
const sc_lv<30> readkeyvalues0_3::ap_const_lv30_400 = "10000000000";
const sc_lv<30> readkeyvalues0_3::ap_const_lv30_600 = "11000000000";
const bool readkeyvalues0_3::ap_const_boolean_1 = true;

readkeyvalues0_3::readkeyvalues0_3(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_readkeyvalues0_166_fu_136 = new readkeyvalues0_166("grp_readkeyvalues0_166_fu_136");
    grp_readkeyvalues0_166_fu_136->ap_clk(ap_clk);
    grp_readkeyvalues0_166_fu_136->ap_rst(ap_rst);
    grp_readkeyvalues0_166_fu_136->ap_start(grp_readkeyvalues0_166_fu_136_ap_start);
    grp_readkeyvalues0_166_fu_136->ap_done(grp_readkeyvalues0_166_fu_136_ap_done);
    grp_readkeyvalues0_166_fu_136->ap_idle(grp_readkeyvalues0_166_fu_136_ap_idle);
    grp_readkeyvalues0_166_fu_136->ap_ready(grp_readkeyvalues0_166_fu_136_ap_ready);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_AWVALID(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWVALID);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_AWREADY(ap_var_for_const0);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_AWADDR(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWADDR);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_AWID(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWID);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_AWLEN(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWLEN);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_AWSIZE(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWSIZE);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_AWBURST(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWBURST);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_AWLOCK(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWLOCK);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_AWCACHE(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWCACHE);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_AWPROT(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWPROT);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_AWQOS(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWQOS);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_AWREGION(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWREGION);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_AWUSER(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWUSER);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_WVALID(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WVALID);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_WREADY(ap_var_for_const0);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_WDATA(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WDATA);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_WSTRB(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WSTRB);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_WLAST(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WLAST);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_WID(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WID);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_WUSER(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WUSER);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_ARVALID(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARVALID);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_ARREADY(m_axi_kvdram_V_ARREADY);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_ARADDR(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARADDR);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_ARID(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARID);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_ARLEN(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARLEN);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_ARSIZE(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARSIZE);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_ARBURST(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARBURST);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_ARLOCK(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARLOCK);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_ARCACHE(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARCACHE);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_ARPROT(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARPROT);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_ARQOS(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARQOS);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_ARREGION(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARREGION);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_ARUSER(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARUSER);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_RVALID(m_axi_kvdram_V_RVALID);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_RREADY(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_RREADY);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_RDATA(m_axi_kvdram_V_RDATA);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_RLAST(m_axi_kvdram_V_RLAST);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_RID(m_axi_kvdram_V_RID);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_RUSER(m_axi_kvdram_V_RUSER);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_RRESP(m_axi_kvdram_V_RRESP);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_BVALID(ap_var_for_const0);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_BREADY(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_BREADY);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_BRESP(ap_var_for_const1);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_BID(ap_var_for_const2);
    grp_readkeyvalues0_166_fu_136->m_axi_kvdram_V_BUSER(ap_var_for_const2);
    grp_readkeyvalues0_166_fu_136->kvdram_V_offset(kvdram_V_offset);
    grp_readkeyvalues0_166_fu_136->buffer_V_address0(grp_readkeyvalues0_166_fu_136_buffer_V_address0);
    grp_readkeyvalues0_166_fu_136->buffer_V_ce0(grp_readkeyvalues0_166_fu_136_buffer_V_ce0);
    grp_readkeyvalues0_166_fu_136->buffer_V_we0(grp_readkeyvalues0_166_fu_136_buffer_V_we0);
    grp_readkeyvalues0_166_fu_136->buffer_V_d0(grp_readkeyvalues0_166_fu_136_buffer_V_d0);
    grp_readkeyvalues0_166_fu_136->baseaddress(baseaddress);
    grp_readkeyvalues0_166_fu_136->offset_kvs(grp_readkeyvalues0_166_fu_136_offset_kvs);
    grp_readkeyvalues0_166_fu_136->size_kvs(grp_readkeyvalues0_166_fu_136_size_kvs);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1234_fu_179_p2);
    sensitive << ( travstate_i_kvs );

    SC_METHOD(thread_add_ln1447_fu_153_p2);
    sensitive << ( sourcestats_0_value );

    SC_METHOD(thread_add_ln1452_fu_233_p2);
    sensitive << ( sourcestats_1_value );

    SC_METHOD(thread_add_ln1457_fu_303_p2);
    sensitive << ( sourcestats_2_value );

    SC_METHOD(thread_add_ln1462_fu_383_p2);
    sensitive << ( sourcestats_3_value );

    SC_METHOD(thread_add_ln1474_fu_227_p2);
    sensitive << ( travstate_i_kvs );
    sensitive << ( zext_ln1474_fu_223_p1 );

    SC_METHOD(thread_add_ln1475_fu_298_p2);
    sensitive << ( add_ln1234_reg_475 );
    sensitive << ( zext_ln1475_fu_294_p1 );

    SC_METHOD(thread_add_ln1476_1_fu_378_p2);
    sensitive << ( travstate_i_kvs );
    sensitive << ( zext_ln1476_fu_374_p1 );

    SC_METHOD(thread_add_ln1476_fu_368_p2);
    sensitive << ( zext_ln1476_1_fu_364_p1 );

    SC_METHOD(thread_add_ln1477_1_fu_458_p2);
    sensitive << ( travstate_i_kvs );
    sensitive << ( zext_ln1477_fu_454_p1 );

    SC_METHOD(thread_add_ln1477_fu_448_p2);
    sensitive << ( zext_ln1477_1_fu_444_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_ap_done );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_readkeyvalues0_166_fu_136_ap_done );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_buffer0_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_buffer_V_address0 );

    SC_METHOD(thread_buffer0_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_buffer_V_ce0 );

    SC_METHOD(thread_buffer0_V_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_buffer_V_d0 );

    SC_METHOD(thread_buffer0_V_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_buffer_V_we0 );

    SC_METHOD(thread_buffer1_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_buffer_V_address0 );

    SC_METHOD(thread_buffer1_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_buffer_V_ce0 );

    SC_METHOD(thread_buffer1_V_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_buffer_V_d0 );

    SC_METHOD(thread_buffer1_V_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_buffer_V_we0 );

    SC_METHOD(thread_buffer2_V_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_buffer_V_address0 );

    SC_METHOD(thread_buffer2_V_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_buffer_V_ce0 );

    SC_METHOD(thread_buffer2_V_d0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_buffer_V_d0 );

    SC_METHOD(thread_buffer2_V_we0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_buffer_V_we0 );

    SC_METHOD(thread_buffer3_V_address0);
    sensitive << ( grp_readkeyvalues0_166_fu_136_buffer_V_address0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_buffer3_V_ce0);
    sensitive << ( grp_readkeyvalues0_166_fu_136_buffer_V_ce0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_buffer3_V_d0);
    sensitive << ( grp_readkeyvalues0_166_fu_136_buffer_V_d0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_buffer3_V_we0);
    sensitive << ( grp_readkeyvalues0_166_fu_136_buffer_V_we0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_chunk0_size_fu_191_p2);
    sensitive << ( travstate_i_kvs );
    sensitive << ( travstate0_end_kvs_1_fu_169_p1 );

    SC_METHOD(thread_chunk1_size_fu_263_p2);
    sensitive << ( travstate_i_kvs );
    sensitive << ( travstate1_end_kvs_1_fu_249_p1 );

    SC_METHOD(thread_chunk2_size_fu_333_p2);
    sensitive << ( travstate_i_kvs );
    sensitive << ( travstate2_end_kvs_1_fu_319_p1 );

    SC_METHOD(thread_chunk3_size_fu_413_p2);
    sensitive << ( travstate_i_kvs );
    sensitive << ( travstate3_end_kvs_1_fu_399_p1 );

    SC_METHOD(thread_grp_readkeyvalues0_166_fu_136_ap_start);
    sensitive << ( grp_readkeyvalues0_166_fu_136_ap_start_reg );

    SC_METHOD(thread_grp_readkeyvalues0_166_fu_136_offset_kvs);
    sensitive << ( add_ln1474_reg_488 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( add_ln1475_reg_508 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( add_ln1476_1_reg_518 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( add_ln1477_1_reg_528 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_readkeyvalues0_166_fu_136_size_kvs);
    sensitive << ( select_ln1233_reg_483 );
    sensitive << ( select_ln1233_1_reg_503 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( select_ln1233_2_reg_513 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( select_ln1233_3_reg_523 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_icmp_ln1233_1_fu_253_p2);
    sensitive << ( travstate_i_kvs );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_ap_done );
    sensitive << ( travstate1_end_kvs_1_fu_249_p1 );

    SC_METHOD(thread_icmp_ln1233_2_fu_323_p2);
    sensitive << ( travstate_i_kvs );
    sensitive << ( grp_readkeyvalues0_166_fu_136_ap_done );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( travstate2_end_kvs_1_fu_319_p1 );

    SC_METHOD(thread_icmp_ln1233_3_fu_403_p2);
    sensitive << ( travstate_i_kvs );
    sensitive << ( grp_readkeyvalues0_166_fu_136_ap_done );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( travstate3_end_kvs_1_fu_399_p1 );

    SC_METHOD(thread_icmp_ln1233_fu_173_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( travstate_i_kvs );
    sensitive << ( travstate0_end_kvs_1_fu_169_p1 );

    SC_METHOD(thread_icmp_ln1234_1_fu_258_p2);
    sensitive << ( add_ln1234_reg_475 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_ap_done );
    sensitive << ( travstate1_end_kvs_1_fu_249_p1 );

    SC_METHOD(thread_icmp_ln1234_2_fu_328_p2);
    sensitive << ( add_ln1234_reg_475 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_ap_done );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( travstate2_end_kvs_1_fu_319_p1 );

    SC_METHOD(thread_icmp_ln1234_3_fu_408_p2);
    sensitive << ( add_ln1234_reg_475 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_ap_done );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( travstate3_end_kvs_1_fu_399_p1 );

    SC_METHOD(thread_icmp_ln1234_fu_185_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( add_ln1234_fu_179_p2 );
    sensitive << ( travstate0_end_kvs_1_fu_169_p1 );

    SC_METHOD(thread_lshr_ln1_fu_284_p4);
    sensitive << ( sourcestats_1_key_r );

    SC_METHOD(thread_lshr_ln_fu_213_p4);
    sensitive << ( sourcestats_0_key_r );

    SC_METHOD(thread_m_axi_kvdram_V_ARADDR);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARADDR );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_m_axi_kvdram_V_ARBURST);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARBURST );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_m_axi_kvdram_V_ARCACHE);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARCACHE );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_m_axi_kvdram_V_ARID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARID );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_m_axi_kvdram_V_ARLEN);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARLEN );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_m_axi_kvdram_V_ARLOCK);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARLOCK );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_m_axi_kvdram_V_ARPROT);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARPROT );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_m_axi_kvdram_V_ARQOS);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARQOS );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_m_axi_kvdram_V_ARREGION);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARREGION );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_m_axi_kvdram_V_ARSIZE);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARSIZE );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_m_axi_kvdram_V_ARUSER);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARUSER );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_m_axi_kvdram_V_ARVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARVALID );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_m_axi_kvdram_V_AWADDR);

    SC_METHOD(thread_m_axi_kvdram_V_AWBURST);

    SC_METHOD(thread_m_axi_kvdram_V_AWCACHE);

    SC_METHOD(thread_m_axi_kvdram_V_AWID);

    SC_METHOD(thread_m_axi_kvdram_V_AWLEN);

    SC_METHOD(thread_m_axi_kvdram_V_AWLOCK);

    SC_METHOD(thread_m_axi_kvdram_V_AWPROT);

    SC_METHOD(thread_m_axi_kvdram_V_AWQOS);

    SC_METHOD(thread_m_axi_kvdram_V_AWREGION);

    SC_METHOD(thread_m_axi_kvdram_V_AWSIZE);

    SC_METHOD(thread_m_axi_kvdram_V_AWUSER);

    SC_METHOD(thread_m_axi_kvdram_V_AWVALID);

    SC_METHOD(thread_m_axi_kvdram_V_BREADY);

    SC_METHOD(thread_m_axi_kvdram_V_RREADY);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_RREADY );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_m_axi_kvdram_V_WDATA);

    SC_METHOD(thread_m_axi_kvdram_V_WID);

    SC_METHOD(thread_m_axi_kvdram_V_WLAST);

    SC_METHOD(thread_m_axi_kvdram_V_WSTRB);

    SC_METHOD(thread_m_axi_kvdram_V_WUSER);

    SC_METHOD(thread_m_axi_kvdram_V_WVALID);

    SC_METHOD(thread_select_ln1233_1_fu_276_p3);
    sensitive << ( icmp_ln1233_1_fu_253_p2 );
    sensitive << ( select_ln1234_1_fu_268_p3 );

    SC_METHOD(thread_select_ln1233_2_fu_346_p3);
    sensitive << ( icmp_ln1233_2_fu_323_p2 );
    sensitive << ( select_ln1234_2_fu_338_p3 );

    SC_METHOD(thread_select_ln1233_3_fu_426_p3);
    sensitive << ( icmp_ln1233_3_fu_403_p2 );
    sensitive << ( select_ln1234_3_fu_418_p3 );

    SC_METHOD(thread_select_ln1233_fu_205_p3);
    sensitive << ( icmp_ln1233_fu_173_p2 );
    sensitive << ( select_ln1234_fu_197_p3 );

    SC_METHOD(thread_select_ln1234_1_fu_268_p3);
    sensitive << ( icmp_ln1234_1_fu_258_p2 );
    sensitive << ( chunk1_size_fu_263_p2 );

    SC_METHOD(thread_select_ln1234_2_fu_338_p3);
    sensitive << ( icmp_ln1234_2_fu_328_p2 );
    sensitive << ( chunk2_size_fu_333_p2 );

    SC_METHOD(thread_select_ln1234_3_fu_418_p3);
    sensitive << ( icmp_ln1234_3_fu_408_p2 );
    sensitive << ( chunk3_size_fu_413_p2 );

    SC_METHOD(thread_select_ln1234_fu_197_p3);
    sensitive << ( icmp_ln1234_fu_185_p2 );
    sensitive << ( chunk0_size_fu_191_p2 );

    SC_METHOD(thread_tmp_36_fu_434_p4);
    sensitive << ( sourcestats_3_key_r );

    SC_METHOD(thread_tmp_fu_354_p4);
    sensitive << ( sourcestats_2_key_r );

    SC_METHOD(thread_travstate0_end_kvs_1_fu_169_p1);
    sensitive << ( travstate0_end_kvs_fu_159_p4 );

    SC_METHOD(thread_travstate0_end_kvs_fu_159_p4);
    sensitive << ( add_ln1447_fu_153_p2 );

    SC_METHOD(thread_travstate1_end_kvs_1_fu_249_p1);
    sensitive << ( travstate1_end_kvs_fu_239_p4 );

    SC_METHOD(thread_travstate1_end_kvs_fu_239_p4);
    sensitive << ( add_ln1452_fu_233_p2 );

    SC_METHOD(thread_travstate2_end_kvs_1_fu_319_p1);
    sensitive << ( travstate2_end_kvs_fu_309_p4 );

    SC_METHOD(thread_travstate2_end_kvs_fu_309_p4);
    sensitive << ( add_ln1457_fu_303_p2 );

    SC_METHOD(thread_travstate3_end_kvs_1_fu_399_p1);
    sensitive << ( travstate3_end_kvs_fu_389_p4 );

    SC_METHOD(thread_travstate3_end_kvs_fu_389_p4);
    sensitive << ( add_ln1462_fu_383_p2 );

    SC_METHOD(thread_zext_ln1474_fu_223_p1);
    sensitive << ( lshr_ln_fu_213_p4 );

    SC_METHOD(thread_zext_ln1475_fu_294_p1);
    sensitive << ( lshr_ln1_fu_284_p4 );

    SC_METHOD(thread_zext_ln1476_1_fu_364_p1);
    sensitive << ( tmp_fu_354_p4 );

    SC_METHOD(thread_zext_ln1476_fu_374_p1);
    sensitive << ( add_ln1476_fu_368_p2 );

    SC_METHOD(thread_zext_ln1477_1_fu_444_p1);
    sensitive << ( tmp_36_fu_434_p4 );

    SC_METHOD(thread_zext_ln1477_fu_454_p1);
    sensitive << ( add_ln1477_fu_448_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_readkeyvalues0_166_fu_136_ap_done );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000000001";
    grp_readkeyvalues0_166_fu_136_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "readkeyvalues0_3_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_kvdram_V_AWVALID, "(port)m_axi_kvdram_V_AWVALID");
    sc_trace(mVcdFile, m_axi_kvdram_V_AWREADY, "(port)m_axi_kvdram_V_AWREADY");
    sc_trace(mVcdFile, m_axi_kvdram_V_AWADDR, "(port)m_axi_kvdram_V_AWADDR");
    sc_trace(mVcdFile, m_axi_kvdram_V_AWID, "(port)m_axi_kvdram_V_AWID");
    sc_trace(mVcdFile, m_axi_kvdram_V_AWLEN, "(port)m_axi_kvdram_V_AWLEN");
    sc_trace(mVcdFile, m_axi_kvdram_V_AWSIZE, "(port)m_axi_kvdram_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_kvdram_V_AWBURST, "(port)m_axi_kvdram_V_AWBURST");
    sc_trace(mVcdFile, m_axi_kvdram_V_AWLOCK, "(port)m_axi_kvdram_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_kvdram_V_AWCACHE, "(port)m_axi_kvdram_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_kvdram_V_AWPROT, "(port)m_axi_kvdram_V_AWPROT");
    sc_trace(mVcdFile, m_axi_kvdram_V_AWQOS, "(port)m_axi_kvdram_V_AWQOS");
    sc_trace(mVcdFile, m_axi_kvdram_V_AWREGION, "(port)m_axi_kvdram_V_AWREGION");
    sc_trace(mVcdFile, m_axi_kvdram_V_AWUSER, "(port)m_axi_kvdram_V_AWUSER");
    sc_trace(mVcdFile, m_axi_kvdram_V_WVALID, "(port)m_axi_kvdram_V_WVALID");
    sc_trace(mVcdFile, m_axi_kvdram_V_WREADY, "(port)m_axi_kvdram_V_WREADY");
    sc_trace(mVcdFile, m_axi_kvdram_V_WDATA, "(port)m_axi_kvdram_V_WDATA");
    sc_trace(mVcdFile, m_axi_kvdram_V_WSTRB, "(port)m_axi_kvdram_V_WSTRB");
    sc_trace(mVcdFile, m_axi_kvdram_V_WLAST, "(port)m_axi_kvdram_V_WLAST");
    sc_trace(mVcdFile, m_axi_kvdram_V_WID, "(port)m_axi_kvdram_V_WID");
    sc_trace(mVcdFile, m_axi_kvdram_V_WUSER, "(port)m_axi_kvdram_V_WUSER");
    sc_trace(mVcdFile, m_axi_kvdram_V_ARVALID, "(port)m_axi_kvdram_V_ARVALID");
    sc_trace(mVcdFile, m_axi_kvdram_V_ARREADY, "(port)m_axi_kvdram_V_ARREADY");
    sc_trace(mVcdFile, m_axi_kvdram_V_ARADDR, "(port)m_axi_kvdram_V_ARADDR");
    sc_trace(mVcdFile, m_axi_kvdram_V_ARID, "(port)m_axi_kvdram_V_ARID");
    sc_trace(mVcdFile, m_axi_kvdram_V_ARLEN, "(port)m_axi_kvdram_V_ARLEN");
    sc_trace(mVcdFile, m_axi_kvdram_V_ARSIZE, "(port)m_axi_kvdram_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_kvdram_V_ARBURST, "(port)m_axi_kvdram_V_ARBURST");
    sc_trace(mVcdFile, m_axi_kvdram_V_ARLOCK, "(port)m_axi_kvdram_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_kvdram_V_ARCACHE, "(port)m_axi_kvdram_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_kvdram_V_ARPROT, "(port)m_axi_kvdram_V_ARPROT");
    sc_trace(mVcdFile, m_axi_kvdram_V_ARQOS, "(port)m_axi_kvdram_V_ARQOS");
    sc_trace(mVcdFile, m_axi_kvdram_V_ARREGION, "(port)m_axi_kvdram_V_ARREGION");
    sc_trace(mVcdFile, m_axi_kvdram_V_ARUSER, "(port)m_axi_kvdram_V_ARUSER");
    sc_trace(mVcdFile, m_axi_kvdram_V_RVALID, "(port)m_axi_kvdram_V_RVALID");
    sc_trace(mVcdFile, m_axi_kvdram_V_RREADY, "(port)m_axi_kvdram_V_RREADY");
    sc_trace(mVcdFile, m_axi_kvdram_V_RDATA, "(port)m_axi_kvdram_V_RDATA");
    sc_trace(mVcdFile, m_axi_kvdram_V_RLAST, "(port)m_axi_kvdram_V_RLAST");
    sc_trace(mVcdFile, m_axi_kvdram_V_RID, "(port)m_axi_kvdram_V_RID");
    sc_trace(mVcdFile, m_axi_kvdram_V_RUSER, "(port)m_axi_kvdram_V_RUSER");
    sc_trace(mVcdFile, m_axi_kvdram_V_RRESP, "(port)m_axi_kvdram_V_RRESP");
    sc_trace(mVcdFile, m_axi_kvdram_V_BVALID, "(port)m_axi_kvdram_V_BVALID");
    sc_trace(mVcdFile, m_axi_kvdram_V_BREADY, "(port)m_axi_kvdram_V_BREADY");
    sc_trace(mVcdFile, m_axi_kvdram_V_BRESP, "(port)m_axi_kvdram_V_BRESP");
    sc_trace(mVcdFile, m_axi_kvdram_V_BID, "(port)m_axi_kvdram_V_BID");
    sc_trace(mVcdFile, m_axi_kvdram_V_BUSER, "(port)m_axi_kvdram_V_BUSER");
    sc_trace(mVcdFile, kvdram_V_offset, "(port)kvdram_V_offset");
    sc_trace(mVcdFile, buffer0_V_address0, "(port)buffer0_V_address0");
    sc_trace(mVcdFile, buffer0_V_ce0, "(port)buffer0_V_ce0");
    sc_trace(mVcdFile, buffer0_V_we0, "(port)buffer0_V_we0");
    sc_trace(mVcdFile, buffer0_V_d0, "(port)buffer0_V_d0");
    sc_trace(mVcdFile, buffer1_V_address0, "(port)buffer1_V_address0");
    sc_trace(mVcdFile, buffer1_V_ce0, "(port)buffer1_V_ce0");
    sc_trace(mVcdFile, buffer1_V_we0, "(port)buffer1_V_we0");
    sc_trace(mVcdFile, buffer1_V_d0, "(port)buffer1_V_d0");
    sc_trace(mVcdFile, buffer2_V_address0, "(port)buffer2_V_address0");
    sc_trace(mVcdFile, buffer2_V_ce0, "(port)buffer2_V_ce0");
    sc_trace(mVcdFile, buffer2_V_we0, "(port)buffer2_V_we0");
    sc_trace(mVcdFile, buffer2_V_d0, "(port)buffer2_V_d0");
    sc_trace(mVcdFile, buffer3_V_address0, "(port)buffer3_V_address0");
    sc_trace(mVcdFile, buffer3_V_ce0, "(port)buffer3_V_ce0");
    sc_trace(mVcdFile, buffer3_V_we0, "(port)buffer3_V_we0");
    sc_trace(mVcdFile, buffer3_V_d0, "(port)buffer3_V_d0");
    sc_trace(mVcdFile, baseaddress, "(port)baseaddress");
    sc_trace(mVcdFile, sourcestats_0_key_r, "(port)sourcestats_0_key_r");
    sc_trace(mVcdFile, sourcestats_1_key_r, "(port)sourcestats_1_key_r");
    sc_trace(mVcdFile, sourcestats_2_key_r, "(port)sourcestats_2_key_r");
    sc_trace(mVcdFile, sourcestats_3_key_r, "(port)sourcestats_3_key_r");
    sc_trace(mVcdFile, sourcestats_0_value, "(port)sourcestats_0_value");
    sc_trace(mVcdFile, sourcestats_1_value, "(port)sourcestats_1_value");
    sc_trace(mVcdFile, sourcestats_2_value, "(port)sourcestats_2_value");
    sc_trace(mVcdFile, sourcestats_3_value, "(port)sourcestats_3_value");
    sc_trace(mVcdFile, travstate_i_kvs, "(port)travstate_i_kvs");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, add_ln1234_fu_179_p2, "add_ln1234_fu_179_p2");
    sc_trace(mVcdFile, add_ln1234_reg_475, "add_ln1234_reg_475");
    sc_trace(mVcdFile, select_ln1233_fu_205_p3, "select_ln1233_fu_205_p3");
    sc_trace(mVcdFile, select_ln1233_reg_483, "select_ln1233_reg_483");
    sc_trace(mVcdFile, add_ln1474_fu_227_p2, "add_ln1474_fu_227_p2");
    sc_trace(mVcdFile, add_ln1474_reg_488, "add_ln1474_reg_488");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, select_ln1233_1_fu_276_p3, "select_ln1233_1_fu_276_p3");
    sc_trace(mVcdFile, select_ln1233_1_reg_503, "select_ln1233_1_reg_503");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_ap_ready, "grp_readkeyvalues0_166_fu_136_ap_ready");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_ap_done, "grp_readkeyvalues0_166_fu_136_ap_done");
    sc_trace(mVcdFile, add_ln1475_fu_298_p2, "add_ln1475_fu_298_p2");
    sc_trace(mVcdFile, add_ln1475_reg_508, "add_ln1475_reg_508");
    sc_trace(mVcdFile, select_ln1233_2_fu_346_p3, "select_ln1233_2_fu_346_p3");
    sc_trace(mVcdFile, select_ln1233_2_reg_513, "select_ln1233_2_reg_513");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln1476_1_fu_378_p2, "add_ln1476_1_fu_378_p2");
    sc_trace(mVcdFile, add_ln1476_1_reg_518, "add_ln1476_1_reg_518");
    sc_trace(mVcdFile, select_ln1233_3_fu_426_p3, "select_ln1233_3_fu_426_p3");
    sc_trace(mVcdFile, select_ln1233_3_reg_523, "select_ln1233_3_reg_523");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, add_ln1477_1_fu_458_p2, "add_ln1477_1_fu_458_p2");
    sc_trace(mVcdFile, add_ln1477_1_reg_528, "add_ln1477_1_reg_528");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_ap_start, "grp_readkeyvalues0_166_fu_136_ap_start");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_ap_idle, "grp_readkeyvalues0_166_fu_136_ap_idle");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWVALID, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWVALID");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWADDR, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWADDR");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWID, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWID");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWLEN, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWLEN");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWSIZE, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWSIZE");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWBURST, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWBURST");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWLOCK, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWLOCK");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWCACHE, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWCACHE");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWPROT, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWPROT");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWQOS, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWQOS");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWREGION, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWREGION");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWUSER, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWUSER");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WVALID, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WVALID");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WDATA, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WDATA");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WSTRB, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WSTRB");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WLAST, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WLAST");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WID, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WID");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WUSER, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WUSER");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARVALID, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARVALID");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARADDR, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARADDR");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARID, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARID");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARLEN, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARLEN");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARSIZE, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARSIZE");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARBURST, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARBURST");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARLOCK, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARLOCK");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARCACHE, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARCACHE");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARPROT, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARPROT");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARQOS, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARQOS");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARREGION, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARREGION");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARUSER, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARUSER");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_RREADY, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_RREADY");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_BREADY, "grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_BREADY");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_buffer_V_address0, "grp_readkeyvalues0_166_fu_136_buffer_V_address0");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_buffer_V_ce0, "grp_readkeyvalues0_166_fu_136_buffer_V_ce0");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_buffer_V_we0, "grp_readkeyvalues0_166_fu_136_buffer_V_we0");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_buffer_V_d0, "grp_readkeyvalues0_166_fu_136_buffer_V_d0");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_offset_kvs, "grp_readkeyvalues0_166_fu_136_offset_kvs");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_size_kvs, "grp_readkeyvalues0_166_fu_136_size_kvs");
    sc_trace(mVcdFile, grp_readkeyvalues0_166_fu_136_ap_start_reg, "grp_readkeyvalues0_166_fu_136_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, add_ln1447_fu_153_p2, "add_ln1447_fu_153_p2");
    sc_trace(mVcdFile, travstate0_end_kvs_fu_159_p4, "travstate0_end_kvs_fu_159_p4");
    sc_trace(mVcdFile, travstate0_end_kvs_1_fu_169_p1, "travstate0_end_kvs_1_fu_169_p1");
    sc_trace(mVcdFile, icmp_ln1234_fu_185_p2, "icmp_ln1234_fu_185_p2");
    sc_trace(mVcdFile, chunk0_size_fu_191_p2, "chunk0_size_fu_191_p2");
    sc_trace(mVcdFile, icmp_ln1233_fu_173_p2, "icmp_ln1233_fu_173_p2");
    sc_trace(mVcdFile, select_ln1234_fu_197_p3, "select_ln1234_fu_197_p3");
    sc_trace(mVcdFile, lshr_ln_fu_213_p4, "lshr_ln_fu_213_p4");
    sc_trace(mVcdFile, zext_ln1474_fu_223_p1, "zext_ln1474_fu_223_p1");
    sc_trace(mVcdFile, add_ln1452_fu_233_p2, "add_ln1452_fu_233_p2");
    sc_trace(mVcdFile, travstate1_end_kvs_fu_239_p4, "travstate1_end_kvs_fu_239_p4");
    sc_trace(mVcdFile, travstate1_end_kvs_1_fu_249_p1, "travstate1_end_kvs_1_fu_249_p1");
    sc_trace(mVcdFile, icmp_ln1234_1_fu_258_p2, "icmp_ln1234_1_fu_258_p2");
    sc_trace(mVcdFile, chunk1_size_fu_263_p2, "chunk1_size_fu_263_p2");
    sc_trace(mVcdFile, icmp_ln1233_1_fu_253_p2, "icmp_ln1233_1_fu_253_p2");
    sc_trace(mVcdFile, select_ln1234_1_fu_268_p3, "select_ln1234_1_fu_268_p3");
    sc_trace(mVcdFile, lshr_ln1_fu_284_p4, "lshr_ln1_fu_284_p4");
    sc_trace(mVcdFile, zext_ln1475_fu_294_p1, "zext_ln1475_fu_294_p1");
    sc_trace(mVcdFile, add_ln1457_fu_303_p2, "add_ln1457_fu_303_p2");
    sc_trace(mVcdFile, travstate2_end_kvs_fu_309_p4, "travstate2_end_kvs_fu_309_p4");
    sc_trace(mVcdFile, travstate2_end_kvs_1_fu_319_p1, "travstate2_end_kvs_1_fu_319_p1");
    sc_trace(mVcdFile, icmp_ln1234_2_fu_328_p2, "icmp_ln1234_2_fu_328_p2");
    sc_trace(mVcdFile, chunk2_size_fu_333_p2, "chunk2_size_fu_333_p2");
    sc_trace(mVcdFile, icmp_ln1233_2_fu_323_p2, "icmp_ln1233_2_fu_323_p2");
    sc_trace(mVcdFile, select_ln1234_2_fu_338_p3, "select_ln1234_2_fu_338_p3");
    sc_trace(mVcdFile, tmp_fu_354_p4, "tmp_fu_354_p4");
    sc_trace(mVcdFile, zext_ln1476_1_fu_364_p1, "zext_ln1476_1_fu_364_p1");
    sc_trace(mVcdFile, add_ln1476_fu_368_p2, "add_ln1476_fu_368_p2");
    sc_trace(mVcdFile, zext_ln1476_fu_374_p1, "zext_ln1476_fu_374_p1");
    sc_trace(mVcdFile, add_ln1462_fu_383_p2, "add_ln1462_fu_383_p2");
    sc_trace(mVcdFile, travstate3_end_kvs_fu_389_p4, "travstate3_end_kvs_fu_389_p4");
    sc_trace(mVcdFile, travstate3_end_kvs_1_fu_399_p1, "travstate3_end_kvs_1_fu_399_p1");
    sc_trace(mVcdFile, icmp_ln1234_3_fu_408_p2, "icmp_ln1234_3_fu_408_p2");
    sc_trace(mVcdFile, chunk3_size_fu_413_p2, "chunk3_size_fu_413_p2");
    sc_trace(mVcdFile, icmp_ln1233_3_fu_403_p2, "icmp_ln1233_3_fu_403_p2");
    sc_trace(mVcdFile, select_ln1234_3_fu_418_p3, "select_ln1234_3_fu_418_p3");
    sc_trace(mVcdFile, tmp_36_fu_434_p4, "tmp_36_fu_434_p4");
    sc_trace(mVcdFile, zext_ln1477_1_fu_444_p1, "zext_ln1477_1_fu_444_p1");
    sc_trace(mVcdFile, add_ln1477_fu_448_p2, "add_ln1477_fu_448_p2");
    sc_trace(mVcdFile, zext_ln1477_fu_454_p1, "zext_ln1477_fu_454_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

readkeyvalues0_3::~readkeyvalues0_3() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_readkeyvalues0_166_fu_136;
}

void readkeyvalues0_3::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_0;
}

void readkeyvalues0_3::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv1_0;
}

void readkeyvalues0_3::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv2_0;
}

void readkeyvalues0_3::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_readkeyvalues0_166_fu_136_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
            grp_readkeyvalues0_166_fu_136_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_readkeyvalues0_166_fu_136_ap_ready.read())) {
            grp_readkeyvalues0_166_fu_136_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        add_ln1234_reg_475 = add_ln1234_fu_179_p2.read();
        add_ln1474_reg_488 = add_ln1474_fu_227_p2.read();
        select_ln1233_reg_483 = select_ln1233_fu_205_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_readkeyvalues0_166_fu_136_ap_done.read(), ap_const_logic_1))) {
        add_ln1475_reg_508 = add_ln1475_fu_298_p2.read();
        select_ln1233_1_reg_503 = select_ln1233_1_fu_276_p3.read();
    }
    if ((esl_seteq<1,1,1>(grp_readkeyvalues0_166_fu_136_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        add_ln1476_1_reg_518 = add_ln1476_1_fu_378_p2.read();
        select_ln1233_2_reg_513 = select_ln1233_2_fu_346_p3.read();
    }
    if ((esl_seteq<1,1,1>(grp_readkeyvalues0_166_fu_136_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        add_ln1477_1_reg_528 = add_ln1477_1_fu_458_p2.read();
        select_ln1233_3_reg_523 = select_ln1233_3_fu_426_p3.read();
    }
}

void readkeyvalues0_3::thread_add_ln1234_fu_179_p2() {
    add_ln1234_fu_179_p2 = (!travstate_i_kvs.read().is_01() || !ap_const_lv32_200.is_01())? sc_lv<32>(): (sc_biguint<32>(travstate_i_kvs.read()) + sc_biguint<32>(ap_const_lv32_200));
}

void readkeyvalues0_3::thread_add_ln1447_fu_153_p2() {
    add_ln1447_fu_153_p2 = (!sourcestats_0_value.read().is_01() || !ap_const_lv32_7.is_01())? sc_lv<32>(): (sc_biguint<32>(sourcestats_0_value.read()) + sc_biguint<32>(ap_const_lv32_7));
}

void readkeyvalues0_3::thread_add_ln1452_fu_233_p2() {
    add_ln1452_fu_233_p2 = (!sourcestats_1_value.read().is_01() || !ap_const_lv32_7.is_01())? sc_lv<32>(): (sc_biguint<32>(sourcestats_1_value.read()) + sc_biguint<32>(ap_const_lv32_7));
}

void readkeyvalues0_3::thread_add_ln1457_fu_303_p2() {
    add_ln1457_fu_303_p2 = (!sourcestats_2_value.read().is_01() || !ap_const_lv32_7.is_01())? sc_lv<32>(): (sc_biguint<32>(sourcestats_2_value.read()) + sc_biguint<32>(ap_const_lv32_7));
}

void readkeyvalues0_3::thread_add_ln1462_fu_383_p2() {
    add_ln1462_fu_383_p2 = (!sourcestats_3_value.read().is_01() || !ap_const_lv32_7.is_01())? sc_lv<32>(): (sc_biguint<32>(sourcestats_3_value.read()) + sc_biguint<32>(ap_const_lv32_7));
}

void readkeyvalues0_3::thread_add_ln1474_fu_227_p2() {
    add_ln1474_fu_227_p2 = (!travstate_i_kvs.read().is_01() || !zext_ln1474_fu_223_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(travstate_i_kvs.read()) + sc_biguint<32>(zext_ln1474_fu_223_p1.read()));
}

void readkeyvalues0_3::thread_add_ln1475_fu_298_p2() {
    add_ln1475_fu_298_p2 = (!zext_ln1475_fu_294_p1.read().is_01() || !add_ln1234_reg_475.read().is_01())? sc_lv<32>(): (sc_biguint<32>(zext_ln1475_fu_294_p1.read()) + sc_biguint<32>(add_ln1234_reg_475.read()));
}

void readkeyvalues0_3::thread_add_ln1476_1_fu_378_p2() {
    add_ln1476_1_fu_378_p2 = (!travstate_i_kvs.read().is_01() || !zext_ln1476_fu_374_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(travstate_i_kvs.read()) + sc_biguint<32>(zext_ln1476_fu_374_p1.read()));
}

void readkeyvalues0_3::thread_add_ln1476_fu_368_p2() {
    add_ln1476_fu_368_p2 = (!zext_ln1476_1_fu_364_p1.read().is_01() || !ap_const_lv30_400.is_01())? sc_lv<30>(): (sc_biguint<30>(zext_ln1476_1_fu_364_p1.read()) + sc_biguint<30>(ap_const_lv30_400));
}

void readkeyvalues0_3::thread_add_ln1477_1_fu_458_p2() {
    add_ln1477_1_fu_458_p2 = (!travstate_i_kvs.read().is_01() || !zext_ln1477_fu_454_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(travstate_i_kvs.read()) + sc_biguint<32>(zext_ln1477_fu_454_p1.read()));
}

void readkeyvalues0_3::thread_add_ln1477_fu_448_p2() {
    add_ln1477_fu_448_p2 = (!zext_ln1477_1_fu_444_p1.read().is_01() || !ap_const_lv30_600.is_01())? sc_lv<30>(): (sc_biguint<30>(zext_ln1477_1_fu_444_p1.read()) + sc_biguint<30>(ap_const_lv30_600));
}

void readkeyvalues0_3::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void readkeyvalues0_3::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void readkeyvalues0_3::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void readkeyvalues0_3::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void readkeyvalues0_3::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void readkeyvalues0_3::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void readkeyvalues0_3::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void readkeyvalues0_3::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void readkeyvalues0_3::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void readkeyvalues0_3::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(grp_readkeyvalues0_166_fu_136_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void readkeyvalues0_3::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void readkeyvalues0_3::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(grp_readkeyvalues0_166_fu_136_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void readkeyvalues0_3::thread_buffer0_V_address0() {
    buffer0_V_address0 = grp_readkeyvalues0_166_fu_136_buffer_V_address0.read();
}

void readkeyvalues0_3::thread_buffer0_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        buffer0_V_ce0 = grp_readkeyvalues0_166_fu_136_buffer_V_ce0.read();
    } else {
        buffer0_V_ce0 = ap_const_logic_0;
    }
}

void readkeyvalues0_3::thread_buffer0_V_d0() {
    buffer0_V_d0 = grp_readkeyvalues0_166_fu_136_buffer_V_d0.read();
}

void readkeyvalues0_3::thread_buffer0_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        buffer0_V_we0 = grp_readkeyvalues0_166_fu_136_buffer_V_we0.read();
    } else {
        buffer0_V_we0 = ap_const_logic_0;
    }
}

void readkeyvalues0_3::thread_buffer1_V_address0() {
    buffer1_V_address0 = grp_readkeyvalues0_166_fu_136_buffer_V_address0.read();
}

void readkeyvalues0_3::thread_buffer1_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        buffer1_V_ce0 = grp_readkeyvalues0_166_fu_136_buffer_V_ce0.read();
    } else {
        buffer1_V_ce0 = ap_const_logic_0;
    }
}

void readkeyvalues0_3::thread_buffer1_V_d0() {
    buffer1_V_d0 = grp_readkeyvalues0_166_fu_136_buffer_V_d0.read();
}

void readkeyvalues0_3::thread_buffer1_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        buffer1_V_we0 = grp_readkeyvalues0_166_fu_136_buffer_V_we0.read();
    } else {
        buffer1_V_we0 = ap_const_logic_0;
    }
}

void readkeyvalues0_3::thread_buffer2_V_address0() {
    buffer2_V_address0 = grp_readkeyvalues0_166_fu_136_buffer_V_address0.read();
}

void readkeyvalues0_3::thread_buffer2_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        buffer2_V_ce0 = grp_readkeyvalues0_166_fu_136_buffer_V_ce0.read();
    } else {
        buffer2_V_ce0 = ap_const_logic_0;
    }
}

void readkeyvalues0_3::thread_buffer2_V_d0() {
    buffer2_V_d0 = grp_readkeyvalues0_166_fu_136_buffer_V_d0.read();
}

void readkeyvalues0_3::thread_buffer2_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        buffer2_V_we0 = grp_readkeyvalues0_166_fu_136_buffer_V_we0.read();
    } else {
        buffer2_V_we0 = ap_const_logic_0;
    }
}

void readkeyvalues0_3::thread_buffer3_V_address0() {
    buffer3_V_address0 = grp_readkeyvalues0_166_fu_136_buffer_V_address0.read();
}

void readkeyvalues0_3::thread_buffer3_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        buffer3_V_ce0 = grp_readkeyvalues0_166_fu_136_buffer_V_ce0.read();
    } else {
        buffer3_V_ce0 = ap_const_logic_0;
    }
}

void readkeyvalues0_3::thread_buffer3_V_d0() {
    buffer3_V_d0 = grp_readkeyvalues0_166_fu_136_buffer_V_d0.read();
}

void readkeyvalues0_3::thread_buffer3_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        buffer3_V_we0 = grp_readkeyvalues0_166_fu_136_buffer_V_we0.read();
    } else {
        buffer3_V_we0 = ap_const_logic_0;
    }
}

void readkeyvalues0_3::thread_chunk0_size_fu_191_p2() {
    chunk0_size_fu_191_p2 = (!travstate0_end_kvs_1_fu_169_p1.read().is_01() || !travstate_i_kvs.read().is_01())? sc_lv<32>(): (sc_biguint<32>(travstate0_end_kvs_1_fu_169_p1.read()) - sc_biguint<32>(travstate_i_kvs.read()));
}

void readkeyvalues0_3::thread_chunk1_size_fu_263_p2() {
    chunk1_size_fu_263_p2 = (!travstate1_end_kvs_1_fu_249_p1.read().is_01() || !travstate_i_kvs.read().is_01())? sc_lv<32>(): (sc_biguint<32>(travstate1_end_kvs_1_fu_249_p1.read()) - sc_biguint<32>(travstate_i_kvs.read()));
}

void readkeyvalues0_3::thread_chunk2_size_fu_333_p2() {
    chunk2_size_fu_333_p2 = (!travstate2_end_kvs_1_fu_319_p1.read().is_01() || !travstate_i_kvs.read().is_01())? sc_lv<32>(): (sc_biguint<32>(travstate2_end_kvs_1_fu_319_p1.read()) - sc_biguint<32>(travstate_i_kvs.read()));
}

void readkeyvalues0_3::thread_chunk3_size_fu_413_p2() {
    chunk3_size_fu_413_p2 = (!travstate3_end_kvs_1_fu_399_p1.read().is_01() || !travstate_i_kvs.read().is_01())? sc_lv<32>(): (sc_biguint<32>(travstate3_end_kvs_1_fu_399_p1.read()) - sc_biguint<32>(travstate_i_kvs.read()));
}

void readkeyvalues0_3::thread_grp_readkeyvalues0_166_fu_136_ap_start() {
    grp_readkeyvalues0_166_fu_136_ap_start = grp_readkeyvalues0_166_fu_136_ap_start_reg.read();
}

void readkeyvalues0_3::thread_grp_readkeyvalues0_166_fu_136_offset_kvs() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_readkeyvalues0_166_fu_136_offset_kvs = add_ln1477_1_reg_528.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_readkeyvalues0_166_fu_136_offset_kvs = add_ln1476_1_reg_518.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_readkeyvalues0_166_fu_136_offset_kvs = add_ln1475_reg_508.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_readkeyvalues0_166_fu_136_offset_kvs = add_ln1474_reg_488.read();
    } else {
        grp_readkeyvalues0_166_fu_136_offset_kvs = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void readkeyvalues0_3::thread_grp_readkeyvalues0_166_fu_136_size_kvs() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_readkeyvalues0_166_fu_136_size_kvs = select_ln1233_3_reg_523.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_readkeyvalues0_166_fu_136_size_kvs = select_ln1233_2_reg_513.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_readkeyvalues0_166_fu_136_size_kvs = select_ln1233_1_reg_503.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_readkeyvalues0_166_fu_136_size_kvs = select_ln1233_reg_483.read();
    } else {
        grp_readkeyvalues0_166_fu_136_size_kvs = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void readkeyvalues0_3::thread_icmp_ln1233_1_fu_253_p2() {
    icmp_ln1233_1_fu_253_p2 = (!travstate1_end_kvs_1_fu_249_p1.read().is_01() || !travstate_i_kvs.read().is_01())? sc_lv<1>(): (sc_biguint<32>(travstate1_end_kvs_1_fu_249_p1.read()) < sc_biguint<32>(travstate_i_kvs.read()));
}

void readkeyvalues0_3::thread_icmp_ln1233_2_fu_323_p2() {
    icmp_ln1233_2_fu_323_p2 = (!travstate2_end_kvs_1_fu_319_p1.read().is_01() || !travstate_i_kvs.read().is_01())? sc_lv<1>(): (sc_biguint<32>(travstate2_end_kvs_1_fu_319_p1.read()) < sc_biguint<32>(travstate_i_kvs.read()));
}

void readkeyvalues0_3::thread_icmp_ln1233_3_fu_403_p2() {
    icmp_ln1233_3_fu_403_p2 = (!travstate3_end_kvs_1_fu_399_p1.read().is_01() || !travstate_i_kvs.read().is_01())? sc_lv<1>(): (sc_biguint<32>(travstate3_end_kvs_1_fu_399_p1.read()) < sc_biguint<32>(travstate_i_kvs.read()));
}

void readkeyvalues0_3::thread_icmp_ln1233_fu_173_p2() {
    icmp_ln1233_fu_173_p2 = (!travstate0_end_kvs_1_fu_169_p1.read().is_01() || !travstate_i_kvs.read().is_01())? sc_lv<1>(): (sc_biguint<32>(travstate0_end_kvs_1_fu_169_p1.read()) < sc_biguint<32>(travstate_i_kvs.read()));
}

void readkeyvalues0_3::thread_icmp_ln1234_1_fu_258_p2() {
    icmp_ln1234_1_fu_258_p2 = (!add_ln1234_reg_475.read().is_01() || !travstate1_end_kvs_1_fu_249_p1.read().is_01())? sc_lv<1>(): (sc_biguint<32>(add_ln1234_reg_475.read()) > sc_biguint<32>(travstate1_end_kvs_1_fu_249_p1.read()));
}

void readkeyvalues0_3::thread_icmp_ln1234_2_fu_328_p2() {
    icmp_ln1234_2_fu_328_p2 = (!add_ln1234_reg_475.read().is_01() || !travstate2_end_kvs_1_fu_319_p1.read().is_01())? sc_lv<1>(): (sc_biguint<32>(add_ln1234_reg_475.read()) > sc_biguint<32>(travstate2_end_kvs_1_fu_319_p1.read()));
}

void readkeyvalues0_3::thread_icmp_ln1234_3_fu_408_p2() {
    icmp_ln1234_3_fu_408_p2 = (!add_ln1234_reg_475.read().is_01() || !travstate3_end_kvs_1_fu_399_p1.read().is_01())? sc_lv<1>(): (sc_biguint<32>(add_ln1234_reg_475.read()) > sc_biguint<32>(travstate3_end_kvs_1_fu_399_p1.read()));
}

void readkeyvalues0_3::thread_icmp_ln1234_fu_185_p2() {
    icmp_ln1234_fu_185_p2 = (!add_ln1234_fu_179_p2.read().is_01() || !travstate0_end_kvs_1_fu_169_p1.read().is_01())? sc_lv<1>(): (sc_biguint<32>(add_ln1234_fu_179_p2.read()) > sc_biguint<32>(travstate0_end_kvs_1_fu_169_p1.read()));
}

void readkeyvalues0_3::thread_lshr_ln1_fu_284_p4() {
    lshr_ln1_fu_284_p4 = sourcestats_1_key_r.read().range(31, 3);
}

void readkeyvalues0_3::thread_lshr_ln_fu_213_p4() {
    lshr_ln_fu_213_p4 = sourcestats_0_key_r.read().range(31, 3);
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_ARADDR() {
    m_axi_kvdram_V_ARADDR = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARADDR.read();
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_ARBURST() {
    m_axi_kvdram_V_ARBURST = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARBURST.read();
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_ARCACHE() {
    m_axi_kvdram_V_ARCACHE = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARCACHE.read();
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_ARID() {
    m_axi_kvdram_V_ARID = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARID.read();
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_ARLEN() {
    m_axi_kvdram_V_ARLEN = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARLEN.read();
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_ARLOCK() {
    m_axi_kvdram_V_ARLOCK = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARLOCK.read();
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_ARPROT() {
    m_axi_kvdram_V_ARPROT = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARPROT.read();
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_ARQOS() {
    m_axi_kvdram_V_ARQOS = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARQOS.read();
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_ARREGION() {
    m_axi_kvdram_V_ARREGION = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARREGION.read();
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_ARSIZE() {
    m_axi_kvdram_V_ARSIZE = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARSIZE.read();
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_ARUSER() {
    m_axi_kvdram_V_ARUSER = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARUSER.read();
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        m_axi_kvdram_V_ARVALID = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARVALID.read();
    } else {
        m_axi_kvdram_V_ARVALID = ap_const_logic_0;
    }
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_AWADDR() {
    m_axi_kvdram_V_AWADDR = ap_const_lv32_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_AWBURST() {
    m_axi_kvdram_V_AWBURST = ap_const_lv2_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_AWCACHE() {
    m_axi_kvdram_V_AWCACHE = ap_const_lv4_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_AWID() {
    m_axi_kvdram_V_AWID = ap_const_lv1_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_AWLEN() {
    m_axi_kvdram_V_AWLEN = ap_const_lv32_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_AWLOCK() {
    m_axi_kvdram_V_AWLOCK = ap_const_lv2_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_AWPROT() {
    m_axi_kvdram_V_AWPROT = ap_const_lv3_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_AWQOS() {
    m_axi_kvdram_V_AWQOS = ap_const_lv4_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_AWREGION() {
    m_axi_kvdram_V_AWREGION = ap_const_lv4_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_AWSIZE() {
    m_axi_kvdram_V_AWSIZE = ap_const_lv3_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_AWUSER() {
    m_axi_kvdram_V_AWUSER = ap_const_lv1_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_AWVALID() {
    m_axi_kvdram_V_AWVALID = ap_const_logic_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_BREADY() {
    m_axi_kvdram_V_BREADY = ap_const_logic_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        m_axi_kvdram_V_RREADY = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_RREADY.read();
    } else {
        m_axi_kvdram_V_RREADY = ap_const_logic_0;
    }
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_WDATA() {
    m_axi_kvdram_V_WDATA = ap_const_lv512_lc_1;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_WID() {
    m_axi_kvdram_V_WID = ap_const_lv1_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_WLAST() {
    m_axi_kvdram_V_WLAST = ap_const_logic_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_WSTRB() {
    m_axi_kvdram_V_WSTRB = ap_const_lv64_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_WUSER() {
    m_axi_kvdram_V_WUSER = ap_const_lv1_0;
}

void readkeyvalues0_3::thread_m_axi_kvdram_V_WVALID() {
    m_axi_kvdram_V_WVALID = ap_const_logic_0;
}

void readkeyvalues0_3::thread_select_ln1233_1_fu_276_p3() {
    select_ln1233_1_fu_276_p3 = (!icmp_ln1233_1_fu_253_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln1233_1_fu_253_p2.read()[0].to_bool())? ap_const_lv32_0: select_ln1234_1_fu_268_p3.read());
}

void readkeyvalues0_3::thread_select_ln1233_2_fu_346_p3() {
    select_ln1233_2_fu_346_p3 = (!icmp_ln1233_2_fu_323_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln1233_2_fu_323_p2.read()[0].to_bool())? ap_const_lv32_0: select_ln1234_2_fu_338_p3.read());
}

void readkeyvalues0_3::thread_select_ln1233_3_fu_426_p3() {
    select_ln1233_3_fu_426_p3 = (!icmp_ln1233_3_fu_403_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln1233_3_fu_403_p2.read()[0].to_bool())? ap_const_lv32_0: select_ln1234_3_fu_418_p3.read());
}

void readkeyvalues0_3::thread_select_ln1233_fu_205_p3() {
    select_ln1233_fu_205_p3 = (!icmp_ln1233_fu_173_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln1233_fu_173_p2.read()[0].to_bool())? ap_const_lv32_0: select_ln1234_fu_197_p3.read());
}

void readkeyvalues0_3::thread_select_ln1234_1_fu_268_p3() {
    select_ln1234_1_fu_268_p3 = (!icmp_ln1234_1_fu_258_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln1234_1_fu_258_p2.read()[0].to_bool())? chunk1_size_fu_263_p2.read(): ap_const_lv32_200);
}

void readkeyvalues0_3::thread_select_ln1234_2_fu_338_p3() {
    select_ln1234_2_fu_338_p3 = (!icmp_ln1234_2_fu_328_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln1234_2_fu_328_p2.read()[0].to_bool())? chunk2_size_fu_333_p2.read(): ap_const_lv32_200);
}

void readkeyvalues0_3::thread_select_ln1234_3_fu_418_p3() {
    select_ln1234_3_fu_418_p3 = (!icmp_ln1234_3_fu_408_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln1234_3_fu_408_p2.read()[0].to_bool())? chunk3_size_fu_413_p2.read(): ap_const_lv32_200);
}

void readkeyvalues0_3::thread_select_ln1234_fu_197_p3() {
    select_ln1234_fu_197_p3 = (!icmp_ln1234_fu_185_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln1234_fu_185_p2.read()[0].to_bool())? chunk0_size_fu_191_p2.read(): ap_const_lv32_200);
}

void readkeyvalues0_3::thread_tmp_36_fu_434_p4() {
    tmp_36_fu_434_p4 = sourcestats_3_key_r.read().range(31, 3);
}

void readkeyvalues0_3::thread_tmp_fu_354_p4() {
    tmp_fu_354_p4 = sourcestats_2_key_r.read().range(31, 3);
}

void readkeyvalues0_3::thread_travstate0_end_kvs_1_fu_169_p1() {
    travstate0_end_kvs_1_fu_169_p1 = esl_zext<32,29>(travstate0_end_kvs_fu_159_p4.read());
}

void readkeyvalues0_3::thread_travstate0_end_kvs_fu_159_p4() {
    travstate0_end_kvs_fu_159_p4 = add_ln1447_fu_153_p2.read().range(31, 3);
}

void readkeyvalues0_3::thread_travstate1_end_kvs_1_fu_249_p1() {
    travstate1_end_kvs_1_fu_249_p1 = esl_zext<32,29>(travstate1_end_kvs_fu_239_p4.read());
}

void readkeyvalues0_3::thread_travstate1_end_kvs_fu_239_p4() {
    travstate1_end_kvs_fu_239_p4 = add_ln1452_fu_233_p2.read().range(31, 3);
}

void readkeyvalues0_3::thread_travstate2_end_kvs_1_fu_319_p1() {
    travstate2_end_kvs_1_fu_319_p1 = esl_zext<32,29>(travstate2_end_kvs_fu_309_p4.read());
}

void readkeyvalues0_3::thread_travstate2_end_kvs_fu_309_p4() {
    travstate2_end_kvs_fu_309_p4 = add_ln1457_fu_303_p2.read().range(31, 3);
}

void readkeyvalues0_3::thread_travstate3_end_kvs_1_fu_399_p1() {
    travstate3_end_kvs_1_fu_399_p1 = esl_zext<32,29>(travstate3_end_kvs_fu_389_p4.read());
}

void readkeyvalues0_3::thread_travstate3_end_kvs_fu_389_p4() {
    travstate3_end_kvs_fu_389_p4 = add_ln1462_fu_383_p2.read().range(31, 3);
}

void readkeyvalues0_3::thread_zext_ln1474_fu_223_p1() {
    zext_ln1474_fu_223_p1 = esl_zext<32,29>(lshr_ln_fu_213_p4.read());
}

void readkeyvalues0_3::thread_zext_ln1475_fu_294_p1() {
    zext_ln1475_fu_294_p1 = esl_zext<32,29>(lshr_ln1_fu_284_p4.read());
}

void readkeyvalues0_3::thread_zext_ln1476_1_fu_364_p1() {
    zext_ln1476_1_fu_364_p1 = esl_zext<30,29>(tmp_fu_354_p4.read());
}

void readkeyvalues0_3::thread_zext_ln1476_fu_374_p1() {
    zext_ln1476_fu_374_p1 = esl_zext<32,30>(add_ln1476_fu_368_p2.read());
}

void readkeyvalues0_3::thread_zext_ln1477_1_fu_444_p1() {
    zext_ln1477_1_fu_444_p1 = esl_zext<30,29>(tmp_36_fu_434_p4.read());
}

void readkeyvalues0_3::thread_zext_ln1477_fu_454_p1() {
    zext_ln1477_fu_454_p1 = esl_zext<32,30>(add_ln1477_fu_448_p2.read());
}

void readkeyvalues0_3::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_readkeyvalues0_166_fu_136_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(grp_readkeyvalues0_166_fu_136_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(grp_readkeyvalues0_166_fu_136_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(grp_readkeyvalues0_166_fu_136_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

}

