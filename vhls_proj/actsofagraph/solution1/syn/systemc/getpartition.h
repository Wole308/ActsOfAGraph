// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _getpartition_HH_
#define _getpartition_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct getpartition : public sc_module {
    // Port declarations 5
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > keyvalue_key;
    sc_in< sc_lv<32> > currentLOP;
    sc_in< sc_lv<32> > upperlimit;
    sc_out< sc_lv<5> > ap_return;


    // Module declarations
    getpartition(sc_module_name name);
    SC_HAS_PROCESS(getpartition);

    ~getpartition();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<32> > shl_ln174_fu_38_p2;
    sc_signal< sc_lv<32> > sub_ln174_1_fu_44_p2;
    sc_signal< sc_lv<32> > sub_ln174_2_fu_50_p2;
    sc_signal< sc_lv<32> > sub_ln174_fu_32_p2;
    sc_signal< sc_lv<32> > add_ln174_fu_56_p2;
    sc_signal< sc_lv<32> > hashedval_fu_62_p2;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_add_ln174_fu_56_p2();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_hashedval_fu_62_p2();
    void thread_shl_ln174_fu_38_p2();
    void thread_sub_ln174_1_fu_44_p2();
    void thread_sub_ln174_2_fu_50_p2();
    void thread_sub_ln174_fu_32_p2();
};

}

using namespace ap_rtl;

#endif
