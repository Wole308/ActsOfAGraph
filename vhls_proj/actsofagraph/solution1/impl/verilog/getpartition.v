// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module getpartition (
        ap_ready,
        keyvalue_key,
        currentLOP,
        upperlimit,
        ap_return
);


output   ap_ready;
input  [31:0] keyvalue_key;
input  [31:0] currentLOP;
input  [31:0] upperlimit;
output  [4:0] ap_return;

wire   [31:0] shl_ln174_fu_38_p2;
wire   [31:0] sub_ln174_1_fu_44_p2;
wire   [31:0] sub_ln174_2_fu_50_p2;
wire   [31:0] sub_ln174_fu_32_p2;
wire   [31:0] add_ln174_fu_56_p2;
wire   [31:0] hashedval_fu_62_p2;

assign add_ln174_fu_56_p2 = (32'd26 + sub_ln174_2_fu_50_p2);

assign ap_ready = 1'b1;

assign ap_return = hashedval_fu_62_p2[4:0];

assign hashedval_fu_62_p2 = sub_ln174_fu_32_p2 >> add_ln174_fu_56_p2;

assign shl_ln174_fu_38_p2 = currentLOP << 32'd2;

assign sub_ln174_1_fu_44_p2 = (32'd0 - shl_ln174_fu_38_p2);

assign sub_ln174_2_fu_50_p2 = (sub_ln174_1_fu_44_p2 - currentLOP);

assign sub_ln174_fu_32_p2 = (keyvalue_key - upperlimit);

endmodule //getpartition
