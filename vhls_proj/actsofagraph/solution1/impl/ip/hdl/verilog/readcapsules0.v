// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module readcapsules0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_kvdram_V_AWVALID,
        m_axi_kvdram_V_AWREADY,
        m_axi_kvdram_V_AWADDR,
        m_axi_kvdram_V_AWID,
        m_axi_kvdram_V_AWLEN,
        m_axi_kvdram_V_AWSIZE,
        m_axi_kvdram_V_AWBURST,
        m_axi_kvdram_V_AWLOCK,
        m_axi_kvdram_V_AWCACHE,
        m_axi_kvdram_V_AWPROT,
        m_axi_kvdram_V_AWQOS,
        m_axi_kvdram_V_AWREGION,
        m_axi_kvdram_V_AWUSER,
        m_axi_kvdram_V_WVALID,
        m_axi_kvdram_V_WREADY,
        m_axi_kvdram_V_WDATA,
        m_axi_kvdram_V_WSTRB,
        m_axi_kvdram_V_WLAST,
        m_axi_kvdram_V_WID,
        m_axi_kvdram_V_WUSER,
        m_axi_kvdram_V_ARVALID,
        m_axi_kvdram_V_ARREADY,
        m_axi_kvdram_V_ARADDR,
        m_axi_kvdram_V_ARID,
        m_axi_kvdram_V_ARLEN,
        m_axi_kvdram_V_ARSIZE,
        m_axi_kvdram_V_ARBURST,
        m_axi_kvdram_V_ARLOCK,
        m_axi_kvdram_V_ARCACHE,
        m_axi_kvdram_V_ARPROT,
        m_axi_kvdram_V_ARQOS,
        m_axi_kvdram_V_ARREGION,
        m_axi_kvdram_V_ARUSER,
        m_axi_kvdram_V_RVALID,
        m_axi_kvdram_V_RREADY,
        m_axi_kvdram_V_RDATA,
        m_axi_kvdram_V_RLAST,
        m_axi_kvdram_V_RID,
        m_axi_kvdram_V_RUSER,
        m_axi_kvdram_V_RRESP,
        m_axi_kvdram_V_BVALID,
        m_axi_kvdram_V_BREADY,
        m_axi_kvdram_V_BRESP,
        m_axi_kvdram_V_BID,
        m_axi_kvdram_V_BUSER,
        kvdram_V_offset,
        BIGcapsule0_V_address0,
        BIGcapsule0_V_ce0,
        BIGcapsule0_V_we0,
        BIGcapsule0_V_d0,
        BIGcapsule0_V_q0,
        BIGcapsule1_V_address0,
        BIGcapsule1_V_ce0,
        BIGcapsule1_V_we0,
        BIGcapsule1_V_d0,
        BIGcapsule1_V_q0,
        BIGcapsule2_V_address0,
        BIGcapsule2_V_ce0,
        BIGcapsule2_V_we0,
        BIGcapsule2_V_d0,
        BIGcapsule2_V_q0,
        BIGcapsule3_V_address0,
        BIGcapsule3_V_ce0,
        BIGcapsule3_V_we0,
        BIGcapsule3_V_d0,
        BIGcapsule3_V_q0,
        capsule0_key_address0,
        capsule0_key_ce0,
        capsule0_key_we0,
        capsule0_key_d0,
        capsule0_value_address0,
        capsule0_value_ce0,
        capsule0_value_we0,
        capsule0_value_d0,
        capsule1_key_address0,
        capsule1_key_ce0,
        capsule1_key_we0,
        capsule1_key_d0,
        capsule1_value_address0,
        capsule1_value_ce0,
        capsule1_value_we0,
        capsule1_value_d0,
        capsule2_key_address0,
        capsule2_key_ce0,
        capsule2_key_we0,
        capsule2_key_d0,
        capsule2_value_address0,
        capsule2_value_ce0,
        capsule2_value_we0,
        capsule2_value_d0,
        capsule3_key_address0,
        capsule3_key_ce0,
        capsule3_key_we0,
        capsule3_key_d0,
        capsule3_value_address0,
        capsule3_value_ce0,
        capsule3_value_we0,
        capsule3_value_d0,
        offset,
        capsulemetadata_globaloffset,
        capsulemetadata_localoffset,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_pp0_stage0 = 10'd256;
parameter    ap_ST_fsm_state11 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_kvdram_V_AWVALID;
input   m_axi_kvdram_V_AWREADY;
output  [31:0] m_axi_kvdram_V_AWADDR;
output  [0:0] m_axi_kvdram_V_AWID;
output  [31:0] m_axi_kvdram_V_AWLEN;
output  [2:0] m_axi_kvdram_V_AWSIZE;
output  [1:0] m_axi_kvdram_V_AWBURST;
output  [1:0] m_axi_kvdram_V_AWLOCK;
output  [3:0] m_axi_kvdram_V_AWCACHE;
output  [2:0] m_axi_kvdram_V_AWPROT;
output  [3:0] m_axi_kvdram_V_AWQOS;
output  [3:0] m_axi_kvdram_V_AWREGION;
output  [0:0] m_axi_kvdram_V_AWUSER;
output   m_axi_kvdram_V_WVALID;
input   m_axi_kvdram_V_WREADY;
output  [511:0] m_axi_kvdram_V_WDATA;
output  [63:0] m_axi_kvdram_V_WSTRB;
output   m_axi_kvdram_V_WLAST;
output  [0:0] m_axi_kvdram_V_WID;
output  [0:0] m_axi_kvdram_V_WUSER;
output   m_axi_kvdram_V_ARVALID;
input   m_axi_kvdram_V_ARREADY;
output  [31:0] m_axi_kvdram_V_ARADDR;
output  [0:0] m_axi_kvdram_V_ARID;
output  [31:0] m_axi_kvdram_V_ARLEN;
output  [2:0] m_axi_kvdram_V_ARSIZE;
output  [1:0] m_axi_kvdram_V_ARBURST;
output  [1:0] m_axi_kvdram_V_ARLOCK;
output  [3:0] m_axi_kvdram_V_ARCACHE;
output  [2:0] m_axi_kvdram_V_ARPROT;
output  [3:0] m_axi_kvdram_V_ARQOS;
output  [3:0] m_axi_kvdram_V_ARREGION;
output  [0:0] m_axi_kvdram_V_ARUSER;
input   m_axi_kvdram_V_RVALID;
output   m_axi_kvdram_V_RREADY;
input  [511:0] m_axi_kvdram_V_RDATA;
input   m_axi_kvdram_V_RLAST;
input  [0:0] m_axi_kvdram_V_RID;
input  [0:0] m_axi_kvdram_V_RUSER;
input  [1:0] m_axi_kvdram_V_RRESP;
input   m_axi_kvdram_V_BVALID;
output   m_axi_kvdram_V_BREADY;
input  [1:0] m_axi_kvdram_V_BRESP;
input  [0:0] m_axi_kvdram_V_BID;
input  [0:0] m_axi_kvdram_V_BUSER;
input  [25:0] kvdram_V_offset;
output  [8:0] BIGcapsule0_V_address0;
output   BIGcapsule0_V_ce0;
output  [63:0] BIGcapsule0_V_we0;
output  [511:0] BIGcapsule0_V_d0;
input  [511:0] BIGcapsule0_V_q0;
output  [8:0] BIGcapsule1_V_address0;
output   BIGcapsule1_V_ce0;
output  [63:0] BIGcapsule1_V_we0;
output  [511:0] BIGcapsule1_V_d0;
input  [511:0] BIGcapsule1_V_q0;
output  [8:0] BIGcapsule2_V_address0;
output   BIGcapsule2_V_ce0;
output  [63:0] BIGcapsule2_V_we0;
output  [511:0] BIGcapsule2_V_d0;
input  [511:0] BIGcapsule2_V_q0;
output  [8:0] BIGcapsule3_V_address0;
output   BIGcapsule3_V_ce0;
output  [63:0] BIGcapsule3_V_we0;
output  [511:0] BIGcapsule3_V_d0;
input  [511:0] BIGcapsule3_V_q0;
output  [4:0] capsule0_key_address0;
output   capsule0_key_ce0;
output   capsule0_key_we0;
output  [31:0] capsule0_key_d0;
output  [4:0] capsule0_value_address0;
output   capsule0_value_ce0;
output   capsule0_value_we0;
output  [31:0] capsule0_value_d0;
output  [4:0] capsule1_key_address0;
output   capsule1_key_ce0;
output   capsule1_key_we0;
output  [31:0] capsule1_key_d0;
output  [4:0] capsule1_value_address0;
output   capsule1_value_ce0;
output   capsule1_value_we0;
output  [31:0] capsule1_value_d0;
output  [4:0] capsule2_key_address0;
output   capsule2_key_ce0;
output   capsule2_key_we0;
output  [31:0] capsule2_key_d0;
output  [4:0] capsule2_value_address0;
output   capsule2_value_ce0;
output   capsule2_value_we0;
output  [31:0] capsule2_value_d0;
output  [4:0] capsule3_key_address0;
output   capsule3_key_ce0;
output   capsule3_key_we0;
output  [31:0] capsule3_key_d0;
output  [4:0] capsule3_value_address0;
output   capsule3_value_ce0;
output   capsule3_value_we0;
output  [31:0] capsule3_value_d0;
input  [23:0] offset;
input  [31:0] capsulemetadata_globaloffset;
input  [31:0] capsulemetadata_localoffset;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_kvdram_V_ARVALID;
reg m_axi_kvdram_V_RREADY;
reg[8:0] BIGcapsule0_V_address0;
reg BIGcapsule0_V_ce0;
reg[63:0] BIGcapsule0_V_we0;
reg[8:0] BIGcapsule1_V_address0;
reg BIGcapsule1_V_ce0;
reg[63:0] BIGcapsule1_V_we0;
reg[8:0] BIGcapsule2_V_address0;
reg BIGcapsule2_V_ce0;
reg[63:0] BIGcapsule2_V_we0;
reg[8:0] BIGcapsule3_V_address0;
reg BIGcapsule3_V_ce0;
reg[63:0] BIGcapsule3_V_we0;
reg capsule0_key_ce0;
reg capsule0_key_we0;
reg capsule0_value_ce0;
reg capsule0_value_we0;
reg capsule1_key_ce0;
reg capsule1_key_we0;
reg capsule1_value_ce0;
reg capsule1_value_we0;
reg capsule2_key_ce0;
reg capsule2_key_we0;
reg capsule2_value_ce0;
reg capsule2_value_we0;
reg capsule3_key_ce0;
reg capsule3_key_we0;
reg capsule3_value_ce0;
reg capsule3_value_we0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] i_0_reg_406;
wire   [11:0] loffset_fu_432_p1;
reg   [11:0] loffset_reg_1965;
wire   [12:0] zext_ln1486_fu_436_p1;
reg   [12:0] zext_ln1486_reg_1970;
wire   [0:0] icmp_ln1488_fu_440_p2;
reg   [0:0] icmp_ln1488_reg_1975;
wire   [31:0] loadoffset0_kvs_fu_446_p2;
reg   [31:0] loadoffset0_kvs_reg_1979;
wire   [31:0] loadoffset1_kvs_fu_458_p2;
reg   [31:0] loadoffset1_kvs_reg_1984;
wire    ap_CS_fsm_state3;
wire   [31:0] loadoffset2_kvs_fu_469_p2;
reg   [31:0] loadoffset2_kvs_reg_1989;
wire    ap_CS_fsm_state5;
wire   [31:0] loadoffset3_kvs_fu_480_p2;
reg   [31:0] loadoffset3_kvs_reg_1994;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln1524_fu_492_p2;
reg   [0:0] icmp_ln1524_reg_2047;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state9_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [5:0] i_fu_498_p2;
reg   [5:0] i_reg_2051;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] idx_fu_538_p1;
reg   [2:0] idx_reg_2056;
wire    ap_CS_fsm_state8;
wire    grp_readkeyvalues0_fu_418_ap_ready;
wire    grp_readkeyvalues0_fu_418_ap_done;
reg    ap_block_state8_on_subcall_done;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter1;
wire    grp_readkeyvalues0_fu_418_ap_start;
wire    grp_readkeyvalues0_fu_418_ap_idle;
wire    grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWVALID;
wire   [31:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWADDR;
wire   [0:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWID;
wire   [31:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWLEN;
wire   [2:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWSIZE;
wire   [1:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWBURST;
wire   [1:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWLOCK;
wire   [3:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWCACHE;
wire   [2:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWPROT;
wire   [3:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWQOS;
wire   [3:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWREGION;
wire   [0:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWUSER;
wire    grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WVALID;
wire   [511:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WDATA;
wire   [63:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WSTRB;
wire    grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WLAST;
wire   [0:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WID;
wire   [0:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WUSER;
wire    grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARVALID;
wire   [31:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARADDR;
wire   [0:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARID;
wire   [31:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARLEN;
wire   [2:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARSIZE;
wire   [1:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARBURST;
wire   [1:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARLOCK;
wire   [3:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARCACHE;
wire   [2:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARPROT;
wire   [3:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARQOS;
wire   [3:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARREGION;
wire   [0:0] grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARUSER;
wire    grp_readkeyvalues0_fu_418_m_axi_kvdram_V_RREADY;
wire    grp_readkeyvalues0_fu_418_m_axi_kvdram_V_BREADY;
wire   [8:0] grp_readkeyvalues0_fu_418_buffer_V_address0;
wire    grp_readkeyvalues0_fu_418_buffer_V_ce0;
wire   [63:0] grp_readkeyvalues0_fu_418_buffer_V_we0;
wire   [511:0] grp_readkeyvalues0_fu_418_buffer_V_d0;
reg   [31:0] grp_readkeyvalues0_fu_418_offset_kvs;
wire   [31:0] add_ln1521_fu_486_p2;
reg   [31:0] capsulemetadata_loca_reg_396;
reg   [5:0] ap_phi_mux_i_0_phi_fu_410_p4;
wire    ap_block_pp0_stage0;
reg    grp_readkeyvalues0_fu_418_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln327_fu_552_p1;
wire   [63:0] zext_ln1526_fu_584_p1;
reg   [31:0] keyvalue_key_fu_184;
wire   [31:0] keyvalue_key_72_fu_1031_p3;
reg   [31:0] keyvalue_value_64_fu_188;
wire   [31:0] keyvalue_value_75_fu_966_p3;
reg   [31:0] keyvalue_key_8_fu_192;
wire   [31:0] keyvalue_key_87_fu_1315_p3;
reg   [31:0] keyvalue_value_65_fu_196;
wire   [31:0] keyvalue_value_89_fu_1250_p3;
reg   [31:0] keyvalue_key_32_fu_200;
wire   [31:0] keyvalue_key_103_fu_1599_p3;
reg   [31:0] keyvalue_value_66_fu_204;
wire   [31:0] keyvalue_value_105_fu_1534_p3;
reg   [31:0] keyvalue_key_48_fu_208;
wire   [31:0] keyvalue_key_119_fu_1883_p3;
reg   [31:0] keyvalue_value_67_fu_212;
wire   [31:0] keyvalue_value_121_fu_1818_p3;
wire   [31:0] add_ln1497_fu_453_p2;
wire   [31:0] add_ln1505_fu_464_p2;
wire   [31:0] add_ln1513_fu_475_p2;
wire   [12:0] zext_ln1524_fu_504_p1;
wire   [11:0] zext_ln1526_1_fu_508_p1;
wire   [12:0] add_ln1526_fu_512_p2;
wire   [0:0] tmp_37_fu_522_p3;
wire   [11:0] add_ln1526_1_fu_517_p2;
wire   [11:0] select_ln316_fu_530_p3;
wire   [8:0] idy_fu_542_p4;
wire   [0:0] icmp_ln326_fu_596_p2;
wire   [31:0] keyvalue_value_fu_605_p4;
wire   [0:0] icmp_ln330_fu_615_p2;
wire   [0:0] xor_ln326_fu_798_p2;
wire   [0:0] and_ln330_fu_804_p2;
wire   [31:0] keyvalue_value_1_fu_630_p4;
wire   [31:0] keyvalue_value_68_fu_790_p3;
wire   [0:0] or_ln330_fu_818_p2;
wire   [0:0] icmp_ln334_fu_640_p2;
wire   [0:0] xor_ln330_fu_824_p2;
wire   [0:0] and_ln334_fu_830_p2;
wire   [31:0] keyvalue_value_2_fu_655_p4;
wire   [31:0] keyvalue_value_69_fu_810_p3;
wire   [0:0] or_ln334_fu_844_p2;
wire   [0:0] icmp_ln338_fu_665_p2;
wire   [0:0] xor_ln334_fu_850_p2;
wire   [0:0] and_ln338_fu_856_p2;
wire   [31:0] keyvalue_value_3_fu_680_p4;
wire   [31:0] keyvalue_value_70_fu_836_p3;
wire   [0:0] or_ln338_fu_870_p2;
wire   [0:0] icmp_ln342_fu_690_p2;
wire   [0:0] xor_ln338_fu_876_p2;
wire   [0:0] and_ln342_fu_882_p2;
wire   [31:0] keyvalue_value_4_fu_705_p4;
wire   [31:0] keyvalue_value_71_fu_862_p3;
wire   [0:0] or_ln342_fu_896_p2;
wire   [0:0] icmp_ln346_fu_715_p2;
wire   [0:0] xor_ln342_fu_902_p2;
wire   [0:0] and_ln346_fu_908_p2;
wire   [31:0] keyvalue_value_5_fu_730_p4;
wire   [31:0] keyvalue_value_72_fu_888_p3;
wire   [0:0] or_ln346_fu_922_p2;
wire   [0:0] icmp_ln350_fu_740_p2;
wire   [0:0] xor_ln346_fu_928_p2;
wire   [0:0] and_ln350_fu_934_p2;
wire   [31:0] keyvalue_value_6_fu_755_p4;
wire   [31:0] keyvalue_value_73_fu_914_p3;
wire   [0:0] or_ln350_fu_948_p2;
wire   [0:0] icmp_ln354_fu_765_p2;
wire   [0:0] xor_ln350_fu_954_p2;
wire   [0:0] and_ln354_fu_960_p2;
wire   [31:0] keyvalue_value_7_fu_780_p4;
wire   [31:0] keyvalue_value_74_fu_940_p3;
wire   [31:0] keyvalue_key_64_fu_601_p1;
wire   [31:0] keyvalue_key_1_fu_620_p4;
wire   [31:0] keyvalue_key_65_fu_975_p3;
wire   [31:0] keyvalue_key_2_fu_645_p4;
wire   [31:0] keyvalue_key_66_fu_983_p3;
wire   [31:0] keyvalue_key_3_fu_670_p4;
wire   [31:0] keyvalue_key_67_fu_991_p3;
wire   [31:0] keyvalue_key_4_fu_695_p4;
wire   [31:0] keyvalue_key_68_fu_999_p3;
wire   [31:0] keyvalue_key_5_fu_720_p4;
wire   [31:0] keyvalue_key_69_fu_1007_p3;
wire   [31:0] keyvalue_key_6_fu_745_p4;
wire   [31:0] keyvalue_key_70_fu_1015_p3;
wire   [31:0] keyvalue_key_7_fu_770_p4;
wire   [31:0] keyvalue_key_71_fu_1023_p3;
wire   [31:0] keyvalue_value_8_fu_1044_p4;
wire   [31:0] keyvalue_value_9_fu_1064_p4;
wire   [31:0] keyvalue_value_82_fu_1194_p3;
wire   [31:0] keyvalue_value_76_fu_1084_p4;
wire   [31:0] keyvalue_value_83_fu_1202_p3;
wire   [31:0] keyvalue_value_77_fu_1104_p4;
wire   [31:0] keyvalue_value_84_fu_1210_p3;
wire   [31:0] keyvalue_value_78_fu_1124_p4;
wire   [31:0] keyvalue_value_85_fu_1218_p3;
wire   [31:0] keyvalue_value_79_fu_1144_p4;
wire   [31:0] keyvalue_value_86_fu_1226_p3;
wire   [31:0] keyvalue_value_80_fu_1164_p4;
wire   [31:0] keyvalue_value_87_fu_1234_p3;
wire   [31:0] keyvalue_value_81_fu_1184_p4;
wire   [31:0] keyvalue_value_88_fu_1242_p3;
wire   [31:0] keyvalue_key_73_fu_1040_p1;
wire   [31:0] keyvalue_key_9_fu_1054_p4;
wire   [31:0] keyvalue_key_80_fu_1259_p3;
wire   [31:0] keyvalue_key_74_fu_1074_p4;
wire   [31:0] keyvalue_key_81_fu_1267_p3;
wire   [31:0] keyvalue_key_75_fu_1094_p4;
wire   [31:0] keyvalue_key_82_fu_1275_p3;
wire   [31:0] keyvalue_key_76_fu_1114_p4;
wire   [31:0] keyvalue_key_83_fu_1283_p3;
wire   [31:0] keyvalue_key_77_fu_1134_p4;
wire   [31:0] keyvalue_key_84_fu_1291_p3;
wire   [31:0] keyvalue_key_78_fu_1154_p4;
wire   [31:0] keyvalue_key_85_fu_1299_p3;
wire   [31:0] keyvalue_key_79_fu_1174_p4;
wire   [31:0] keyvalue_key_86_fu_1307_p3;
wire   [31:0] keyvalue_value_90_fu_1328_p4;
wire   [31:0] keyvalue_value_91_fu_1348_p4;
wire   [31:0] keyvalue_value_98_fu_1478_p3;
wire   [31:0] keyvalue_value_92_fu_1368_p4;
wire   [31:0] keyvalue_value_99_fu_1486_p3;
wire   [31:0] keyvalue_value_93_fu_1388_p4;
wire   [31:0] keyvalue_value_100_fu_1494_p3;
wire   [31:0] keyvalue_value_94_fu_1408_p4;
wire   [31:0] keyvalue_value_101_fu_1502_p3;
wire   [31:0] keyvalue_value_95_fu_1428_p4;
wire   [31:0] keyvalue_value_102_fu_1510_p3;
wire   [31:0] keyvalue_value_96_fu_1448_p4;
wire   [31:0] keyvalue_value_103_fu_1518_p3;
wire   [31:0] keyvalue_value_97_fu_1468_p4;
wire   [31:0] keyvalue_value_104_fu_1526_p3;
wire   [31:0] keyvalue_key_88_fu_1324_p1;
wire   [31:0] keyvalue_key_89_fu_1338_p4;
wire   [31:0] keyvalue_key_96_fu_1543_p3;
wire   [31:0] keyvalue_key_90_fu_1358_p4;
wire   [31:0] keyvalue_key_97_fu_1551_p3;
wire   [31:0] keyvalue_key_91_fu_1378_p4;
wire   [31:0] keyvalue_key_98_fu_1559_p3;
wire   [31:0] keyvalue_key_92_fu_1398_p4;
wire   [31:0] keyvalue_key_99_fu_1567_p3;
wire   [31:0] keyvalue_key_93_fu_1418_p4;
wire   [31:0] keyvalue_key_100_fu_1575_p3;
wire   [31:0] keyvalue_key_94_fu_1438_p4;
wire   [31:0] keyvalue_key_101_fu_1583_p3;
wire   [31:0] keyvalue_key_95_fu_1458_p4;
wire   [31:0] keyvalue_key_102_fu_1591_p3;
wire   [31:0] keyvalue_value_106_fu_1612_p4;
wire   [31:0] keyvalue_value_107_fu_1632_p4;
wire   [31:0] keyvalue_value_114_fu_1762_p3;
wire   [31:0] keyvalue_value_108_fu_1652_p4;
wire   [31:0] keyvalue_value_115_fu_1770_p3;
wire   [31:0] keyvalue_value_109_fu_1672_p4;
wire   [31:0] keyvalue_value_116_fu_1778_p3;
wire   [31:0] keyvalue_value_110_fu_1692_p4;
wire   [31:0] keyvalue_value_117_fu_1786_p3;
wire   [31:0] keyvalue_value_111_fu_1712_p4;
wire   [31:0] keyvalue_value_118_fu_1794_p3;
wire   [31:0] keyvalue_value_112_fu_1732_p4;
wire   [31:0] keyvalue_value_119_fu_1802_p3;
wire   [31:0] keyvalue_value_113_fu_1752_p4;
wire   [31:0] keyvalue_value_120_fu_1810_p3;
wire   [31:0] keyvalue_key_104_fu_1608_p1;
wire   [31:0] keyvalue_key_105_fu_1622_p4;
wire   [31:0] keyvalue_key_112_fu_1827_p3;
wire   [31:0] keyvalue_key_106_fu_1642_p4;
wire   [31:0] keyvalue_key_113_fu_1835_p3;
wire   [31:0] keyvalue_key_107_fu_1662_p4;
wire   [31:0] keyvalue_key_114_fu_1843_p3;
wire   [31:0] keyvalue_key_108_fu_1682_p4;
wire   [31:0] keyvalue_key_115_fu_1851_p3;
wire   [31:0] keyvalue_key_109_fu_1702_p4;
wire   [31:0] keyvalue_key_116_fu_1859_p3;
wire   [31:0] keyvalue_key_110_fu_1722_p4;
wire   [31:0] keyvalue_key_117_fu_1867_p3;
wire   [31:0] keyvalue_key_111_fu_1742_p4;
wire   [31:0] keyvalue_key_118_fu_1875_p3;
wire    ap_CS_fsm_state11;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_readkeyvalues0_fu_418_ap_start_reg = 1'b0;
end

readkeyvalues0 grp_readkeyvalues0_fu_418(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_readkeyvalues0_fu_418_ap_start),
    .ap_done(grp_readkeyvalues0_fu_418_ap_done),
    .ap_idle(grp_readkeyvalues0_fu_418_ap_idle),
    .ap_ready(grp_readkeyvalues0_fu_418_ap_ready),
    .m_axi_kvdram_V_AWVALID(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWVALID),
    .m_axi_kvdram_V_AWREADY(1'b0),
    .m_axi_kvdram_V_AWADDR(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWADDR),
    .m_axi_kvdram_V_AWID(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWID),
    .m_axi_kvdram_V_AWLEN(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWLEN),
    .m_axi_kvdram_V_AWSIZE(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWSIZE),
    .m_axi_kvdram_V_AWBURST(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWBURST),
    .m_axi_kvdram_V_AWLOCK(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWLOCK),
    .m_axi_kvdram_V_AWCACHE(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWCACHE),
    .m_axi_kvdram_V_AWPROT(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWPROT),
    .m_axi_kvdram_V_AWQOS(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWQOS),
    .m_axi_kvdram_V_AWREGION(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWREGION),
    .m_axi_kvdram_V_AWUSER(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_AWUSER),
    .m_axi_kvdram_V_WVALID(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WVALID),
    .m_axi_kvdram_V_WREADY(1'b0),
    .m_axi_kvdram_V_WDATA(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WDATA),
    .m_axi_kvdram_V_WSTRB(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WSTRB),
    .m_axi_kvdram_V_WLAST(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WLAST),
    .m_axi_kvdram_V_WID(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WID),
    .m_axi_kvdram_V_WUSER(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_WUSER),
    .m_axi_kvdram_V_ARVALID(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARVALID),
    .m_axi_kvdram_V_ARREADY(m_axi_kvdram_V_ARREADY),
    .m_axi_kvdram_V_ARADDR(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARADDR),
    .m_axi_kvdram_V_ARID(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARID),
    .m_axi_kvdram_V_ARLEN(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARLEN),
    .m_axi_kvdram_V_ARSIZE(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARSIZE),
    .m_axi_kvdram_V_ARBURST(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARBURST),
    .m_axi_kvdram_V_ARLOCK(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARLOCK),
    .m_axi_kvdram_V_ARCACHE(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARCACHE),
    .m_axi_kvdram_V_ARPROT(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARPROT),
    .m_axi_kvdram_V_ARQOS(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARQOS),
    .m_axi_kvdram_V_ARREGION(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARREGION),
    .m_axi_kvdram_V_ARUSER(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARUSER),
    .m_axi_kvdram_V_RVALID(m_axi_kvdram_V_RVALID),
    .m_axi_kvdram_V_RREADY(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_RREADY),
    .m_axi_kvdram_V_RDATA(m_axi_kvdram_V_RDATA),
    .m_axi_kvdram_V_RLAST(m_axi_kvdram_V_RLAST),
    .m_axi_kvdram_V_RID(m_axi_kvdram_V_RID),
    .m_axi_kvdram_V_RUSER(m_axi_kvdram_V_RUSER),
    .m_axi_kvdram_V_RRESP(m_axi_kvdram_V_RRESP),
    .m_axi_kvdram_V_BVALID(1'b0),
    .m_axi_kvdram_V_BREADY(grp_readkeyvalues0_fu_418_m_axi_kvdram_V_BREADY),
    .m_axi_kvdram_V_BRESP(2'd0),
    .m_axi_kvdram_V_BID(1'd0),
    .m_axi_kvdram_V_BUSER(1'd0),
    .kvdram_V_offset(kvdram_V_offset),
    .buffer_V_address0(grp_readkeyvalues0_fu_418_buffer_V_address0),
    .buffer_V_ce0(grp_readkeyvalues0_fu_418_buffer_V_ce0),
    .buffer_V_we0(grp_readkeyvalues0_fu_418_buffer_V_we0),
    .buffer_V_d0(grp_readkeyvalues0_fu_418_buffer_V_d0),
    .offset_kvs(grp_readkeyvalues0_fu_418_offset_kvs)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_readkeyvalues0_fu_418_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (icmp_ln1488_fu_440_p2 == 1'd1) & (ap_start == 1'b1)))) begin
            grp_readkeyvalues0_fu_418_ap_start_reg <= 1'b1;
        end else if ((grp_readkeyvalues0_fu_418_ap_ready == 1'b1)) begin
            grp_readkeyvalues0_fu_418_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1488_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        capsulemetadata_loca_reg_396 <= capsulemetadata_localoffset;
    end else if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8) & (icmp_ln1488_reg_1975 == 1'd1))) begin
        capsulemetadata_loca_reg_396 <= add_ln1521_fu_486_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1524_reg_2047 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_406 <= i_reg_2051;
    end else if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
        i_0_reg_406 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_2051 <= i_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        icmp_ln1488_reg_1975 <= icmp_ln1488_fu_440_p2;
        loffset_reg_1965 <= loffset_fu_432_p1;
        zext_ln1486_reg_1970[11 : 0] <= zext_ln1486_fu_436_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1524_reg_2047 <= icmp_ln1524_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1524_fu_492_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        idx_reg_2056 <= idx_fu_538_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1524_reg_2047 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        keyvalue_key_32_fu_200 <= keyvalue_key_103_fu_1599_p3;
        keyvalue_key_48_fu_208 <= keyvalue_key_119_fu_1883_p3;
        keyvalue_key_8_fu_192 <= keyvalue_key_87_fu_1315_p3;
        keyvalue_key_fu_184 <= keyvalue_key_72_fu_1031_p3;
        keyvalue_value_64_fu_188 <= keyvalue_value_75_fu_966_p3;
        keyvalue_value_65_fu_196 <= keyvalue_value_89_fu_1250_p3;
        keyvalue_value_66_fu_204 <= keyvalue_value_105_fu_1534_p3;
        keyvalue_value_67_fu_212 <= keyvalue_value_121_fu_1818_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln1488_fu_440_p2 == 1'd1) & (ap_start == 1'b1))) begin
        loadoffset0_kvs_reg_1979 <= loadoffset0_kvs_fu_446_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        loadoffset1_kvs_reg_1984 <= loadoffset1_kvs_fu_458_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        loadoffset2_kvs_reg_1989 <= loadoffset2_kvs_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        loadoffset3_kvs_reg_1994 <= loadoffset3_kvs_fu_480_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        BIGcapsule0_V_address0 = zext_ln327_fu_552_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        BIGcapsule0_V_address0 = grp_readkeyvalues0_fu_418_buffer_V_address0;
    end else begin
        BIGcapsule0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        BIGcapsule0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        BIGcapsule0_V_ce0 = grp_readkeyvalues0_fu_418_buffer_V_ce0;
    end else begin
        BIGcapsule0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        BIGcapsule0_V_we0 = grp_readkeyvalues0_fu_418_buffer_V_we0;
    end else begin
        BIGcapsule0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        BIGcapsule1_V_address0 = zext_ln327_fu_552_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        BIGcapsule1_V_address0 = grp_readkeyvalues0_fu_418_buffer_V_address0;
    end else begin
        BIGcapsule1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        BIGcapsule1_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        BIGcapsule1_V_ce0 = grp_readkeyvalues0_fu_418_buffer_V_ce0;
    end else begin
        BIGcapsule1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        BIGcapsule1_V_we0 = grp_readkeyvalues0_fu_418_buffer_V_we0;
    end else begin
        BIGcapsule1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        BIGcapsule2_V_address0 = zext_ln327_fu_552_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        BIGcapsule2_V_address0 = grp_readkeyvalues0_fu_418_buffer_V_address0;
    end else begin
        BIGcapsule2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        BIGcapsule2_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        BIGcapsule2_V_ce0 = grp_readkeyvalues0_fu_418_buffer_V_ce0;
    end else begin
        BIGcapsule2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        BIGcapsule2_V_we0 = grp_readkeyvalues0_fu_418_buffer_V_we0;
    end else begin
        BIGcapsule2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        BIGcapsule3_V_address0 = zext_ln327_fu_552_p1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln1488_reg_1975 == 1'd1))) begin
        BIGcapsule3_V_address0 = grp_readkeyvalues0_fu_418_buffer_V_address0;
    end else begin
        BIGcapsule3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        BIGcapsule3_V_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln1488_reg_1975 == 1'd1))) begin
        BIGcapsule3_V_ce0 = grp_readkeyvalues0_fu_418_buffer_V_ce0;
    end else begin
        BIGcapsule3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln1488_reg_1975 == 1'd1))) begin
        BIGcapsule3_V_we0 = grp_readkeyvalues0_fu_418_buffer_V_we0;
    end else begin
        BIGcapsule3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1524_fu_492_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1524_reg_2047 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_0_phi_fu_410_p4 = i_reg_2051;
    end else begin
        ap_phi_mux_i_0_phi_fu_410_p4 = i_0_reg_406;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        capsule0_key_ce0 = 1'b1;
    end else begin
        capsule0_key_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1524_reg_2047 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        capsule0_key_we0 = 1'b1;
    end else begin
        capsule0_key_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        capsule0_value_ce0 = 1'b1;
    end else begin
        capsule0_value_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1524_reg_2047 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        capsule0_value_we0 = 1'b1;
    end else begin
        capsule0_value_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        capsule1_key_ce0 = 1'b1;
    end else begin
        capsule1_key_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1524_reg_2047 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        capsule1_key_we0 = 1'b1;
    end else begin
        capsule1_key_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        capsule1_value_ce0 = 1'b1;
    end else begin
        capsule1_value_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1524_reg_2047 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        capsule1_value_we0 = 1'b1;
    end else begin
        capsule1_value_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        capsule2_key_ce0 = 1'b1;
    end else begin
        capsule2_key_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1524_reg_2047 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        capsule2_key_we0 = 1'b1;
    end else begin
        capsule2_key_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        capsule2_value_ce0 = 1'b1;
    end else begin
        capsule2_value_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1524_reg_2047 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        capsule2_value_we0 = 1'b1;
    end else begin
        capsule2_value_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        capsule3_key_ce0 = 1'b1;
    end else begin
        capsule3_key_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1524_reg_2047 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        capsule3_key_we0 = 1'b1;
    end else begin
        capsule3_key_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        capsule3_value_ce0 = 1'b1;
    end else begin
        capsule3_value_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1524_reg_2047 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        capsule3_value_we0 = 1'b1;
    end else begin
        capsule3_value_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln1488_reg_1975 == 1'd1))) begin
        grp_readkeyvalues0_fu_418_offset_kvs = loadoffset3_kvs_reg_1994;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_readkeyvalues0_fu_418_offset_kvs = loadoffset2_kvs_reg_1989;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_readkeyvalues0_fu_418_offset_kvs = loadoffset1_kvs_reg_1984;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_readkeyvalues0_fu_418_offset_kvs = loadoffset0_kvs_reg_1979;
    end else begin
        grp_readkeyvalues0_fu_418_offset_kvs = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (icmp_ln1488_fu_440_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln1488_reg_1975 == 1'd1)))) begin
        m_axi_kvdram_V_ARVALID = grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARVALID;
    end else begin
        m_axi_kvdram_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (icmp_ln1488_fu_440_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln1488_reg_1975 == 1'd1)))) begin
        m_axi_kvdram_V_RREADY = grp_readkeyvalues0_fu_418_m_axi_kvdram_V_RREADY;
    end else begin
        m_axi_kvdram_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln1488_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln1488_fu_440_p2 == 1'd1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_readkeyvalues0_fu_418_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_readkeyvalues0_fu_418_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_readkeyvalues0_fu_418_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln1524_fu_492_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln1524_fu_492_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign BIGcapsule0_V_d0 = grp_readkeyvalues0_fu_418_buffer_V_d0;

assign BIGcapsule1_V_d0 = grp_readkeyvalues0_fu_418_buffer_V_d0;

assign BIGcapsule2_V_d0 = grp_readkeyvalues0_fu_418_buffer_V_d0;

assign BIGcapsule3_V_d0 = grp_readkeyvalues0_fu_418_buffer_V_d0;

assign add_ln1497_fu_453_p2 = (capsulemetadata_localoffset + 32'd512);

assign add_ln1505_fu_464_p2 = (capsulemetadata_localoffset + 32'd1024);

assign add_ln1513_fu_475_p2 = (capsulemetadata_localoffset + 32'd1536);

assign add_ln1521_fu_486_p2 = (capsulemetadata_localoffset + 32'd2048);

assign add_ln1526_1_fu_517_p2 = (loffset_reg_1965 + zext_ln1526_1_fu_508_p1);

assign add_ln1526_fu_512_p2 = (zext_ln1524_fu_504_p1 + zext_ln1486_reg_1970);

assign and_ln330_fu_804_p2 = (xor_ln326_fu_798_p2 & icmp_ln330_fu_615_p2);

assign and_ln334_fu_830_p2 = (xor_ln330_fu_824_p2 & icmp_ln334_fu_640_p2);

assign and_ln338_fu_856_p2 = (xor_ln334_fu_850_p2 & icmp_ln338_fu_665_p2);

assign and_ln342_fu_882_p2 = (xor_ln338_fu_876_p2 & icmp_ln342_fu_690_p2);

assign and_ln346_fu_908_p2 = (xor_ln342_fu_902_p2 & icmp_ln346_fu_715_p2);

assign and_ln350_fu_934_p2 = (xor_ln346_fu_928_p2 & icmp_ln350_fu_740_p2);

assign and_ln354_fu_960_p2 = (xor_ln350_fu_954_p2 & icmp_ln354_fu_765_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_on_subcall_done = ((grp_readkeyvalues0_fu_418_ap_done == 1'b0) & (icmp_ln1488_reg_1975 == 1'd1));
end

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = capsulemetadata_globaloffset;

assign ap_return_1 = capsulemetadata_loca_reg_396;

assign capsule0_key_address0 = zext_ln1526_fu_584_p1;

assign capsule0_key_d0 = ((and_ln354_fu_960_p2[0:0] === 1'b1) ? keyvalue_key_7_fu_770_p4 : keyvalue_key_71_fu_1023_p3);

assign capsule0_value_address0 = zext_ln1526_fu_584_p1;

assign capsule0_value_d0 = ((and_ln354_fu_960_p2[0:0] === 1'b1) ? keyvalue_value_7_fu_780_p4 : keyvalue_value_74_fu_940_p3);

assign capsule1_key_address0 = zext_ln1526_fu_584_p1;

assign capsule1_key_d0 = ((and_ln354_fu_960_p2[0:0] === 1'b1) ? keyvalue_key_79_fu_1174_p4 : keyvalue_key_86_fu_1307_p3);

assign capsule1_value_address0 = zext_ln1526_fu_584_p1;

assign capsule1_value_d0 = ((and_ln354_fu_960_p2[0:0] === 1'b1) ? keyvalue_value_81_fu_1184_p4 : keyvalue_value_88_fu_1242_p3);

assign capsule2_key_address0 = zext_ln1526_fu_584_p1;

assign capsule2_key_d0 = ((and_ln354_fu_960_p2[0:0] === 1'b1) ? keyvalue_key_95_fu_1458_p4 : keyvalue_key_102_fu_1591_p3);

assign capsule2_value_address0 = zext_ln1526_fu_584_p1;

assign capsule2_value_d0 = ((and_ln354_fu_960_p2[0:0] === 1'b1) ? keyvalue_value_97_fu_1468_p4 : keyvalue_value_104_fu_1526_p3);

assign capsule3_key_address0 = zext_ln1526_fu_584_p1;

assign capsule3_key_d0 = ((and_ln354_fu_960_p2[0:0] === 1'b1) ? keyvalue_key_111_fu_1742_p4 : keyvalue_key_118_fu_1875_p3);

assign capsule3_value_address0 = zext_ln1526_fu_584_p1;

assign capsule3_value_d0 = ((and_ln354_fu_960_p2[0:0] === 1'b1) ? keyvalue_value_113_fu_1752_p4 : keyvalue_value_120_fu_1810_p3);

assign grp_readkeyvalues0_fu_418_ap_start = grp_readkeyvalues0_fu_418_ap_start_reg;

assign i_fu_498_p2 = (ap_phi_mux_i_0_phi_fu_410_p4 + 6'd1);

assign icmp_ln1488_fu_440_p2 = ((loffset_fu_432_p1 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln1524_fu_492_p2 = ((ap_phi_mux_i_0_phi_fu_410_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln326_fu_596_p2 = ((idx_reg_2056 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_615_p2 = ((idx_reg_2056 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln334_fu_640_p2 = ((idx_reg_2056 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln338_fu_665_p2 = ((idx_reg_2056 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln342_fu_690_p2 = ((idx_reg_2056 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln346_fu_715_p2 = ((idx_reg_2056 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_740_p2 = ((idx_reg_2056 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln354_fu_765_p2 = ((idx_reg_2056 == 3'd7) ? 1'b1 : 1'b0);

assign idx_fu_538_p1 = select_ln316_fu_530_p3[2:0];

assign idy_fu_542_p4 = {{select_ln316_fu_530_p3[11:3]}};

assign keyvalue_key_100_fu_1575_p3 = ((and_ln342_fu_882_p2[0:0] === 1'b1) ? keyvalue_key_92_fu_1398_p4 : keyvalue_key_99_fu_1567_p3);

assign keyvalue_key_101_fu_1583_p3 = ((and_ln346_fu_908_p2[0:0] === 1'b1) ? keyvalue_key_93_fu_1418_p4 : keyvalue_key_100_fu_1575_p3);

assign keyvalue_key_102_fu_1591_p3 = ((and_ln350_fu_934_p2[0:0] === 1'b1) ? keyvalue_key_94_fu_1438_p4 : keyvalue_key_101_fu_1583_p3);

assign keyvalue_key_103_fu_1599_p3 = ((and_ln354_fu_960_p2[0:0] === 1'b1) ? keyvalue_key_95_fu_1458_p4 : keyvalue_key_102_fu_1591_p3);

assign keyvalue_key_104_fu_1608_p1 = BIGcapsule3_V_q0[31:0];

assign keyvalue_key_105_fu_1622_p4 = {{BIGcapsule3_V_q0[95:64]}};

assign keyvalue_key_106_fu_1642_p4 = {{BIGcapsule3_V_q0[159:128]}};

assign keyvalue_key_107_fu_1662_p4 = {{BIGcapsule3_V_q0[223:192]}};

assign keyvalue_key_108_fu_1682_p4 = {{BIGcapsule3_V_q0[287:256]}};

assign keyvalue_key_109_fu_1702_p4 = {{BIGcapsule3_V_q0[351:320]}};

assign keyvalue_key_110_fu_1722_p4 = {{BIGcapsule3_V_q0[415:384]}};

assign keyvalue_key_111_fu_1742_p4 = {{BIGcapsule3_V_q0[479:448]}};

assign keyvalue_key_112_fu_1827_p3 = ((icmp_ln326_fu_596_p2[0:0] === 1'b1) ? keyvalue_key_104_fu_1608_p1 : keyvalue_key_48_fu_208);

assign keyvalue_key_113_fu_1835_p3 = ((and_ln330_fu_804_p2[0:0] === 1'b1) ? keyvalue_key_105_fu_1622_p4 : keyvalue_key_112_fu_1827_p3);

assign keyvalue_key_114_fu_1843_p3 = ((and_ln334_fu_830_p2[0:0] === 1'b1) ? keyvalue_key_106_fu_1642_p4 : keyvalue_key_113_fu_1835_p3);

assign keyvalue_key_115_fu_1851_p3 = ((and_ln338_fu_856_p2[0:0] === 1'b1) ? keyvalue_key_107_fu_1662_p4 : keyvalue_key_114_fu_1843_p3);

assign keyvalue_key_116_fu_1859_p3 = ((and_ln342_fu_882_p2[0:0] === 1'b1) ? keyvalue_key_108_fu_1682_p4 : keyvalue_key_115_fu_1851_p3);

assign keyvalue_key_117_fu_1867_p3 = ((and_ln346_fu_908_p2[0:0] === 1'b1) ? keyvalue_key_109_fu_1702_p4 : keyvalue_key_116_fu_1859_p3);

assign keyvalue_key_118_fu_1875_p3 = ((and_ln350_fu_934_p2[0:0] === 1'b1) ? keyvalue_key_110_fu_1722_p4 : keyvalue_key_117_fu_1867_p3);

assign keyvalue_key_119_fu_1883_p3 = ((and_ln354_fu_960_p2[0:0] === 1'b1) ? keyvalue_key_111_fu_1742_p4 : keyvalue_key_118_fu_1875_p3);

assign keyvalue_key_1_fu_620_p4 = {{BIGcapsule0_V_q0[95:64]}};

assign keyvalue_key_2_fu_645_p4 = {{BIGcapsule0_V_q0[159:128]}};

assign keyvalue_key_3_fu_670_p4 = {{BIGcapsule0_V_q0[223:192]}};

assign keyvalue_key_4_fu_695_p4 = {{BIGcapsule0_V_q0[287:256]}};

assign keyvalue_key_5_fu_720_p4 = {{BIGcapsule0_V_q0[351:320]}};

assign keyvalue_key_64_fu_601_p1 = BIGcapsule0_V_q0[31:0];

assign keyvalue_key_65_fu_975_p3 = ((icmp_ln326_fu_596_p2[0:0] === 1'b1) ? keyvalue_key_64_fu_601_p1 : keyvalue_key_fu_184);

assign keyvalue_key_66_fu_983_p3 = ((and_ln330_fu_804_p2[0:0] === 1'b1) ? keyvalue_key_1_fu_620_p4 : keyvalue_key_65_fu_975_p3);

assign keyvalue_key_67_fu_991_p3 = ((and_ln334_fu_830_p2[0:0] === 1'b1) ? keyvalue_key_2_fu_645_p4 : keyvalue_key_66_fu_983_p3);

assign keyvalue_key_68_fu_999_p3 = ((and_ln338_fu_856_p2[0:0] === 1'b1) ? keyvalue_key_3_fu_670_p4 : keyvalue_key_67_fu_991_p3);

assign keyvalue_key_69_fu_1007_p3 = ((and_ln342_fu_882_p2[0:0] === 1'b1) ? keyvalue_key_4_fu_695_p4 : keyvalue_key_68_fu_999_p3);

assign keyvalue_key_6_fu_745_p4 = {{BIGcapsule0_V_q0[415:384]}};

assign keyvalue_key_70_fu_1015_p3 = ((and_ln346_fu_908_p2[0:0] === 1'b1) ? keyvalue_key_5_fu_720_p4 : keyvalue_key_69_fu_1007_p3);

assign keyvalue_key_71_fu_1023_p3 = ((and_ln350_fu_934_p2[0:0] === 1'b1) ? keyvalue_key_6_fu_745_p4 : keyvalue_key_70_fu_1015_p3);

assign keyvalue_key_72_fu_1031_p3 = ((and_ln354_fu_960_p2[0:0] === 1'b1) ? keyvalue_key_7_fu_770_p4 : keyvalue_key_71_fu_1023_p3);

assign keyvalue_key_73_fu_1040_p1 = BIGcapsule1_V_q0[31:0];

assign keyvalue_key_74_fu_1074_p4 = {{BIGcapsule1_V_q0[159:128]}};

assign keyvalue_key_75_fu_1094_p4 = {{BIGcapsule1_V_q0[223:192]}};

assign keyvalue_key_76_fu_1114_p4 = {{BIGcapsule1_V_q0[287:256]}};

assign keyvalue_key_77_fu_1134_p4 = {{BIGcapsule1_V_q0[351:320]}};

assign keyvalue_key_78_fu_1154_p4 = {{BIGcapsule1_V_q0[415:384]}};

assign keyvalue_key_79_fu_1174_p4 = {{BIGcapsule1_V_q0[479:448]}};

assign keyvalue_key_7_fu_770_p4 = {{BIGcapsule0_V_q0[479:448]}};

assign keyvalue_key_80_fu_1259_p3 = ((icmp_ln326_fu_596_p2[0:0] === 1'b1) ? keyvalue_key_73_fu_1040_p1 : keyvalue_key_8_fu_192);

assign keyvalue_key_81_fu_1267_p3 = ((and_ln330_fu_804_p2[0:0] === 1'b1) ? keyvalue_key_9_fu_1054_p4 : keyvalue_key_80_fu_1259_p3);

assign keyvalue_key_82_fu_1275_p3 = ((and_ln334_fu_830_p2[0:0] === 1'b1) ? keyvalue_key_74_fu_1074_p4 : keyvalue_key_81_fu_1267_p3);

assign keyvalue_key_83_fu_1283_p3 = ((and_ln338_fu_856_p2[0:0] === 1'b1) ? keyvalue_key_75_fu_1094_p4 : keyvalue_key_82_fu_1275_p3);

assign keyvalue_key_84_fu_1291_p3 = ((and_ln342_fu_882_p2[0:0] === 1'b1) ? keyvalue_key_76_fu_1114_p4 : keyvalue_key_83_fu_1283_p3);

assign keyvalue_key_85_fu_1299_p3 = ((and_ln346_fu_908_p2[0:0] === 1'b1) ? keyvalue_key_77_fu_1134_p4 : keyvalue_key_84_fu_1291_p3);

assign keyvalue_key_86_fu_1307_p3 = ((and_ln350_fu_934_p2[0:0] === 1'b1) ? keyvalue_key_78_fu_1154_p4 : keyvalue_key_85_fu_1299_p3);

assign keyvalue_key_87_fu_1315_p3 = ((and_ln354_fu_960_p2[0:0] === 1'b1) ? keyvalue_key_79_fu_1174_p4 : keyvalue_key_86_fu_1307_p3);

assign keyvalue_key_88_fu_1324_p1 = BIGcapsule2_V_q0[31:0];

assign keyvalue_key_89_fu_1338_p4 = {{BIGcapsule2_V_q0[95:64]}};

assign keyvalue_key_90_fu_1358_p4 = {{BIGcapsule2_V_q0[159:128]}};

assign keyvalue_key_91_fu_1378_p4 = {{BIGcapsule2_V_q0[223:192]}};

assign keyvalue_key_92_fu_1398_p4 = {{BIGcapsule2_V_q0[287:256]}};

assign keyvalue_key_93_fu_1418_p4 = {{BIGcapsule2_V_q0[351:320]}};

assign keyvalue_key_94_fu_1438_p4 = {{BIGcapsule2_V_q0[415:384]}};

assign keyvalue_key_95_fu_1458_p4 = {{BIGcapsule2_V_q0[479:448]}};

assign keyvalue_key_96_fu_1543_p3 = ((icmp_ln326_fu_596_p2[0:0] === 1'b1) ? keyvalue_key_88_fu_1324_p1 : keyvalue_key_32_fu_200);

assign keyvalue_key_97_fu_1551_p3 = ((and_ln330_fu_804_p2[0:0] === 1'b1) ? keyvalue_key_89_fu_1338_p4 : keyvalue_key_96_fu_1543_p3);

assign keyvalue_key_98_fu_1559_p3 = ((and_ln334_fu_830_p2[0:0] === 1'b1) ? keyvalue_key_90_fu_1358_p4 : keyvalue_key_97_fu_1551_p3);

assign keyvalue_key_99_fu_1567_p3 = ((and_ln338_fu_856_p2[0:0] === 1'b1) ? keyvalue_key_91_fu_1378_p4 : keyvalue_key_98_fu_1559_p3);

assign keyvalue_key_9_fu_1054_p4 = {{BIGcapsule1_V_q0[95:64]}};

assign keyvalue_value_100_fu_1494_p3 = ((and_ln334_fu_830_p2[0:0] === 1'b1) ? keyvalue_value_92_fu_1368_p4 : keyvalue_value_99_fu_1486_p3);

assign keyvalue_value_101_fu_1502_p3 = ((and_ln338_fu_856_p2[0:0] === 1'b1) ? keyvalue_value_93_fu_1388_p4 : keyvalue_value_100_fu_1494_p3);

assign keyvalue_value_102_fu_1510_p3 = ((and_ln342_fu_882_p2[0:0] === 1'b1) ? keyvalue_value_94_fu_1408_p4 : keyvalue_value_101_fu_1502_p3);

assign keyvalue_value_103_fu_1518_p3 = ((and_ln346_fu_908_p2[0:0] === 1'b1) ? keyvalue_value_95_fu_1428_p4 : keyvalue_value_102_fu_1510_p3);

assign keyvalue_value_104_fu_1526_p3 = ((and_ln350_fu_934_p2[0:0] === 1'b1) ? keyvalue_value_96_fu_1448_p4 : keyvalue_value_103_fu_1518_p3);

assign keyvalue_value_105_fu_1534_p3 = ((and_ln354_fu_960_p2[0:0] === 1'b1) ? keyvalue_value_97_fu_1468_p4 : keyvalue_value_104_fu_1526_p3);

assign keyvalue_value_106_fu_1612_p4 = {{BIGcapsule3_V_q0[63:32]}};

assign keyvalue_value_107_fu_1632_p4 = {{BIGcapsule3_V_q0[127:96]}};

assign keyvalue_value_108_fu_1652_p4 = {{BIGcapsule3_V_q0[191:160]}};

assign keyvalue_value_109_fu_1672_p4 = {{BIGcapsule3_V_q0[255:224]}};

assign keyvalue_value_110_fu_1692_p4 = {{BIGcapsule3_V_q0[319:288]}};

assign keyvalue_value_111_fu_1712_p4 = {{BIGcapsule3_V_q0[383:352]}};

assign keyvalue_value_112_fu_1732_p4 = {{BIGcapsule3_V_q0[447:416]}};

assign keyvalue_value_113_fu_1752_p4 = {{BIGcapsule3_V_q0[511:480]}};

assign keyvalue_value_114_fu_1762_p3 = ((icmp_ln326_fu_596_p2[0:0] === 1'b1) ? keyvalue_value_106_fu_1612_p4 : keyvalue_value_67_fu_212);

assign keyvalue_value_115_fu_1770_p3 = ((and_ln330_fu_804_p2[0:0] === 1'b1) ? keyvalue_value_107_fu_1632_p4 : keyvalue_value_114_fu_1762_p3);

assign keyvalue_value_116_fu_1778_p3 = ((and_ln334_fu_830_p2[0:0] === 1'b1) ? keyvalue_value_108_fu_1652_p4 : keyvalue_value_115_fu_1770_p3);

assign keyvalue_value_117_fu_1786_p3 = ((and_ln338_fu_856_p2[0:0] === 1'b1) ? keyvalue_value_109_fu_1672_p4 : keyvalue_value_116_fu_1778_p3);

assign keyvalue_value_118_fu_1794_p3 = ((and_ln342_fu_882_p2[0:0] === 1'b1) ? keyvalue_value_110_fu_1692_p4 : keyvalue_value_117_fu_1786_p3);

assign keyvalue_value_119_fu_1802_p3 = ((and_ln346_fu_908_p2[0:0] === 1'b1) ? keyvalue_value_111_fu_1712_p4 : keyvalue_value_118_fu_1794_p3);

assign keyvalue_value_120_fu_1810_p3 = ((and_ln350_fu_934_p2[0:0] === 1'b1) ? keyvalue_value_112_fu_1732_p4 : keyvalue_value_119_fu_1802_p3);

assign keyvalue_value_121_fu_1818_p3 = ((and_ln354_fu_960_p2[0:0] === 1'b1) ? keyvalue_value_113_fu_1752_p4 : keyvalue_value_120_fu_1810_p3);

assign keyvalue_value_1_fu_630_p4 = {{BIGcapsule0_V_q0[127:96]}};

assign keyvalue_value_2_fu_655_p4 = {{BIGcapsule0_V_q0[191:160]}};

assign keyvalue_value_3_fu_680_p4 = {{BIGcapsule0_V_q0[255:224]}};

assign keyvalue_value_4_fu_705_p4 = {{BIGcapsule0_V_q0[319:288]}};

assign keyvalue_value_5_fu_730_p4 = {{BIGcapsule0_V_q0[383:352]}};

assign keyvalue_value_68_fu_790_p3 = ((icmp_ln326_fu_596_p2[0:0] === 1'b1) ? keyvalue_value_fu_605_p4 : keyvalue_value_64_fu_188);

assign keyvalue_value_69_fu_810_p3 = ((and_ln330_fu_804_p2[0:0] === 1'b1) ? keyvalue_value_1_fu_630_p4 : keyvalue_value_68_fu_790_p3);

assign keyvalue_value_6_fu_755_p4 = {{BIGcapsule0_V_q0[447:416]}};

assign keyvalue_value_70_fu_836_p3 = ((and_ln334_fu_830_p2[0:0] === 1'b1) ? keyvalue_value_2_fu_655_p4 : keyvalue_value_69_fu_810_p3);

assign keyvalue_value_71_fu_862_p3 = ((and_ln338_fu_856_p2[0:0] === 1'b1) ? keyvalue_value_3_fu_680_p4 : keyvalue_value_70_fu_836_p3);

assign keyvalue_value_72_fu_888_p3 = ((and_ln342_fu_882_p2[0:0] === 1'b1) ? keyvalue_value_4_fu_705_p4 : keyvalue_value_71_fu_862_p3);

assign keyvalue_value_73_fu_914_p3 = ((and_ln346_fu_908_p2[0:0] === 1'b1) ? keyvalue_value_5_fu_730_p4 : keyvalue_value_72_fu_888_p3);

assign keyvalue_value_74_fu_940_p3 = ((and_ln350_fu_934_p2[0:0] === 1'b1) ? keyvalue_value_6_fu_755_p4 : keyvalue_value_73_fu_914_p3);

assign keyvalue_value_75_fu_966_p3 = ((and_ln354_fu_960_p2[0:0] === 1'b1) ? keyvalue_value_7_fu_780_p4 : keyvalue_value_74_fu_940_p3);

assign keyvalue_value_76_fu_1084_p4 = {{BIGcapsule1_V_q0[191:160]}};

assign keyvalue_value_77_fu_1104_p4 = {{BIGcapsule1_V_q0[255:224]}};

assign keyvalue_value_78_fu_1124_p4 = {{BIGcapsule1_V_q0[319:288]}};

assign keyvalue_value_79_fu_1144_p4 = {{BIGcapsule1_V_q0[383:352]}};

assign keyvalue_value_7_fu_780_p4 = {{BIGcapsule0_V_q0[511:480]}};

assign keyvalue_value_80_fu_1164_p4 = {{BIGcapsule1_V_q0[447:416]}};

assign keyvalue_value_81_fu_1184_p4 = {{BIGcapsule1_V_q0[511:480]}};

assign keyvalue_value_82_fu_1194_p3 = ((icmp_ln326_fu_596_p2[0:0] === 1'b1) ? keyvalue_value_8_fu_1044_p4 : keyvalue_value_65_fu_196);

assign keyvalue_value_83_fu_1202_p3 = ((and_ln330_fu_804_p2[0:0] === 1'b1) ? keyvalue_value_9_fu_1064_p4 : keyvalue_value_82_fu_1194_p3);

assign keyvalue_value_84_fu_1210_p3 = ((and_ln334_fu_830_p2[0:0] === 1'b1) ? keyvalue_value_76_fu_1084_p4 : keyvalue_value_83_fu_1202_p3);

assign keyvalue_value_85_fu_1218_p3 = ((and_ln338_fu_856_p2[0:0] === 1'b1) ? keyvalue_value_77_fu_1104_p4 : keyvalue_value_84_fu_1210_p3);

assign keyvalue_value_86_fu_1226_p3 = ((and_ln342_fu_882_p2[0:0] === 1'b1) ? keyvalue_value_78_fu_1124_p4 : keyvalue_value_85_fu_1218_p3);

assign keyvalue_value_87_fu_1234_p3 = ((and_ln346_fu_908_p2[0:0] === 1'b1) ? keyvalue_value_79_fu_1144_p4 : keyvalue_value_86_fu_1226_p3);

assign keyvalue_value_88_fu_1242_p3 = ((and_ln350_fu_934_p2[0:0] === 1'b1) ? keyvalue_value_80_fu_1164_p4 : keyvalue_value_87_fu_1234_p3);

assign keyvalue_value_89_fu_1250_p3 = ((and_ln354_fu_960_p2[0:0] === 1'b1) ? keyvalue_value_81_fu_1184_p4 : keyvalue_value_88_fu_1242_p3);

assign keyvalue_value_8_fu_1044_p4 = {{BIGcapsule1_V_q0[63:32]}};

assign keyvalue_value_90_fu_1328_p4 = {{BIGcapsule2_V_q0[63:32]}};

assign keyvalue_value_91_fu_1348_p4 = {{BIGcapsule2_V_q0[127:96]}};

assign keyvalue_value_92_fu_1368_p4 = {{BIGcapsule2_V_q0[191:160]}};

assign keyvalue_value_93_fu_1388_p4 = {{BIGcapsule2_V_q0[255:224]}};

assign keyvalue_value_94_fu_1408_p4 = {{BIGcapsule2_V_q0[319:288]}};

assign keyvalue_value_95_fu_1428_p4 = {{BIGcapsule2_V_q0[383:352]}};

assign keyvalue_value_96_fu_1448_p4 = {{BIGcapsule2_V_q0[447:416]}};

assign keyvalue_value_97_fu_1468_p4 = {{BIGcapsule2_V_q0[511:480]}};

assign keyvalue_value_98_fu_1478_p3 = ((icmp_ln326_fu_596_p2[0:0] === 1'b1) ? keyvalue_value_90_fu_1328_p4 : keyvalue_value_66_fu_204);

assign keyvalue_value_99_fu_1486_p3 = ((and_ln330_fu_804_p2[0:0] === 1'b1) ? keyvalue_value_91_fu_1348_p4 : keyvalue_value_98_fu_1478_p3);

assign keyvalue_value_9_fu_1064_p4 = {{BIGcapsule1_V_q0[127:96]}};

assign keyvalue_value_fu_605_p4 = {{BIGcapsule0_V_q0[63:32]}};

assign loadoffset0_kvs_fu_446_p2 = (capsulemetadata_globaloffset + capsulemetadata_localoffset);

assign loadoffset1_kvs_fu_458_p2 = (capsulemetadata_globaloffset + add_ln1497_fu_453_p2);

assign loadoffset2_kvs_fu_469_p2 = (capsulemetadata_globaloffset + add_ln1505_fu_464_p2);

assign loadoffset3_kvs_fu_480_p2 = (capsulemetadata_globaloffset + add_ln1513_fu_475_p2);

assign loffset_fu_432_p1 = offset[11:0];

assign m_axi_kvdram_V_ARADDR = grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARADDR;

assign m_axi_kvdram_V_ARBURST = grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARBURST;

assign m_axi_kvdram_V_ARCACHE = grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARCACHE;

assign m_axi_kvdram_V_ARID = grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARID;

assign m_axi_kvdram_V_ARLEN = grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARLEN;

assign m_axi_kvdram_V_ARLOCK = grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARLOCK;

assign m_axi_kvdram_V_ARPROT = grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARPROT;

assign m_axi_kvdram_V_ARQOS = grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARQOS;

assign m_axi_kvdram_V_ARREGION = grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARREGION;

assign m_axi_kvdram_V_ARSIZE = grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARSIZE;

assign m_axi_kvdram_V_ARUSER = grp_readkeyvalues0_fu_418_m_axi_kvdram_V_ARUSER;

assign m_axi_kvdram_V_AWADDR = 32'd0;

assign m_axi_kvdram_V_AWBURST = 2'd0;

assign m_axi_kvdram_V_AWCACHE = 4'd0;

assign m_axi_kvdram_V_AWID = 1'd0;

assign m_axi_kvdram_V_AWLEN = 32'd0;

assign m_axi_kvdram_V_AWLOCK = 2'd0;

assign m_axi_kvdram_V_AWPROT = 3'd0;

assign m_axi_kvdram_V_AWQOS = 4'd0;

assign m_axi_kvdram_V_AWREGION = 4'd0;

assign m_axi_kvdram_V_AWSIZE = 3'd0;

assign m_axi_kvdram_V_AWUSER = 1'd0;

assign m_axi_kvdram_V_AWVALID = 1'b0;

assign m_axi_kvdram_V_BREADY = 1'b0;

assign m_axi_kvdram_V_WDATA = 512'd0;

assign m_axi_kvdram_V_WID = 1'd0;

assign m_axi_kvdram_V_WLAST = 1'b0;

assign m_axi_kvdram_V_WSTRB = 64'd0;

assign m_axi_kvdram_V_WUSER = 1'd0;

assign m_axi_kvdram_V_WVALID = 1'b0;

assign or_ln330_fu_818_p2 = (icmp_ln330_fu_615_p2 | icmp_ln326_fu_596_p2);

assign or_ln334_fu_844_p2 = (or_ln330_fu_818_p2 | icmp_ln334_fu_640_p2);

assign or_ln338_fu_870_p2 = (or_ln334_fu_844_p2 | icmp_ln338_fu_665_p2);

assign or_ln342_fu_896_p2 = (or_ln338_fu_870_p2 | icmp_ln342_fu_690_p2);

assign or_ln346_fu_922_p2 = (or_ln342_fu_896_p2 | icmp_ln346_fu_715_p2);

assign or_ln350_fu_948_p2 = (or_ln346_fu_922_p2 | icmp_ln350_fu_740_p2);

assign select_ln316_fu_530_p3 = ((tmp_37_fu_522_p3[0:0] === 1'b1) ? 12'd0 : add_ln1526_1_fu_517_p2);

assign tmp_37_fu_522_p3 = add_ln1526_fu_512_p2[32'd12];

assign xor_ln326_fu_798_p2 = (icmp_ln326_fu_596_p2 ^ 1'd1);

assign xor_ln330_fu_824_p2 = (or_ln330_fu_818_p2 ^ 1'd1);

assign xor_ln334_fu_850_p2 = (or_ln334_fu_844_p2 ^ 1'd1);

assign xor_ln338_fu_876_p2 = (or_ln338_fu_870_p2 ^ 1'd1);

assign xor_ln342_fu_902_p2 = (or_ln342_fu_896_p2 ^ 1'd1);

assign xor_ln346_fu_928_p2 = (or_ln346_fu_922_p2 ^ 1'd1);

assign xor_ln350_fu_954_p2 = (or_ln350_fu_948_p2 ^ 1'd1);

assign zext_ln1486_fu_436_p1 = loffset_fu_432_p1;

assign zext_ln1524_fu_504_p1 = ap_phi_mux_i_0_phi_fu_410_p4;

assign zext_ln1526_1_fu_508_p1 = ap_phi_mux_i_0_phi_fu_410_p4;

assign zext_ln1526_fu_584_p1 = i_0_reg_406;

assign zext_ln327_fu_552_p1 = idy_fu_542_p4;

always @ (posedge ap_clk) begin
    zext_ln1486_reg_1970[12] <= 1'b0;
end

endmodule //readcapsules0
