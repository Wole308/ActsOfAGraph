// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module readkeyvalues0_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_kvdram_V_AWVALID,
        m_axi_kvdram_V_AWREADY,
        m_axi_kvdram_V_AWADDR,
        m_axi_kvdram_V_AWID,
        m_axi_kvdram_V_AWLEN,
        m_axi_kvdram_V_AWSIZE,
        m_axi_kvdram_V_AWBURST,
        m_axi_kvdram_V_AWLOCK,
        m_axi_kvdram_V_AWCACHE,
        m_axi_kvdram_V_AWPROT,
        m_axi_kvdram_V_AWQOS,
        m_axi_kvdram_V_AWREGION,
        m_axi_kvdram_V_AWUSER,
        m_axi_kvdram_V_WVALID,
        m_axi_kvdram_V_WREADY,
        m_axi_kvdram_V_WDATA,
        m_axi_kvdram_V_WSTRB,
        m_axi_kvdram_V_WLAST,
        m_axi_kvdram_V_WID,
        m_axi_kvdram_V_WUSER,
        m_axi_kvdram_V_ARVALID,
        m_axi_kvdram_V_ARREADY,
        m_axi_kvdram_V_ARADDR,
        m_axi_kvdram_V_ARID,
        m_axi_kvdram_V_ARLEN,
        m_axi_kvdram_V_ARSIZE,
        m_axi_kvdram_V_ARBURST,
        m_axi_kvdram_V_ARLOCK,
        m_axi_kvdram_V_ARCACHE,
        m_axi_kvdram_V_ARPROT,
        m_axi_kvdram_V_ARQOS,
        m_axi_kvdram_V_ARREGION,
        m_axi_kvdram_V_ARUSER,
        m_axi_kvdram_V_RVALID,
        m_axi_kvdram_V_RREADY,
        m_axi_kvdram_V_RDATA,
        m_axi_kvdram_V_RLAST,
        m_axi_kvdram_V_RID,
        m_axi_kvdram_V_RUSER,
        m_axi_kvdram_V_RRESP,
        m_axi_kvdram_V_BVALID,
        m_axi_kvdram_V_BREADY,
        m_axi_kvdram_V_BRESP,
        m_axi_kvdram_V_BID,
        m_axi_kvdram_V_BUSER,
        kvdram_V_offset,
        buffer0_V_address0,
        buffer0_V_ce0,
        buffer0_V_we0,
        buffer0_V_d0,
        buffer1_V_address0,
        buffer1_V_ce0,
        buffer1_V_we0,
        buffer1_V_d0,
        buffer2_V_address0,
        buffer2_V_ce0,
        buffer2_V_we0,
        buffer2_V_d0,
        buffer3_V_address0,
        buffer3_V_ce0,
        buffer3_V_we0,
        buffer3_V_d0,
        baseaddress,
        sourcestats_0_key_r,
        sourcestats_1_key_r,
        sourcestats_2_key_r,
        sourcestats_3_key_r,
        sourcestats_0_value,
        sourcestats_1_value,
        sourcestats_2_value,
        sourcestats_3_value,
        travstate_i_kvs
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_kvdram_V_AWVALID;
input   m_axi_kvdram_V_AWREADY;
output  [31:0] m_axi_kvdram_V_AWADDR;
output  [0:0] m_axi_kvdram_V_AWID;
output  [31:0] m_axi_kvdram_V_AWLEN;
output  [2:0] m_axi_kvdram_V_AWSIZE;
output  [1:0] m_axi_kvdram_V_AWBURST;
output  [1:0] m_axi_kvdram_V_AWLOCK;
output  [3:0] m_axi_kvdram_V_AWCACHE;
output  [2:0] m_axi_kvdram_V_AWPROT;
output  [3:0] m_axi_kvdram_V_AWQOS;
output  [3:0] m_axi_kvdram_V_AWREGION;
output  [0:0] m_axi_kvdram_V_AWUSER;
output   m_axi_kvdram_V_WVALID;
input   m_axi_kvdram_V_WREADY;
output  [511:0] m_axi_kvdram_V_WDATA;
output  [63:0] m_axi_kvdram_V_WSTRB;
output   m_axi_kvdram_V_WLAST;
output  [0:0] m_axi_kvdram_V_WID;
output  [0:0] m_axi_kvdram_V_WUSER;
output   m_axi_kvdram_V_ARVALID;
input   m_axi_kvdram_V_ARREADY;
output  [31:0] m_axi_kvdram_V_ARADDR;
output  [0:0] m_axi_kvdram_V_ARID;
output  [31:0] m_axi_kvdram_V_ARLEN;
output  [2:0] m_axi_kvdram_V_ARSIZE;
output  [1:0] m_axi_kvdram_V_ARBURST;
output  [1:0] m_axi_kvdram_V_ARLOCK;
output  [3:0] m_axi_kvdram_V_ARCACHE;
output  [2:0] m_axi_kvdram_V_ARPROT;
output  [3:0] m_axi_kvdram_V_ARQOS;
output  [3:0] m_axi_kvdram_V_ARREGION;
output  [0:0] m_axi_kvdram_V_ARUSER;
input   m_axi_kvdram_V_RVALID;
output   m_axi_kvdram_V_RREADY;
input  [511:0] m_axi_kvdram_V_RDATA;
input   m_axi_kvdram_V_RLAST;
input  [0:0] m_axi_kvdram_V_RID;
input  [0:0] m_axi_kvdram_V_RUSER;
input  [1:0] m_axi_kvdram_V_RRESP;
input   m_axi_kvdram_V_BVALID;
output   m_axi_kvdram_V_BREADY;
input  [1:0] m_axi_kvdram_V_BRESP;
input  [0:0] m_axi_kvdram_V_BID;
input  [0:0] m_axi_kvdram_V_BUSER;
input  [25:0] kvdram_V_offset;
output  [8:0] buffer0_V_address0;
output   buffer0_V_ce0;
output   buffer0_V_we0;
output  [511:0] buffer0_V_d0;
output  [8:0] buffer1_V_address0;
output   buffer1_V_ce0;
output   buffer1_V_we0;
output  [511:0] buffer1_V_d0;
output  [8:0] buffer2_V_address0;
output   buffer2_V_ce0;
output   buffer2_V_we0;
output  [511:0] buffer2_V_d0;
output  [8:0] buffer3_V_address0;
output   buffer3_V_ce0;
output   buffer3_V_we0;
output  [511:0] buffer3_V_d0;
input  [24:0] baseaddress;
input  [31:0] sourcestats_0_key_r;
input  [31:0] sourcestats_1_key_r;
input  [31:0] sourcestats_2_key_r;
input  [31:0] sourcestats_3_key_r;
input  [31:0] sourcestats_0_value;
input  [31:0] sourcestats_1_value;
input  [31:0] sourcestats_2_value;
input  [31:0] sourcestats_3_value;
input  [31:0] travstate_i_kvs;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_kvdram_V_ARVALID;
reg m_axi_kvdram_V_RREADY;
reg buffer0_V_ce0;
reg buffer0_V_we0;
reg buffer1_V_ce0;
reg buffer1_V_we0;
reg buffer2_V_ce0;
reg buffer2_V_we0;
reg buffer3_V_ce0;
reg buffer3_V_we0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] add_ln1234_fu_179_p2;
reg   [31:0] add_ln1234_reg_475;
wire   [31:0] select_ln1233_fu_205_p3;
reg   [31:0] select_ln1233_reg_483;
wire   [31:0] add_ln1474_fu_227_p2;
reg   [31:0] add_ln1474_reg_488;
wire    ap_CS_fsm_state2;
wire   [31:0] select_ln1233_1_fu_276_p3;
reg   [31:0] select_ln1233_1_reg_503;
wire    ap_CS_fsm_state3;
wire    grp_readkeyvalues0_166_fu_136_ap_ready;
wire    grp_readkeyvalues0_166_fu_136_ap_done;
wire   [31:0] add_ln1475_fu_298_p2;
reg   [31:0] add_ln1475_reg_508;
wire   [31:0] select_ln1233_2_fu_346_p3;
reg   [31:0] select_ln1233_2_reg_513;
wire    ap_CS_fsm_state5;
wire   [31:0] add_ln1476_1_fu_378_p2;
reg   [31:0] add_ln1476_1_reg_518;
wire   [31:0] select_ln1233_3_fu_426_p3;
reg   [31:0] select_ln1233_3_reg_523;
wire    ap_CS_fsm_state7;
wire   [31:0] add_ln1477_1_fu_458_p2;
reg   [31:0] add_ln1477_1_reg_528;
wire    grp_readkeyvalues0_166_fu_136_ap_start;
wire    grp_readkeyvalues0_166_fu_136_ap_idle;
wire    grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWVALID;
wire   [31:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWADDR;
wire   [0:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWID;
wire   [31:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWLEN;
wire   [2:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWSIZE;
wire   [1:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWBURST;
wire   [1:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWLOCK;
wire   [3:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWCACHE;
wire   [2:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWPROT;
wire   [3:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWQOS;
wire   [3:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWREGION;
wire   [0:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWUSER;
wire    grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WVALID;
wire   [511:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WDATA;
wire   [63:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WSTRB;
wire    grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WLAST;
wire   [0:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WID;
wire   [0:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WUSER;
wire    grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARVALID;
wire   [31:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARADDR;
wire   [0:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARID;
wire   [31:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARLEN;
wire   [2:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARSIZE;
wire   [1:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARBURST;
wire   [1:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARLOCK;
wire   [3:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARCACHE;
wire   [2:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARPROT;
wire   [3:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARQOS;
wire   [3:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARREGION;
wire   [0:0] grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARUSER;
wire    grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_RREADY;
wire    grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_BREADY;
wire   [8:0] grp_readkeyvalues0_166_fu_136_buffer_V_address0;
wire    grp_readkeyvalues0_166_fu_136_buffer_V_ce0;
wire    grp_readkeyvalues0_166_fu_136_buffer_V_we0;
wire   [511:0] grp_readkeyvalues0_166_fu_136_buffer_V_d0;
reg   [31:0] grp_readkeyvalues0_166_fu_136_offset_kvs;
reg   [31:0] grp_readkeyvalues0_166_fu_136_size_kvs;
reg    grp_readkeyvalues0_166_fu_136_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire   [31:0] add_ln1447_fu_153_p2;
wire   [28:0] travstate0_end_kvs_fu_159_p4;
wire   [31:0] travstate0_end_kvs_1_fu_169_p1;
wire   [0:0] icmp_ln1234_fu_185_p2;
wire   [31:0] chunk0_size_fu_191_p2;
wire   [0:0] icmp_ln1233_fu_173_p2;
wire   [31:0] select_ln1234_fu_197_p3;
wire   [28:0] lshr_ln_fu_213_p4;
wire   [31:0] zext_ln1474_fu_223_p1;
wire   [31:0] add_ln1452_fu_233_p2;
wire   [28:0] travstate1_end_kvs_fu_239_p4;
wire   [31:0] travstate1_end_kvs_1_fu_249_p1;
wire   [0:0] icmp_ln1234_1_fu_258_p2;
wire   [31:0] chunk1_size_fu_263_p2;
wire   [0:0] icmp_ln1233_1_fu_253_p2;
wire   [31:0] select_ln1234_1_fu_268_p3;
wire   [28:0] lshr_ln1_fu_284_p4;
wire   [31:0] zext_ln1475_fu_294_p1;
wire   [31:0] add_ln1457_fu_303_p2;
wire   [28:0] travstate2_end_kvs_fu_309_p4;
wire   [31:0] travstate2_end_kvs_1_fu_319_p1;
wire   [0:0] icmp_ln1234_2_fu_328_p2;
wire   [31:0] chunk2_size_fu_333_p2;
wire   [0:0] icmp_ln1233_2_fu_323_p2;
wire   [31:0] select_ln1234_2_fu_338_p3;
wire   [28:0] tmp_fu_354_p4;
wire   [29:0] zext_ln1476_1_fu_364_p1;
wire   [29:0] add_ln1476_fu_368_p2;
wire   [31:0] zext_ln1476_fu_374_p1;
wire   [31:0] add_ln1462_fu_383_p2;
wire   [28:0] travstate3_end_kvs_fu_389_p4;
wire   [31:0] travstate3_end_kvs_1_fu_399_p1;
wire   [0:0] icmp_ln1234_3_fu_408_p2;
wire   [31:0] chunk3_size_fu_413_p2;
wire   [0:0] icmp_ln1233_3_fu_403_p2;
wire   [31:0] select_ln1234_3_fu_418_p3;
wire   [28:0] tmp_36_fu_434_p4;
wire   [29:0] zext_ln1477_1_fu_444_p1;
wire   [29:0] add_ln1477_fu_448_p2;
wire   [31:0] zext_ln1477_fu_454_p1;
reg   [8:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 grp_readkeyvalues0_166_fu_136_ap_start_reg = 1'b0;
end

readkeyvalues0_166 grp_readkeyvalues0_166_fu_136(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_readkeyvalues0_166_fu_136_ap_start),
    .ap_done(grp_readkeyvalues0_166_fu_136_ap_done),
    .ap_idle(grp_readkeyvalues0_166_fu_136_ap_idle),
    .ap_ready(grp_readkeyvalues0_166_fu_136_ap_ready),
    .m_axi_kvdram_V_AWVALID(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWVALID),
    .m_axi_kvdram_V_AWREADY(1'b0),
    .m_axi_kvdram_V_AWADDR(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWADDR),
    .m_axi_kvdram_V_AWID(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWID),
    .m_axi_kvdram_V_AWLEN(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWLEN),
    .m_axi_kvdram_V_AWSIZE(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWSIZE),
    .m_axi_kvdram_V_AWBURST(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWBURST),
    .m_axi_kvdram_V_AWLOCK(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWLOCK),
    .m_axi_kvdram_V_AWCACHE(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWCACHE),
    .m_axi_kvdram_V_AWPROT(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWPROT),
    .m_axi_kvdram_V_AWQOS(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWQOS),
    .m_axi_kvdram_V_AWREGION(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWREGION),
    .m_axi_kvdram_V_AWUSER(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_AWUSER),
    .m_axi_kvdram_V_WVALID(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WVALID),
    .m_axi_kvdram_V_WREADY(1'b0),
    .m_axi_kvdram_V_WDATA(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WDATA),
    .m_axi_kvdram_V_WSTRB(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WSTRB),
    .m_axi_kvdram_V_WLAST(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WLAST),
    .m_axi_kvdram_V_WID(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WID),
    .m_axi_kvdram_V_WUSER(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_WUSER),
    .m_axi_kvdram_V_ARVALID(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARVALID),
    .m_axi_kvdram_V_ARREADY(m_axi_kvdram_V_ARREADY),
    .m_axi_kvdram_V_ARADDR(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARADDR),
    .m_axi_kvdram_V_ARID(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARID),
    .m_axi_kvdram_V_ARLEN(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARLEN),
    .m_axi_kvdram_V_ARSIZE(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARSIZE),
    .m_axi_kvdram_V_ARBURST(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARBURST),
    .m_axi_kvdram_V_ARLOCK(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARLOCK),
    .m_axi_kvdram_V_ARCACHE(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARCACHE),
    .m_axi_kvdram_V_ARPROT(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARPROT),
    .m_axi_kvdram_V_ARQOS(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARQOS),
    .m_axi_kvdram_V_ARREGION(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARREGION),
    .m_axi_kvdram_V_ARUSER(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARUSER),
    .m_axi_kvdram_V_RVALID(m_axi_kvdram_V_RVALID),
    .m_axi_kvdram_V_RREADY(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_RREADY),
    .m_axi_kvdram_V_RDATA(m_axi_kvdram_V_RDATA),
    .m_axi_kvdram_V_RLAST(m_axi_kvdram_V_RLAST),
    .m_axi_kvdram_V_RID(m_axi_kvdram_V_RID),
    .m_axi_kvdram_V_RUSER(m_axi_kvdram_V_RUSER),
    .m_axi_kvdram_V_RRESP(m_axi_kvdram_V_RRESP),
    .m_axi_kvdram_V_BVALID(1'b0),
    .m_axi_kvdram_V_BREADY(grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_BREADY),
    .m_axi_kvdram_V_BRESP(2'd0),
    .m_axi_kvdram_V_BID(1'd0),
    .m_axi_kvdram_V_BUSER(1'd0),
    .kvdram_V_offset(kvdram_V_offset),
    .buffer_V_address0(grp_readkeyvalues0_166_fu_136_buffer_V_address0),
    .buffer_V_ce0(grp_readkeyvalues0_166_fu_136_buffer_V_ce0),
    .buffer_V_we0(grp_readkeyvalues0_166_fu_136_buffer_V_we0),
    .buffer_V_d0(grp_readkeyvalues0_166_fu_136_buffer_V_d0),
    .baseaddress(baseaddress),
    .offset_kvs(grp_readkeyvalues0_166_fu_136_offset_kvs),
    .size_kvs(grp_readkeyvalues0_166_fu_136_size_kvs)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_readkeyvalues0_166_fu_136_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
            grp_readkeyvalues0_166_fu_136_ap_start_reg <= 1'b1;
        end else if ((grp_readkeyvalues0_166_fu_136_ap_ready == 1'b1)) begin
            grp_readkeyvalues0_166_fu_136_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        add_ln1234_reg_475 <= add_ln1234_fu_179_p2;
        add_ln1474_reg_488 <= add_ln1474_fu_227_p2;
        select_ln1233_reg_483 <= select_ln1233_fu_205_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_readkeyvalues0_166_fu_136_ap_done == 1'b1))) begin
        add_ln1475_reg_508 <= add_ln1475_fu_298_p2;
        select_ln1233_1_reg_503 <= select_ln1233_1_fu_276_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_readkeyvalues0_166_fu_136_ap_done == 1'b1))) begin
        add_ln1476_1_reg_518 <= add_ln1476_1_fu_378_p2;
        select_ln1233_2_reg_513 <= select_ln1233_2_fu_346_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (grp_readkeyvalues0_166_fu_136_ap_done == 1'b1))) begin
        add_ln1477_1_reg_528 <= add_ln1477_1_fu_458_p2;
        select_ln1233_3_reg_523 <= select_ln1233_3_fu_426_p3;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state9) & (grp_readkeyvalues0_166_fu_136_ap_done == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (grp_readkeyvalues0_166_fu_136_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buffer0_V_ce0 = grp_readkeyvalues0_166_fu_136_buffer_V_ce0;
    end else begin
        buffer0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buffer0_V_we0 = grp_readkeyvalues0_166_fu_136_buffer_V_we0;
    end else begin
        buffer0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buffer1_V_ce0 = grp_readkeyvalues0_166_fu_136_buffer_V_ce0;
    end else begin
        buffer1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buffer1_V_we0 = grp_readkeyvalues0_166_fu_136_buffer_V_we0;
    end else begin
        buffer1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        buffer2_V_ce0 = grp_readkeyvalues0_166_fu_136_buffer_V_ce0;
    end else begin
        buffer2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        buffer2_V_we0 = grp_readkeyvalues0_166_fu_136_buffer_V_we0;
    end else begin
        buffer2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        buffer3_V_ce0 = grp_readkeyvalues0_166_fu_136_buffer_V_ce0;
    end else begin
        buffer3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        buffer3_V_we0 = grp_readkeyvalues0_166_fu_136_buffer_V_we0;
    end else begin
        buffer3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_readkeyvalues0_166_fu_136_offset_kvs = add_ln1477_1_reg_528;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_readkeyvalues0_166_fu_136_offset_kvs = add_ln1476_1_reg_518;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_readkeyvalues0_166_fu_136_offset_kvs = add_ln1475_reg_508;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_readkeyvalues0_166_fu_136_offset_kvs = add_ln1474_reg_488;
    end else begin
        grp_readkeyvalues0_166_fu_136_offset_kvs = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_readkeyvalues0_166_fu_136_size_kvs = select_ln1233_3_reg_523;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_readkeyvalues0_166_fu_136_size_kvs = select_ln1233_2_reg_513;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_readkeyvalues0_166_fu_136_size_kvs = select_ln1233_1_reg_503;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_readkeyvalues0_166_fu_136_size_kvs = select_ln1233_reg_483;
    end else begin
        grp_readkeyvalues0_166_fu_136_size_kvs = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_kvdram_V_ARVALID = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARVALID;
    end else begin
        m_axi_kvdram_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_kvdram_V_RREADY = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_RREADY;
    end else begin
        m_axi_kvdram_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_readkeyvalues0_166_fu_136_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_readkeyvalues0_166_fu_136_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_readkeyvalues0_166_fu_136_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_readkeyvalues0_166_fu_136_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1234_fu_179_p2 = (travstate_i_kvs + 32'd512);

assign add_ln1447_fu_153_p2 = (sourcestats_0_value + 32'd7);

assign add_ln1452_fu_233_p2 = (sourcestats_1_value + 32'd7);

assign add_ln1457_fu_303_p2 = (sourcestats_2_value + 32'd7);

assign add_ln1462_fu_383_p2 = (sourcestats_3_value + 32'd7);

assign add_ln1474_fu_227_p2 = (travstate_i_kvs + zext_ln1474_fu_223_p1);

assign add_ln1475_fu_298_p2 = (zext_ln1475_fu_294_p1 + add_ln1234_reg_475);

assign add_ln1476_1_fu_378_p2 = (travstate_i_kvs + zext_ln1476_fu_374_p1);

assign add_ln1476_fu_368_p2 = (zext_ln1476_1_fu_364_p1 + 30'd1024);

assign add_ln1477_1_fu_458_p2 = (travstate_i_kvs + zext_ln1477_fu_454_p1);

assign add_ln1477_fu_448_p2 = (zext_ln1477_1_fu_444_p1 + 30'd1536);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign buffer0_V_address0 = grp_readkeyvalues0_166_fu_136_buffer_V_address0;

assign buffer0_V_d0 = grp_readkeyvalues0_166_fu_136_buffer_V_d0;

assign buffer1_V_address0 = grp_readkeyvalues0_166_fu_136_buffer_V_address0;

assign buffer1_V_d0 = grp_readkeyvalues0_166_fu_136_buffer_V_d0;

assign buffer2_V_address0 = grp_readkeyvalues0_166_fu_136_buffer_V_address0;

assign buffer2_V_d0 = grp_readkeyvalues0_166_fu_136_buffer_V_d0;

assign buffer3_V_address0 = grp_readkeyvalues0_166_fu_136_buffer_V_address0;

assign buffer3_V_d0 = grp_readkeyvalues0_166_fu_136_buffer_V_d0;

assign chunk0_size_fu_191_p2 = (travstate0_end_kvs_1_fu_169_p1 - travstate_i_kvs);

assign chunk1_size_fu_263_p2 = (travstate1_end_kvs_1_fu_249_p1 - travstate_i_kvs);

assign chunk2_size_fu_333_p2 = (travstate2_end_kvs_1_fu_319_p1 - travstate_i_kvs);

assign chunk3_size_fu_413_p2 = (travstate3_end_kvs_1_fu_399_p1 - travstate_i_kvs);

assign grp_readkeyvalues0_166_fu_136_ap_start = grp_readkeyvalues0_166_fu_136_ap_start_reg;

assign icmp_ln1233_1_fu_253_p2 = ((travstate1_end_kvs_1_fu_249_p1 < travstate_i_kvs) ? 1'b1 : 1'b0);

assign icmp_ln1233_2_fu_323_p2 = ((travstate2_end_kvs_1_fu_319_p1 < travstate_i_kvs) ? 1'b1 : 1'b0);

assign icmp_ln1233_3_fu_403_p2 = ((travstate3_end_kvs_1_fu_399_p1 < travstate_i_kvs) ? 1'b1 : 1'b0);

assign icmp_ln1233_fu_173_p2 = ((travstate0_end_kvs_1_fu_169_p1 < travstate_i_kvs) ? 1'b1 : 1'b0);

assign icmp_ln1234_1_fu_258_p2 = ((add_ln1234_reg_475 > travstate1_end_kvs_1_fu_249_p1) ? 1'b1 : 1'b0);

assign icmp_ln1234_2_fu_328_p2 = ((add_ln1234_reg_475 > travstate2_end_kvs_1_fu_319_p1) ? 1'b1 : 1'b0);

assign icmp_ln1234_3_fu_408_p2 = ((add_ln1234_reg_475 > travstate3_end_kvs_1_fu_399_p1) ? 1'b1 : 1'b0);

assign icmp_ln1234_fu_185_p2 = ((add_ln1234_fu_179_p2 > travstate0_end_kvs_1_fu_169_p1) ? 1'b1 : 1'b0);

assign lshr_ln1_fu_284_p4 = {{sourcestats_1_key_r[31:3]}};

assign lshr_ln_fu_213_p4 = {{sourcestats_0_key_r[31:3]}};

assign m_axi_kvdram_V_ARADDR = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARADDR;

assign m_axi_kvdram_V_ARBURST = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARBURST;

assign m_axi_kvdram_V_ARCACHE = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARCACHE;

assign m_axi_kvdram_V_ARID = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARID;

assign m_axi_kvdram_V_ARLEN = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARLEN;

assign m_axi_kvdram_V_ARLOCK = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARLOCK;

assign m_axi_kvdram_V_ARPROT = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARPROT;

assign m_axi_kvdram_V_ARQOS = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARQOS;

assign m_axi_kvdram_V_ARREGION = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARREGION;

assign m_axi_kvdram_V_ARSIZE = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARSIZE;

assign m_axi_kvdram_V_ARUSER = grp_readkeyvalues0_166_fu_136_m_axi_kvdram_V_ARUSER;

assign m_axi_kvdram_V_AWADDR = 32'd0;

assign m_axi_kvdram_V_AWBURST = 2'd0;

assign m_axi_kvdram_V_AWCACHE = 4'd0;

assign m_axi_kvdram_V_AWID = 1'd0;

assign m_axi_kvdram_V_AWLEN = 32'd0;

assign m_axi_kvdram_V_AWLOCK = 2'd0;

assign m_axi_kvdram_V_AWPROT = 3'd0;

assign m_axi_kvdram_V_AWQOS = 4'd0;

assign m_axi_kvdram_V_AWREGION = 4'd0;

assign m_axi_kvdram_V_AWSIZE = 3'd0;

assign m_axi_kvdram_V_AWUSER = 1'd0;

assign m_axi_kvdram_V_AWVALID = 1'b0;

assign m_axi_kvdram_V_BREADY = 1'b0;

assign m_axi_kvdram_V_WDATA = 512'd0;

assign m_axi_kvdram_V_WID = 1'd0;

assign m_axi_kvdram_V_WLAST = 1'b0;

assign m_axi_kvdram_V_WSTRB = 64'd0;

assign m_axi_kvdram_V_WUSER = 1'd0;

assign m_axi_kvdram_V_WVALID = 1'b0;

assign select_ln1233_1_fu_276_p3 = ((icmp_ln1233_1_fu_253_p2[0:0] === 1'b1) ? 32'd0 : select_ln1234_1_fu_268_p3);

assign select_ln1233_2_fu_346_p3 = ((icmp_ln1233_2_fu_323_p2[0:0] === 1'b1) ? 32'd0 : select_ln1234_2_fu_338_p3);

assign select_ln1233_3_fu_426_p3 = ((icmp_ln1233_3_fu_403_p2[0:0] === 1'b1) ? 32'd0 : select_ln1234_3_fu_418_p3);

assign select_ln1233_fu_205_p3 = ((icmp_ln1233_fu_173_p2[0:0] === 1'b1) ? 32'd0 : select_ln1234_fu_197_p3);

assign select_ln1234_1_fu_268_p3 = ((icmp_ln1234_1_fu_258_p2[0:0] === 1'b1) ? chunk1_size_fu_263_p2 : 32'd512);

assign select_ln1234_2_fu_338_p3 = ((icmp_ln1234_2_fu_328_p2[0:0] === 1'b1) ? chunk2_size_fu_333_p2 : 32'd512);

assign select_ln1234_3_fu_418_p3 = ((icmp_ln1234_3_fu_408_p2[0:0] === 1'b1) ? chunk3_size_fu_413_p2 : 32'd512);

assign select_ln1234_fu_197_p3 = ((icmp_ln1234_fu_185_p2[0:0] === 1'b1) ? chunk0_size_fu_191_p2 : 32'd512);

assign tmp_36_fu_434_p4 = {{sourcestats_3_key_r[31:3]}};

assign tmp_fu_354_p4 = {{sourcestats_2_key_r[31:3]}};

assign travstate0_end_kvs_1_fu_169_p1 = travstate0_end_kvs_fu_159_p4;

assign travstate0_end_kvs_fu_159_p4 = {{add_ln1447_fu_153_p2[31:3]}};

assign travstate1_end_kvs_1_fu_249_p1 = travstate1_end_kvs_fu_239_p4;

assign travstate1_end_kvs_fu_239_p4 = {{add_ln1452_fu_233_p2[31:3]}};

assign travstate2_end_kvs_1_fu_319_p1 = travstate2_end_kvs_fu_309_p4;

assign travstate2_end_kvs_fu_309_p4 = {{add_ln1457_fu_303_p2[31:3]}};

assign travstate3_end_kvs_1_fu_399_p1 = travstate3_end_kvs_fu_389_p4;

assign travstate3_end_kvs_fu_389_p4 = {{add_ln1462_fu_383_p2[31:3]}};

assign zext_ln1474_fu_223_p1 = lshr_ln_fu_213_p4;

assign zext_ln1475_fu_294_p1 = lshr_ln1_fu_284_p4;

assign zext_ln1476_1_fu_364_p1 = tmp_fu_354_p4;

assign zext_ln1476_fu_374_p1 = add_ln1476_fu_368_p2;

assign zext_ln1477_1_fu_444_p1 = tmp_36_fu_434_p4;

assign zext_ln1477_fu_454_p1 = add_ln1477_fu_448_p2;

endmodule //readkeyvalues0_3
