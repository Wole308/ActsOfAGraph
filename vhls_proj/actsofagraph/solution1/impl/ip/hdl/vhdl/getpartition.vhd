-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1.3
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity getpartition is
port (
    ap_ready : OUT STD_LOGIC;
    keyvalue_key : IN STD_LOGIC_VECTOR (31 downto 0);
    currentLOP : IN STD_LOGIC_VECTOR (31 downto 0);
    upperlimit : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (4 downto 0) );
end;


architecture behav of getpartition is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_75BCD15 : STD_LOGIC_VECTOR (31 downto 0) := "00000111010110111100110100010101";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal shl_ln304_fu_48_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln304_1_fu_54_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln304_2_fu_60_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln304_fu_42_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln304_fu_66_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln306_fu_78_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal val_fu_72_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln306_fu_84_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_92_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal icmp_ln307_fu_102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln307_fu_108_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln307_1_fu_112_p1 : STD_LOGIC_VECTOR (4 downto 0);


begin



    add_ln304_fu_66_p2 <= std_logic_vector(unsigned(ap_const_lv32_1A) + unsigned(sub_ln304_2_fu_60_p2));
    ap_ready <= ap_const_logic_1;
    ap_return <= 
        trunc_ln307_fu_108_p1 when (icmp_ln307_fu_102_p2(0) = '1') else 
        trunc_ln307_1_fu_112_p1;
    icmp_ln306_fu_78_p2 <= "1" when (keyvalue_key = ap_const_lv32_75BCD15) else "0";
    icmp_ln307_fu_102_p2 <= "0" when (tmp_fu_92_p4 = ap_const_lv27_0) else "1";
    select_ln306_fu_84_p3 <= 
        ap_const_lv32_0 when (icmp_ln306_fu_78_p2(0) = '1') else 
        val_fu_72_p2;
    shl_ln304_fu_48_p2 <= std_logic_vector(shift_left(unsigned(currentLOP),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    sub_ln304_1_fu_54_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(shl_ln304_fu_48_p2));
    sub_ln304_2_fu_60_p2 <= std_logic_vector(unsigned(sub_ln304_1_fu_54_p2) - unsigned(currentLOP));
    sub_ln304_fu_42_p2 <= std_logic_vector(unsigned(keyvalue_key) - unsigned(upperlimit));
    tmp_fu_92_p4 <= select_ln306_fu_84_p3(31 downto 5);
    trunc_ln307_1_fu_112_p1 <= select_ln306_fu_84_p3(5 - 1 downto 0);
    trunc_ln307_fu_108_p1 <= val_fu_72_p2(5 - 1 downto 0);
    val_fu_72_p2 <= std_logic_vector(shift_right(unsigned(sub_ln304_fu_42_p2),to_integer(unsigned('0' & add_ln304_fu_66_p2(31-1 downto 0)))));
end behav;
