-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1.3
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity topkernel is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM2_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_DATA_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM2_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM2_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_WUSER_WIDTH-1 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_RUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of topkernel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "topkernel,hls_ip_2019_1_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-fsgd2104-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=119339574,HLS_SYN_TPT=none,HLS_SYN_MEM=984,HLS_SYN_DSP=0,HLS_SYN_FF=48172,HLS_SYN_LUT=47622,HLS_VERSION=2019_1_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_const_lv30_4 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000100";
    constant ap_const_lv30_5 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000101";
    constant ap_const_lv30_9 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000001001";
    constant ap_const_lv30_B : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000001011";
    constant ap_const_lv30_E : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000001110";
    constant ap_const_lv30_11 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000010001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal kvsourcedramA_V : STD_LOGIC_VECTOR (31 downto 0);
    signal kvdestdramA_V : STD_LOGIC_VECTOR (31 downto 0);
    signal kvstatsA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem2_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal gmem2_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal gmem0_AWVALID : STD_LOGIC;
    signal gmem0_AWREADY : STD_LOGIC;
    signal gmem0_WVALID : STD_LOGIC;
    signal gmem0_WREADY : STD_LOGIC;
    signal gmem0_ARVALID : STD_LOGIC;
    signal gmem0_ARREADY : STD_LOGIC;
    signal gmem0_RVALID : STD_LOGIC;
    signal gmem0_RREADY : STD_LOGIC;
    signal gmem0_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem0_RLAST : STD_LOGIC;
    signal gmem0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem0_BVALID : STD_LOGIC;
    signal gmem0_BREADY : STD_LOGIC;
    signal gmem0_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem0_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_AWVALID : STD_LOGIC;
    signal gmem1_AWREADY : STD_LOGIC;
    signal gmem1_WVALID : STD_LOGIC;
    signal gmem1_WREADY : STD_LOGIC;
    signal gmem1_ARVALID : STD_LOGIC;
    signal gmem1_ARREADY : STD_LOGIC;
    signal gmem1_RVALID : STD_LOGIC;
    signal gmem1_RREADY : STD_LOGIC;
    signal gmem1_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem1_RLAST : STD_LOGIC;
    signal gmem1_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_BVALID : STD_LOGIC;
    signal gmem1_BREADY : STD_LOGIC;
    signal gmem1_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_AWVALID : STD_LOGIC;
    signal gmem2_AWREADY : STD_LOGIC;
    signal gmem2_WVALID : STD_LOGIC;
    signal gmem2_WREADY : STD_LOGIC;
    signal gmem2_ARVALID : STD_LOGIC;
    signal gmem2_ARREADY : STD_LOGIC;
    signal gmem2_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_RVALID : STD_LOGIC;
    signal gmem2_RREADY : STD_LOGIC;
    signal gmem2_RDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem2_RLAST : STD_LOGIC;
    signal gmem2_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem2_BVALID : STD_LOGIC;
    signal gmem2_BREADY : STD_LOGIC;
    signal gmem2_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem2_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal kvstatsA5_fu_198_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal kvstatsA5_reg_366 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_cast_fu_208_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_cast_reg_371 : STD_LOGIC_VECTOR (29 downto 0);
    signal kvdestdramA_V3_reg_381 : STD_LOGIC_VECTOR (25 downto 0);
    signal kvsourcedramA_V1_reg_386 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln3244_fu_232_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln3244_reg_391 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln3247_fu_248_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln3247_reg_402 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln3248_fu_263_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln3248_reg_413 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln3249_fu_278_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln3249_reg_424 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln3251_fu_293_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln3251_reg_435 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln3255_fu_308_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln3255_reg_446 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln3257_fu_323_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln3257_reg_457 : STD_LOGIC_VECTOR (29 downto 0);
    signal globalparams_runkern_fu_338_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal globalparams_runkern_reg_468 : STD_LOGIC_VECTOR (31 downto 0);
    signal globalparams_partiti_fu_342_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal globalparams_partiti_reg_473 : STD_LOGIC_VECTOR (31 downto 0);
    signal globalparams_reducec_fu_346_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal globalparams_reducec_reg_478 : STD_LOGIC_VECTOR (31 downto 0);
    signal globalparams_vbegin_fu_350_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal globalparams_vbegin_reg_483 : STD_LOGIC_VECTOR (31 downto 0);
    signal globalparams_treedep_fu_354_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal globalparams_treedep_reg_488 : STD_LOGIC_VECTOR (31 downto 0);
    signal globalparams_runsize_fu_358_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal globalparams_runsize_reg_493 : STD_LOGIC_VECTOR (31 downto 0);
    signal globalparams_statsal_fu_362_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal globalparams_statsal_reg_498 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_partitionandreduce0_fu_178_ap_start : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_ap_done : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_ap_idle : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_ap_ready : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWVALID : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WVALID : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WLAST : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARVALID : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_RREADY : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_BREADY : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWVALID : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WVALID : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WLAST : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARVALID : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_RREADY : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_BREADY : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_AWVALID : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_WVALID : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_WLAST : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_ARVALID : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_RREADY : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_m_axi_kvstats_BREADY : STD_LOGIC;
    signal grp_partitionandreduce0_fu_178_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal zext_ln3244_fu_238_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln3247_fu_253_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln3248_fu_268_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln3249_fu_283_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln3251_fu_298_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln3255_fu_313_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln3257_fu_328_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);

    component partitionandreduce0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_kvsourcedram_V_AWVALID : OUT STD_LOGIC;
        m_axi_kvsourcedram_V_AWREADY : IN STD_LOGIC;
        m_axi_kvsourcedram_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kvsourcedram_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvsourcedram_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kvsourcedram_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kvsourcedram_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvsourcedram_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvsourcedram_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvsourcedram_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kvsourcedram_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvsourcedram_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvsourcedram_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvsourcedram_V_WVALID : OUT STD_LOGIC;
        m_axi_kvsourcedram_V_WREADY : IN STD_LOGIC;
        m_axi_kvsourcedram_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_kvsourcedram_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kvsourcedram_V_WLAST : OUT STD_LOGIC;
        m_axi_kvsourcedram_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvsourcedram_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvsourcedram_V_ARVALID : OUT STD_LOGIC;
        m_axi_kvsourcedram_V_ARREADY : IN STD_LOGIC;
        m_axi_kvsourcedram_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kvsourcedram_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvsourcedram_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kvsourcedram_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kvsourcedram_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvsourcedram_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvsourcedram_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvsourcedram_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kvsourcedram_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvsourcedram_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvsourcedram_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvsourcedram_V_RVALID : IN STD_LOGIC;
        m_axi_kvsourcedram_V_RREADY : OUT STD_LOGIC;
        m_axi_kvsourcedram_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_kvsourcedram_V_RLAST : IN STD_LOGIC;
        m_axi_kvsourcedram_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvsourcedram_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvsourcedram_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvsourcedram_V_BVALID : IN STD_LOGIC;
        m_axi_kvsourcedram_V_BREADY : OUT STD_LOGIC;
        m_axi_kvsourcedram_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvsourcedram_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvsourcedram_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        kvsourcedram_V_offset : IN STD_LOGIC_VECTOR (25 downto 0);
        m_axi_kvdestdram_V_AWVALID : OUT STD_LOGIC;
        m_axi_kvdestdram_V_AWREADY : IN STD_LOGIC;
        m_axi_kvdestdram_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kvdestdram_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdestdram_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kvdestdram_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kvdestdram_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvdestdram_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvdestdram_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvdestdram_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kvdestdram_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvdestdram_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvdestdram_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdestdram_V_WVALID : OUT STD_LOGIC;
        m_axi_kvdestdram_V_WREADY : IN STD_LOGIC;
        m_axi_kvdestdram_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_kvdestdram_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kvdestdram_V_WLAST : OUT STD_LOGIC;
        m_axi_kvdestdram_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdestdram_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdestdram_V_ARVALID : OUT STD_LOGIC;
        m_axi_kvdestdram_V_ARREADY : IN STD_LOGIC;
        m_axi_kvdestdram_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kvdestdram_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdestdram_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kvdestdram_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kvdestdram_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvdestdram_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvdestdram_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvdestdram_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kvdestdram_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvdestdram_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvdestdram_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdestdram_V_RVALID : IN STD_LOGIC;
        m_axi_kvdestdram_V_RREADY : OUT STD_LOGIC;
        m_axi_kvdestdram_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_kvdestdram_V_RLAST : IN STD_LOGIC;
        m_axi_kvdestdram_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdestdram_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdestdram_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvdestdram_V_BVALID : IN STD_LOGIC;
        m_axi_kvdestdram_V_BREADY : OUT STD_LOGIC;
        m_axi_kvdestdram_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvdestdram_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvdestdram_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        kvdestdram_V_offset : IN STD_LOGIC_VECTOR (25 downto 0);
        m_axi_kvstats_AWVALID : OUT STD_LOGIC;
        m_axi_kvstats_AWREADY : IN STD_LOGIC;
        m_axi_kvstats_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kvstats_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvstats_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kvstats_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kvstats_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvstats_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvstats_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvstats_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kvstats_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvstats_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvstats_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvstats_WVALID : OUT STD_LOGIC;
        m_axi_kvstats_WREADY : IN STD_LOGIC;
        m_axi_kvstats_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kvstats_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_kvstats_WLAST : OUT STD_LOGIC;
        m_axi_kvstats_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvstats_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvstats_ARVALID : OUT STD_LOGIC;
        m_axi_kvstats_ARREADY : IN STD_LOGIC;
        m_axi_kvstats_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kvstats_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvstats_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kvstats_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kvstats_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvstats_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvstats_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvstats_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kvstats_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvstats_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kvstats_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvstats_RVALID : IN STD_LOGIC;
        m_axi_kvstats_RREADY : OUT STD_LOGIC;
        m_axi_kvstats_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kvstats_RLAST : IN STD_LOGIC;
        m_axi_kvstats_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvstats_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvstats_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvstats_BVALID : IN STD_LOGIC;
        m_axi_kvstats_BREADY : OUT STD_LOGIC;
        m_axi_kvstats_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kvstats_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kvstats_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        kvstats_offset : IN STD_LOGIC_VECTOR (28 downto 0);
        globalparams_runkernelcommand : IN STD_LOGIC_VECTOR (31 downto 0);
        globalparams_partitioncommand : IN STD_LOGIC_VECTOR (31 downto 0);
        globalparams_reducecommand : IN STD_LOGIC_VECTOR (31 downto 0);
        globalparams_treedepth : IN STD_LOGIC_VECTOR (31 downto 0);
        globalparams_runsize : IN STD_LOGIC_VECTOR (31 downto 0);
        globalparams_vbegin : IN STD_LOGIC_VECTOR (31 downto 0);
        globalparams_statsalreadycollected : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component topkernel_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        kvsourcedramA_V : OUT STD_LOGIC_VECTOR (31 downto 0);
        kvdestdramA_V : OUT STD_LOGIC_VECTOR (31 downto 0);
        kvstatsA : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component topkernel_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component topkernel_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component topkernel_gmem2_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    topkernel_control_s_axi_U : component topkernel_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        kvsourcedramA_V => kvsourcedramA_V,
        kvdestdramA_V => kvdestdramA_V,
        kvstatsA => kvstatsA);

    topkernel_gmem0_m_axi_U : component topkernel_gmem0_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 512,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 64,
        MAX_WRITE_BURST_LENGTH => 64,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem0_ARVALID,
        I_ARREADY => gmem0_ARREADY,
        I_ARADDR => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARADDR,
        I_ARID => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARID,
        I_ARLEN => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARLEN,
        I_ARSIZE => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARSIZE,
        I_ARLOCK => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARLOCK,
        I_ARCACHE => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARCACHE,
        I_ARQOS => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARQOS,
        I_ARPROT => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARPROT,
        I_ARUSER => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARUSER,
        I_ARBURST => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARBURST,
        I_ARREGION => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARREGION,
        I_RVALID => gmem0_RVALID,
        I_RREADY => gmem0_RREADY,
        I_RDATA => gmem0_RDATA,
        I_RID => gmem0_RID,
        I_RUSER => gmem0_RUSER,
        I_RRESP => gmem0_RRESP,
        I_RLAST => gmem0_RLAST,
        I_AWVALID => gmem0_AWVALID,
        I_AWREADY => gmem0_AWREADY,
        I_AWADDR => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWADDR,
        I_AWID => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWID,
        I_AWLEN => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWLEN,
        I_AWSIZE => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWSIZE,
        I_AWLOCK => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWLOCK,
        I_AWCACHE => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWCACHE,
        I_AWQOS => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWQOS,
        I_AWPROT => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWPROT,
        I_AWUSER => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWUSER,
        I_AWBURST => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWBURST,
        I_AWREGION => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWREGION,
        I_WVALID => gmem0_WVALID,
        I_WREADY => gmem0_WREADY,
        I_WDATA => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WDATA,
        I_WID => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WID,
        I_WUSER => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WUSER,
        I_WLAST => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WLAST,
        I_WSTRB => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WSTRB,
        I_BVALID => gmem0_BVALID,
        I_BREADY => gmem0_BREADY,
        I_BRESP => gmem0_BRESP,
        I_BID => gmem0_BID,
        I_BUSER => gmem0_BUSER);

    topkernel_gmem1_m_axi_U : component topkernel_gmem1_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 512,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 64,
        MAX_WRITE_BURST_LENGTH => 64,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem1_ARVALID,
        I_ARREADY => gmem1_ARREADY,
        I_ARADDR => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARADDR,
        I_ARID => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARID,
        I_ARLEN => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARLEN,
        I_ARSIZE => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARSIZE,
        I_ARLOCK => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARLOCK,
        I_ARCACHE => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARCACHE,
        I_ARQOS => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARQOS,
        I_ARPROT => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARPROT,
        I_ARUSER => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARUSER,
        I_ARBURST => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARBURST,
        I_ARREGION => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARREGION,
        I_RVALID => gmem1_RVALID,
        I_RREADY => gmem1_RREADY,
        I_RDATA => gmem1_RDATA,
        I_RID => gmem1_RID,
        I_RUSER => gmem1_RUSER,
        I_RRESP => gmem1_RRESP,
        I_RLAST => gmem1_RLAST,
        I_AWVALID => gmem1_AWVALID,
        I_AWREADY => gmem1_AWREADY,
        I_AWADDR => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWADDR,
        I_AWID => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWID,
        I_AWLEN => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWLEN,
        I_AWSIZE => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWSIZE,
        I_AWLOCK => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWLOCK,
        I_AWCACHE => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWCACHE,
        I_AWQOS => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWQOS,
        I_AWPROT => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWPROT,
        I_AWUSER => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWUSER,
        I_AWBURST => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWBURST,
        I_AWREGION => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWREGION,
        I_WVALID => gmem1_WVALID,
        I_WREADY => gmem1_WREADY,
        I_WDATA => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WDATA,
        I_WID => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WID,
        I_WUSER => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WUSER,
        I_WLAST => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WLAST,
        I_WSTRB => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WSTRB,
        I_BVALID => gmem1_BVALID,
        I_BREADY => gmem1_BREADY,
        I_BRESP => gmem1_BRESP,
        I_BID => gmem1_BID,
        I_BUSER => gmem1_BUSER);

    topkernel_gmem2_m_axi_U : component topkernel_gmem2_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 64,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM2_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM2_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM2_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM2_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM2_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM2_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM2_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM2_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM2_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM2_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM2_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem2_AWVALID,
        AWREADY => m_axi_gmem2_AWREADY,
        AWADDR => m_axi_gmem2_AWADDR,
        AWID => m_axi_gmem2_AWID,
        AWLEN => m_axi_gmem2_AWLEN,
        AWSIZE => m_axi_gmem2_AWSIZE,
        AWBURST => m_axi_gmem2_AWBURST,
        AWLOCK => m_axi_gmem2_AWLOCK,
        AWCACHE => m_axi_gmem2_AWCACHE,
        AWPROT => m_axi_gmem2_AWPROT,
        AWQOS => m_axi_gmem2_AWQOS,
        AWREGION => m_axi_gmem2_AWREGION,
        AWUSER => m_axi_gmem2_AWUSER,
        WVALID => m_axi_gmem2_WVALID,
        WREADY => m_axi_gmem2_WREADY,
        WDATA => m_axi_gmem2_WDATA,
        WSTRB => m_axi_gmem2_WSTRB,
        WLAST => m_axi_gmem2_WLAST,
        WID => m_axi_gmem2_WID,
        WUSER => m_axi_gmem2_WUSER,
        ARVALID => m_axi_gmem2_ARVALID,
        ARREADY => m_axi_gmem2_ARREADY,
        ARADDR => m_axi_gmem2_ARADDR,
        ARID => m_axi_gmem2_ARID,
        ARLEN => m_axi_gmem2_ARLEN,
        ARSIZE => m_axi_gmem2_ARSIZE,
        ARBURST => m_axi_gmem2_ARBURST,
        ARLOCK => m_axi_gmem2_ARLOCK,
        ARCACHE => m_axi_gmem2_ARCACHE,
        ARPROT => m_axi_gmem2_ARPROT,
        ARQOS => m_axi_gmem2_ARQOS,
        ARREGION => m_axi_gmem2_ARREGION,
        ARUSER => m_axi_gmem2_ARUSER,
        RVALID => m_axi_gmem2_RVALID,
        RREADY => m_axi_gmem2_RREADY,
        RDATA => m_axi_gmem2_RDATA,
        RLAST => m_axi_gmem2_RLAST,
        RID => m_axi_gmem2_RID,
        RUSER => m_axi_gmem2_RUSER,
        RRESP => m_axi_gmem2_RRESP,
        BVALID => m_axi_gmem2_BVALID,
        BREADY => m_axi_gmem2_BREADY,
        BRESP => m_axi_gmem2_BRESP,
        BID => m_axi_gmem2_BID,
        BUSER => m_axi_gmem2_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem2_ARVALID,
        I_ARREADY => gmem2_ARREADY,
        I_ARADDR => gmem2_ARADDR,
        I_ARID => gmem2_ARID,
        I_ARLEN => gmem2_ARLEN,
        I_ARSIZE => gmem2_ARSIZE,
        I_ARLOCK => gmem2_ARLOCK,
        I_ARCACHE => gmem2_ARCACHE,
        I_ARQOS => gmem2_ARQOS,
        I_ARPROT => gmem2_ARPROT,
        I_ARUSER => gmem2_ARUSER,
        I_ARBURST => gmem2_ARBURST,
        I_ARREGION => gmem2_ARREGION,
        I_RVALID => gmem2_RVALID,
        I_RREADY => gmem2_RREADY,
        I_RDATA => gmem2_RDATA,
        I_RID => gmem2_RID,
        I_RUSER => gmem2_RUSER,
        I_RRESP => gmem2_RRESP,
        I_RLAST => gmem2_RLAST,
        I_AWVALID => gmem2_AWVALID,
        I_AWREADY => gmem2_AWREADY,
        I_AWADDR => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWADDR,
        I_AWID => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWID,
        I_AWLEN => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWLEN,
        I_AWSIZE => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWSIZE,
        I_AWLOCK => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWLOCK,
        I_AWCACHE => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWCACHE,
        I_AWQOS => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWQOS,
        I_AWPROT => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWPROT,
        I_AWUSER => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWUSER,
        I_AWBURST => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWBURST,
        I_AWREGION => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWREGION,
        I_WVALID => gmem2_WVALID,
        I_WREADY => gmem2_WREADY,
        I_WDATA => grp_partitionandreduce0_fu_178_m_axi_kvstats_WDATA,
        I_WID => grp_partitionandreduce0_fu_178_m_axi_kvstats_WID,
        I_WUSER => grp_partitionandreduce0_fu_178_m_axi_kvstats_WUSER,
        I_WLAST => grp_partitionandreduce0_fu_178_m_axi_kvstats_WLAST,
        I_WSTRB => grp_partitionandreduce0_fu_178_m_axi_kvstats_WSTRB,
        I_BVALID => gmem2_BVALID,
        I_BREADY => gmem2_BREADY,
        I_BRESP => gmem2_BRESP,
        I_BID => gmem2_BID,
        I_BUSER => gmem2_BUSER);

    grp_partitionandreduce0_fu_178 : component partitionandreduce0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_partitionandreduce0_fu_178_ap_start,
        ap_done => grp_partitionandreduce0_fu_178_ap_done,
        ap_idle => grp_partitionandreduce0_fu_178_ap_idle,
        ap_ready => grp_partitionandreduce0_fu_178_ap_ready,
        m_axi_kvsourcedram_V_AWVALID => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWVALID,
        m_axi_kvsourcedram_V_AWREADY => gmem0_AWREADY,
        m_axi_kvsourcedram_V_AWADDR => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWADDR,
        m_axi_kvsourcedram_V_AWID => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWID,
        m_axi_kvsourcedram_V_AWLEN => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWLEN,
        m_axi_kvsourcedram_V_AWSIZE => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWSIZE,
        m_axi_kvsourcedram_V_AWBURST => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWBURST,
        m_axi_kvsourcedram_V_AWLOCK => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWLOCK,
        m_axi_kvsourcedram_V_AWCACHE => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWCACHE,
        m_axi_kvsourcedram_V_AWPROT => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWPROT,
        m_axi_kvsourcedram_V_AWQOS => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWQOS,
        m_axi_kvsourcedram_V_AWREGION => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWREGION,
        m_axi_kvsourcedram_V_AWUSER => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWUSER,
        m_axi_kvsourcedram_V_WVALID => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WVALID,
        m_axi_kvsourcedram_V_WREADY => gmem0_WREADY,
        m_axi_kvsourcedram_V_WDATA => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WDATA,
        m_axi_kvsourcedram_V_WSTRB => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WSTRB,
        m_axi_kvsourcedram_V_WLAST => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WLAST,
        m_axi_kvsourcedram_V_WID => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WID,
        m_axi_kvsourcedram_V_WUSER => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WUSER,
        m_axi_kvsourcedram_V_ARVALID => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARVALID,
        m_axi_kvsourcedram_V_ARREADY => gmem0_ARREADY,
        m_axi_kvsourcedram_V_ARADDR => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARADDR,
        m_axi_kvsourcedram_V_ARID => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARID,
        m_axi_kvsourcedram_V_ARLEN => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARLEN,
        m_axi_kvsourcedram_V_ARSIZE => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARSIZE,
        m_axi_kvsourcedram_V_ARBURST => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARBURST,
        m_axi_kvsourcedram_V_ARLOCK => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARLOCK,
        m_axi_kvsourcedram_V_ARCACHE => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARCACHE,
        m_axi_kvsourcedram_V_ARPROT => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARPROT,
        m_axi_kvsourcedram_V_ARQOS => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARQOS,
        m_axi_kvsourcedram_V_ARREGION => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARREGION,
        m_axi_kvsourcedram_V_ARUSER => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARUSER,
        m_axi_kvsourcedram_V_RVALID => gmem0_RVALID,
        m_axi_kvsourcedram_V_RREADY => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_RREADY,
        m_axi_kvsourcedram_V_RDATA => gmem0_RDATA,
        m_axi_kvsourcedram_V_RLAST => gmem0_RLAST,
        m_axi_kvsourcedram_V_RID => gmem0_RID,
        m_axi_kvsourcedram_V_RUSER => gmem0_RUSER,
        m_axi_kvsourcedram_V_RRESP => gmem0_RRESP,
        m_axi_kvsourcedram_V_BVALID => gmem0_BVALID,
        m_axi_kvsourcedram_V_BREADY => grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_BREADY,
        m_axi_kvsourcedram_V_BRESP => gmem0_BRESP,
        m_axi_kvsourcedram_V_BID => gmem0_BID,
        m_axi_kvsourcedram_V_BUSER => gmem0_BUSER,
        kvsourcedram_V_offset => kvsourcedramA_V1_reg_386,
        m_axi_kvdestdram_V_AWVALID => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWVALID,
        m_axi_kvdestdram_V_AWREADY => gmem1_AWREADY,
        m_axi_kvdestdram_V_AWADDR => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWADDR,
        m_axi_kvdestdram_V_AWID => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWID,
        m_axi_kvdestdram_V_AWLEN => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWLEN,
        m_axi_kvdestdram_V_AWSIZE => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWSIZE,
        m_axi_kvdestdram_V_AWBURST => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWBURST,
        m_axi_kvdestdram_V_AWLOCK => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWLOCK,
        m_axi_kvdestdram_V_AWCACHE => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWCACHE,
        m_axi_kvdestdram_V_AWPROT => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWPROT,
        m_axi_kvdestdram_V_AWQOS => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWQOS,
        m_axi_kvdestdram_V_AWREGION => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWREGION,
        m_axi_kvdestdram_V_AWUSER => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWUSER,
        m_axi_kvdestdram_V_WVALID => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WVALID,
        m_axi_kvdestdram_V_WREADY => gmem1_WREADY,
        m_axi_kvdestdram_V_WDATA => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WDATA,
        m_axi_kvdestdram_V_WSTRB => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WSTRB,
        m_axi_kvdestdram_V_WLAST => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WLAST,
        m_axi_kvdestdram_V_WID => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WID,
        m_axi_kvdestdram_V_WUSER => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WUSER,
        m_axi_kvdestdram_V_ARVALID => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARVALID,
        m_axi_kvdestdram_V_ARREADY => gmem1_ARREADY,
        m_axi_kvdestdram_V_ARADDR => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARADDR,
        m_axi_kvdestdram_V_ARID => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARID,
        m_axi_kvdestdram_V_ARLEN => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARLEN,
        m_axi_kvdestdram_V_ARSIZE => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARSIZE,
        m_axi_kvdestdram_V_ARBURST => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARBURST,
        m_axi_kvdestdram_V_ARLOCK => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARLOCK,
        m_axi_kvdestdram_V_ARCACHE => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARCACHE,
        m_axi_kvdestdram_V_ARPROT => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARPROT,
        m_axi_kvdestdram_V_ARQOS => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARQOS,
        m_axi_kvdestdram_V_ARREGION => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARREGION,
        m_axi_kvdestdram_V_ARUSER => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARUSER,
        m_axi_kvdestdram_V_RVALID => gmem1_RVALID,
        m_axi_kvdestdram_V_RREADY => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_RREADY,
        m_axi_kvdestdram_V_RDATA => gmem1_RDATA,
        m_axi_kvdestdram_V_RLAST => gmem1_RLAST,
        m_axi_kvdestdram_V_RID => gmem1_RID,
        m_axi_kvdestdram_V_RUSER => gmem1_RUSER,
        m_axi_kvdestdram_V_RRESP => gmem1_RRESP,
        m_axi_kvdestdram_V_BVALID => gmem1_BVALID,
        m_axi_kvdestdram_V_BREADY => grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_BREADY,
        m_axi_kvdestdram_V_BRESP => gmem1_BRESP,
        m_axi_kvdestdram_V_BID => gmem1_BID,
        m_axi_kvdestdram_V_BUSER => gmem1_BUSER,
        kvdestdram_V_offset => kvdestdramA_V3_reg_381,
        m_axi_kvstats_AWVALID => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWVALID,
        m_axi_kvstats_AWREADY => gmem2_AWREADY,
        m_axi_kvstats_AWADDR => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWADDR,
        m_axi_kvstats_AWID => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWID,
        m_axi_kvstats_AWLEN => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWLEN,
        m_axi_kvstats_AWSIZE => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWSIZE,
        m_axi_kvstats_AWBURST => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWBURST,
        m_axi_kvstats_AWLOCK => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWLOCK,
        m_axi_kvstats_AWCACHE => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWCACHE,
        m_axi_kvstats_AWPROT => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWPROT,
        m_axi_kvstats_AWQOS => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWQOS,
        m_axi_kvstats_AWREGION => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWREGION,
        m_axi_kvstats_AWUSER => grp_partitionandreduce0_fu_178_m_axi_kvstats_AWUSER,
        m_axi_kvstats_WVALID => grp_partitionandreduce0_fu_178_m_axi_kvstats_WVALID,
        m_axi_kvstats_WREADY => gmem2_WREADY,
        m_axi_kvstats_WDATA => grp_partitionandreduce0_fu_178_m_axi_kvstats_WDATA,
        m_axi_kvstats_WSTRB => grp_partitionandreduce0_fu_178_m_axi_kvstats_WSTRB,
        m_axi_kvstats_WLAST => grp_partitionandreduce0_fu_178_m_axi_kvstats_WLAST,
        m_axi_kvstats_WID => grp_partitionandreduce0_fu_178_m_axi_kvstats_WID,
        m_axi_kvstats_WUSER => grp_partitionandreduce0_fu_178_m_axi_kvstats_WUSER,
        m_axi_kvstats_ARVALID => grp_partitionandreduce0_fu_178_m_axi_kvstats_ARVALID,
        m_axi_kvstats_ARREADY => gmem2_ARREADY,
        m_axi_kvstats_ARADDR => grp_partitionandreduce0_fu_178_m_axi_kvstats_ARADDR,
        m_axi_kvstats_ARID => grp_partitionandreduce0_fu_178_m_axi_kvstats_ARID,
        m_axi_kvstats_ARLEN => grp_partitionandreduce0_fu_178_m_axi_kvstats_ARLEN,
        m_axi_kvstats_ARSIZE => grp_partitionandreduce0_fu_178_m_axi_kvstats_ARSIZE,
        m_axi_kvstats_ARBURST => grp_partitionandreduce0_fu_178_m_axi_kvstats_ARBURST,
        m_axi_kvstats_ARLOCK => grp_partitionandreduce0_fu_178_m_axi_kvstats_ARLOCK,
        m_axi_kvstats_ARCACHE => grp_partitionandreduce0_fu_178_m_axi_kvstats_ARCACHE,
        m_axi_kvstats_ARPROT => grp_partitionandreduce0_fu_178_m_axi_kvstats_ARPROT,
        m_axi_kvstats_ARQOS => grp_partitionandreduce0_fu_178_m_axi_kvstats_ARQOS,
        m_axi_kvstats_ARREGION => grp_partitionandreduce0_fu_178_m_axi_kvstats_ARREGION,
        m_axi_kvstats_ARUSER => grp_partitionandreduce0_fu_178_m_axi_kvstats_ARUSER,
        m_axi_kvstats_RVALID => gmem2_RVALID,
        m_axi_kvstats_RREADY => grp_partitionandreduce0_fu_178_m_axi_kvstats_RREADY,
        m_axi_kvstats_RDATA => gmem2_RDATA,
        m_axi_kvstats_RLAST => gmem2_RLAST,
        m_axi_kvstats_RID => gmem2_RID,
        m_axi_kvstats_RUSER => gmem2_RUSER,
        m_axi_kvstats_RRESP => gmem2_RRESP,
        m_axi_kvstats_BVALID => gmem2_BVALID,
        m_axi_kvstats_BREADY => grp_partitionandreduce0_fu_178_m_axi_kvstats_BREADY,
        m_axi_kvstats_BRESP => gmem2_BRESP,
        m_axi_kvstats_BID => gmem2_BID,
        m_axi_kvstats_BUSER => gmem2_BUSER,
        kvstats_offset => kvstatsA5_reg_366,
        globalparams_runkernelcommand => globalparams_runkern_reg_468,
        globalparams_partitioncommand => globalparams_partiti_reg_473,
        globalparams_reducecommand => globalparams_reducec_reg_478,
        globalparams_treedepth => globalparams_treedep_reg_488,
        globalparams_runsize => globalparams_runsize_reg_493,
        globalparams_vbegin => globalparams_vbegin_reg_483,
        globalparams_statsalreadycollected => globalparams_statsal_reg_498);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_partitionandreduce0_fu_178_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_partitionandreduce0_fu_178_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_partitionandreduce0_fu_178_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_partitionandreduce0_fu_178_ap_ready = ap_const_logic_1)) then 
                    grp_partitionandreduce0_fu_178_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                add_ln3244_reg_391 <= add_ln3244_fu_232_p2;
                kvdestdramA_V3_reg_381 <= kvdestdramA_V(31 downto 6);
                kvsourcedramA_V1_reg_386 <= kvsourcedramA_V(31 downto 6);
                kvstatsA5_reg_366 <= kvstatsA(31 downto 3);
                    p_cast_reg_371(28 downto 0) <= p_cast_fu_208_p1(28 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                add_ln3247_reg_402 <= add_ln3247_fu_248_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                add_ln3248_reg_413 <= add_ln3248_fu_263_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                add_ln3249_reg_424 <= add_ln3249_fu_278_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                add_ln3251_reg_435 <= add_ln3251_fu_293_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                add_ln3255_reg_446 <= add_ln3255_fu_308_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                add_ln3257_reg_457 <= add_ln3257_fu_323_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                globalparams_partiti_reg_473 <= globalparams_partiti_fu_342_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                globalparams_reducec_reg_478 <= globalparams_reducec_fu_346_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                globalparams_runkern_reg_468 <= globalparams_runkern_fu_338_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                globalparams_runsize_reg_493 <= globalparams_runsize_fu_358_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                globalparams_statsal_reg_498 <= globalparams_statsal_fu_362_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                globalparams_treedep_reg_488 <= globalparams_treedep_fu_354_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                globalparams_vbegin_reg_483 <= globalparams_vbegin_fu_350_p1;
            end if;
        end if;
    end process;
    p_cast_reg_371(29) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state6, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state14, ap_CS_fsm_state8, ap_CS_fsm_state15, gmem2_ARREADY, gmem2_RVALID, grp_partitionandreduce0_fu_178_ap_done, ap_CS_fsm_state17)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_partitionandreduce0_fu_178_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln3244_fu_232_p2 <= std_logic_vector(unsigned(ap_const_lv30_1) + unsigned(p_cast_fu_208_p1));
    add_ln3247_fu_248_p2 <= std_logic_vector(unsigned(ap_const_lv30_4) + unsigned(p_cast_reg_371));
    add_ln3248_fu_263_p2 <= std_logic_vector(unsigned(ap_const_lv30_5) + unsigned(p_cast_reg_371));
    add_ln3249_fu_278_p2 <= std_logic_vector(unsigned(ap_const_lv30_9) + unsigned(p_cast_reg_371));
    add_ln3251_fu_293_p2 <= std_logic_vector(unsigned(ap_const_lv30_B) + unsigned(p_cast_reg_371));
    add_ln3255_fu_308_p2 <= std_logic_vector(unsigned(ap_const_lv30_E) + unsigned(p_cast_reg_371));
    add_ln3257_fu_323_p2 <= std_logic_vector(unsigned(ap_const_lv30_11) + unsigned(p_cast_reg_371));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(grp_partitionandreduce0_fu_178_ap_done, ap_CS_fsm_state17)
    begin
        if (((grp_partitionandreduce0_fu_178_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_partitionandreduce0_fu_178_ap_done, ap_CS_fsm_state17)
    begin
        if (((grp_partitionandreduce0_fu_178_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    globalparams_partiti_fu_342_p1 <= gmem2_RDATA(32 - 1 downto 0);
    globalparams_reducec_fu_346_p1 <= gmem2_RDATA(32 - 1 downto 0);
    globalparams_runkern_fu_338_p1 <= gmem2_RDATA(32 - 1 downto 0);
    globalparams_runsize_fu_358_p1 <= gmem2_RDATA(32 - 1 downto 0);
    globalparams_statsal_fu_362_p1 <= gmem2_RDATA(32 - 1 downto 0);
    globalparams_treedep_fu_354_p1 <= gmem2_RDATA(32 - 1 downto 0);
    globalparams_vbegin_fu_350_p1 <= gmem2_RDATA(32 - 1 downto 0);

    gmem0_ARVALID_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARVALID, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem0_ARVALID <= grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_ARVALID;
        else 
            gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_AWVALID_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWVALID, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem0_AWVALID <= grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_AWVALID;
        else 
            gmem0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_BREADY_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_BREADY, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem0_BREADY <= grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_BREADY;
        else 
            gmem0_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_RREADY_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_RREADY, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem0_RREADY <= grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_RREADY;
        else 
            gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_WVALID_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WVALID, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem0_WVALID <= grp_partitionandreduce0_fu_178_m_axi_kvsourcedram_V_WVALID;
        else 
            gmem0_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_ARVALID_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARVALID, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem1_ARVALID <= grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_ARVALID;
        else 
            gmem1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_AWVALID_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWVALID, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem1_AWVALID <= grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_AWVALID;
        else 
            gmem1_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_BREADY_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_BREADY, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem1_BREADY <= grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_BREADY;
        else 
            gmem1_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_RREADY_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_RREADY, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem1_RREADY <= grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_RREADY;
        else 
            gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_WVALID_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WVALID, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem1_WVALID <= grp_partitionandreduce0_fu_178_m_axi_kvdestdram_V_WVALID;
        else 
            gmem1_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_ARADDR_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, gmem2_ARREADY, grp_partitionandreduce0_fu_178_m_axi_kvstats_ARADDR, ap_CS_fsm_state16, ap_CS_fsm_state17, zext_ln3244_fu_238_p1, zext_ln3247_fu_253_p1, zext_ln3248_fu_268_p1, zext_ln3249_fu_283_p1, zext_ln3251_fu_298_p1, zext_ln3255_fu_313_p1, zext_ln3257_fu_328_p1)
    begin
        if (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            gmem2_ARADDR <= zext_ln3257_fu_328_p1(32 - 1 downto 0);
        elsif (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            gmem2_ARADDR <= zext_ln3255_fu_313_p1(32 - 1 downto 0);
        elsif (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            gmem2_ARADDR <= zext_ln3251_fu_298_p1(32 - 1 downto 0);
        elsif (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem2_ARADDR <= zext_ln3249_fu_283_p1(32 - 1 downto 0);
        elsif (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem2_ARADDR <= zext_ln3248_fu_268_p1(32 - 1 downto 0);
        elsif (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem2_ARADDR <= zext_ln3247_fu_253_p1(32 - 1 downto 0);
        elsif (((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem2_ARADDR <= zext_ln3244_fu_238_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem2_ARADDR <= grp_partitionandreduce0_fu_178_m_axi_kvstats_ARADDR;
        else 
            gmem2_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem2_ARBURST_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvstats_ARBURST, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem2_ARBURST <= grp_partitionandreduce0_fu_178_m_axi_kvstats_ARBURST;
        else 
            gmem2_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    gmem2_ARCACHE_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvstats_ARCACHE, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem2_ARCACHE <= grp_partitionandreduce0_fu_178_m_axi_kvstats_ARCACHE;
        else 
            gmem2_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    gmem2_ARID_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvstats_ARID, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem2_ARID <= grp_partitionandreduce0_fu_178_m_axi_kvstats_ARID;
        else 
            gmem2_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    gmem2_ARLEN_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, gmem2_ARREADY, grp_partitionandreduce0_fu_178_m_axi_kvstats_ARLEN, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if ((((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            gmem2_ARLEN <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem2_ARLEN <= grp_partitionandreduce0_fu_178_m_axi_kvstats_ARLEN;
        else 
            gmem2_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem2_ARLOCK_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvstats_ARLOCK, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem2_ARLOCK <= grp_partitionandreduce0_fu_178_m_axi_kvstats_ARLOCK;
        else 
            gmem2_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    gmem2_ARPROT_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvstats_ARPROT, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem2_ARPROT <= grp_partitionandreduce0_fu_178_m_axi_kvstats_ARPROT;
        else 
            gmem2_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    gmem2_ARQOS_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvstats_ARQOS, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem2_ARQOS <= grp_partitionandreduce0_fu_178_m_axi_kvstats_ARQOS;
        else 
            gmem2_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    gmem2_ARREGION_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvstats_ARREGION, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem2_ARREGION <= grp_partitionandreduce0_fu_178_m_axi_kvstats_ARREGION;
        else 
            gmem2_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    gmem2_ARSIZE_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvstats_ARSIZE, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem2_ARSIZE <= grp_partitionandreduce0_fu_178_m_axi_kvstats_ARSIZE;
        else 
            gmem2_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    gmem2_ARUSER_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvstats_ARUSER, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem2_ARUSER <= grp_partitionandreduce0_fu_178_m_axi_kvstats_ARUSER;
        else 
            gmem2_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    gmem2_ARVALID_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, gmem2_ARREADY, grp_partitionandreduce0_fu_178_m_axi_kvstats_ARVALID, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if ((((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((gmem2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            gmem2_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem2_ARVALID <= grp_partitionandreduce0_fu_178_m_axi_kvstats_ARVALID;
        else 
            gmem2_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_AWVALID_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvstats_AWVALID, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem2_AWVALID <= grp_partitionandreduce0_fu_178_m_axi_kvstats_AWVALID;
        else 
            gmem2_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_BREADY_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvstats_BREADY, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem2_BREADY <= grp_partitionandreduce0_fu_178_m_axi_kvstats_BREADY;
        else 
            gmem2_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_RREADY_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, gmem2_RVALID, grp_partitionandreduce0_fu_178_m_axi_kvstats_RREADY, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if ((((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((gmem2_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            gmem2_RREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem2_RREADY <= grp_partitionandreduce0_fu_178_m_axi_kvstats_RREADY;
        else 
            gmem2_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_WVALID_assign_proc : process(grp_partitionandreduce0_fu_178_m_axi_kvstats_WVALID, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem2_WVALID <= grp_partitionandreduce0_fu_178_m_axi_kvstats_WVALID;
        else 
            gmem2_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_blk_n_AR_assign_proc : process(m_axi_gmem2_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem2_blk_n_AR <= m_axi_gmem2_ARREADY;
        else 
            gmem2_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem2_blk_n_R_assign_proc : process(m_axi_gmem2_RVALID, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            gmem2_blk_n_R <= m_axi_gmem2_RVALID;
        else 
            gmem2_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    grp_partitionandreduce0_fu_178_ap_start <= grp_partitionandreduce0_fu_178_ap_start_reg;
    kvstatsA5_fu_198_p4 <= kvstatsA(31 downto 3);
    p_cast_fu_208_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kvstatsA5_fu_198_p4),30));
    zext_ln3244_fu_238_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln3244_reg_391),64));
    zext_ln3247_fu_253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln3247_reg_402),64));
    zext_ln3248_fu_268_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln3248_reg_413),64));
    zext_ln3249_fu_283_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln3249_reg_424),64));
    zext_ln3251_fu_298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln3251_reg_435),64));
    zext_ln3255_fu_313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln3255_reg_446),64));
    zext_ln3257_fu_328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln3257_reg_457),64));
end behav;
